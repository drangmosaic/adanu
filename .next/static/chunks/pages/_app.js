_N_E =
(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _extends; });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

module.exports = _isNativeReflectConstruct;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/reset.css":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./styles/reset.css ***!
  \*****************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, "/*\n\tHTML5 Reset :: style.css\n\t----------------------------------------------------------\n\tWe have learned much from/been inspired by/taken code where offered from:\n\t\n\tEric Meyer\t\t\t\t\t:: http://meyerweb.com\n\tHTML5 Doctor\t\t\t\t:: http://html5doctor.com\n\tand the HTML5 Boilerplate\t:: http://html5boilerplate.com\n\t\n-------------------------------------------------------------------------------*/\n\n/* Let's default this puppy out\n-------------------------------------------------------------------------------*/\n\nhtml, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont-weight: normal;\n\tvertical-align: baseline;\n\tbackground: transparent;\n}\n\narticle, aside, figure, footer, header, nav, section, details, summary {display: block;}\n\n/* consider resetting the default cursor: https://gist.github.com/murtaugh/5247154 */\n\n/* Apply a natural box layout model to all elements: http://paulirish.com/2012/box-sizing-border-box-ftw/ */\n*, *:before, *:after {box-sizing: border-box; }\n\n/* Responsive images and other embedded objects\n   Note: keeping IMG here will cause problems if you're using foreground images as sprites.\n   If this default setting for images is causing issues, you might want to replace it with a .responsive class instead. */\nimg,\nobject,\nembed {max-width: 100%;}\n\n/* force a vertical scrollbar to prevent a jumpy page */\nhtml {overflow-y: scroll;}\n\n/* we use a lot of ULs that aren't bulleted. \n\tdon't forget to restore the bullets within content. */\nul {list-style: none;}\n\nblockquote, q {quotes: none;}\n\nblockquote:before, \nblockquote:after, \nq:before, \nq:after {content: ''; content: none;}\n\na {margin: 0; padding: 0; font-size: 100%; vertical-align: baseline; background: transparent;}\n\ndel {text-decoration: line-through;}\n\nabbr[title], dfn[title] {border-bottom: 1px dotted #000; cursor: help;}\n\n/* tables still need cellspacing=\"0\" in the markup */\ntable {border-collapse: collapse; border-spacing: 0;}\nth {font-weight: bold; vertical-align: bottom;}\ntd {font-weight: normal; vertical-align: top;}\n\nhr {display: block; height: 1px; border: 0; border-top: 1px solid #ccc; margin: 1em 0; padding: 0;}\n\ninput, select {vertical-align: middle;}\n\npre {\n    white-space: pre; /* CSS2 */\n    white-space: pre-wrap; /* CSS 2.1 */\n    white-space: pre-line; /* CSS 3 (and 2.1 as well, actually) */\n    word-wrap: break-word; /* IE */\n}\n\ninput[type=\"radio\"] {vertical-align: text-bottom;}\ninput[type=\"checkbox\"] {vertical-align: bottom;}\n.ie7 input[type=\"checkbox\"] {vertical-align: baseline;}\n.ie6 input {vertical-align: text-bottom;}\n\nselect, input, textarea {font: 99% sans-serif;}\n\ntable {font-size: inherit; font: 100%;}\n\nsmall {font-size: 85%;}\n\nstrong {font-weight: bold;}\n\ntd, td img {vertical-align: top;} \n\n/* Make sure sup and sub don't mess with your line-heights http://gist.github.com/413930 */\nsub, sup {font-size: 75%; line-height: 0; position: relative;}\nsup {top: -0.5em;}\nsub {bottom: -0.25em;}\n\n/* standardize any monospaced elements */\npre, code, kbd, samp {font-family: monospace, sans-serif;}\n\n/* hand cursor on clickable elements */\n.clickable,\nlabel, \ninput[type=button], \ninput[type=submit], \ninput[type=file], \nbutton {cursor: pointer;}\n\n/* Webkit browsers add a 2px margin outside the chrome of form elements */\nbutton, input, select, textarea {margin: 0;}\n\n/* make buttons play nice in IE */\nbutton,\ninput[type=button] {width: auto; overflow: visible;}\n \n/* scale images in IE7 more attractively */\n.ie7 img {-ms-interpolation-mode: bicubic;}\n\n/* prevent BG image flicker upon hover \n   (commented out as usage is rare, and the filter syntax messes with some pre-processors)\n.ie6 html {filter: expression(document.execCommand(\"BackgroundImageCache\", false, true));}\n*/\n\n/* let's clear some floats */\n.clearfix:before, .clearfix:after { content: \"\\0020\"; display: block; height: 0; overflow: hidden; }  \n.clearfix:after { clear: both; }  \n.clearfix { zoom: 1; }  \n", "",{"version":3,"sources":["C:/Users/SameeraSubair/Source/Repos/Adanu/styles/reset.css"],"names":[],"mappings":"AAAA;;;;;;;;;gFASgF;;AAEhF;gFACgF;;AAEhF;CACC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,mBAAmB;CACnB,wBAAwB;CACxB,uBAAuB;AACxB;;AAEA,wEAAwE,cAAc,CAAC;;AAEvF,oFAAoF;;AAEpF,2GAA2G;AAC3G,sBAAsB,sBAAsB,EAAE;;AAE9C;;yHAEyH;AACzH;;OAEO,eAAe,CAAC;;AAEvB,uDAAuD;AACvD,MAAM,kBAAkB,CAAC;;AAEzB;sDACsD;AACtD,IAAI,gBAAgB,CAAC;;AAErB,eAAe,YAAY,CAAC;;AAE5B;;;SAGS,WAAW,EAAE,aAAa,CAAC;;AAEpC,GAAG,SAAS,EAAE,UAAU,EAAE,eAAe,EAAE,wBAAwB,EAAE,uBAAuB,CAAC;;AAE7F,KAAK,6BAA6B,CAAC;;AAEnC,yBAAyB,8BAA8B,EAAE,YAAY,CAAC;;AAEtE,oDAAoD;AACpD,OAAO,yBAAyB,EAAE,iBAAiB,CAAC;AACpD,IAAI,iBAAiB,EAAE,sBAAsB,CAAC;AAC9C,IAAI,mBAAmB,EAAE,mBAAmB,CAAC;;AAE7C,IAAI,cAAc,EAAE,WAAW,EAAE,SAAS,EAAE,0BAA0B,EAAE,aAAa,EAAE,UAAU,CAAC;;AAElG,eAAe,sBAAsB,CAAC;;AAEtC;IACI,gBAAgB,EAAE,SAAS;IAC3B,qBAAqB,EAAE,YAAY;IACnC,qBAAqB,EAAE,sCAAsC;IAC7D,qBAAqB,EAAE,OAAO;AAClC;;AAEA,qBAAqB,2BAA2B,CAAC;AACjD,wBAAwB,sBAAsB,CAAC;AAC/C,6BAA6B,wBAAwB,CAAC;AACtD,YAAY,2BAA2B,CAAC;;AAExC,yBAAyB,oBAAoB,CAAC;;AAE9C,OAAO,kBAAkB,EAAE,UAAU,CAAC;;AAEtC,OAAO,cAAc,CAAC;;AAEtB,QAAQ,iBAAiB,CAAC;;AAE1B,YAAY,mBAAmB,CAAC;;AAEhC,0FAA0F;AAC1F,UAAU,cAAc,EAAE,cAAc,EAAE,kBAAkB,CAAC;AAC7D,KAAK,WAAW,CAAC;AACjB,KAAK,eAAe,CAAC;;AAErB,wCAAwC;AACxC,sBAAsB,kCAAkC,CAAC;;AAEzD,sCAAsC;AACtC;;;;;QAKQ,eAAe,CAAC;;AAExB,yEAAyE;AACzE,iCAAiC,SAAS,CAAC;;AAE3C,iCAAiC;AACjC;oBACoB,WAAW,EAAE,iBAAiB,CAAC;;AAEnD,0CAA0C;AAC1C,UAAU,+BAA+B,CAAC;;AAE1C;;;CAGC;;AAED,4BAA4B;AAC5B,oCAAoC,gBAAgB,EAAE,cAAc,EAAE,SAAS,EAAE,gBAAgB,EAAE;AACnG,kBAAkB,WAAW,EAAE;AAC/B,YAAY,OAAO,EAAE","file":"reset.css","sourcesContent":["/*\n\tHTML5 Reset :: style.css\n\t----------------------------------------------------------\n\tWe have learned much from/been inspired by/taken code where offered from:\n\t\n\tEric Meyer\t\t\t\t\t:: http://meyerweb.com\n\tHTML5 Doctor\t\t\t\t:: http://html5doctor.com\n\tand the HTML5 Boilerplate\t:: http://html5boilerplate.com\n\t\n-------------------------------------------------------------------------------*/\n\n/* Let's default this puppy out\n-------------------------------------------------------------------------------*/\n\nhtml, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont-weight: normal;\n\tvertical-align: baseline;\n\tbackground: transparent;\n}\n\narticle, aside, figure, footer, header, nav, section, details, summary {display: block;}\n\n/* consider resetting the default cursor: https://gist.github.com/murtaugh/5247154 */\n\n/* Apply a natural box layout model to all elements: http://paulirish.com/2012/box-sizing-border-box-ftw/ */\n*, *:before, *:after {box-sizing: border-box; }\n\n/* Responsive images and other embedded objects\n   Note: keeping IMG here will cause problems if you're using foreground images as sprites.\n   If this default setting for images is causing issues, you might want to replace it with a .responsive class instead. */\nimg,\nobject,\nembed {max-width: 100%;}\n\n/* force a vertical scrollbar to prevent a jumpy page */\nhtml {overflow-y: scroll;}\n\n/* we use a lot of ULs that aren't bulleted. \n\tdon't forget to restore the bullets within content. */\nul {list-style: none;}\n\nblockquote, q {quotes: none;}\n\nblockquote:before, \nblockquote:after, \nq:before, \nq:after {content: ''; content: none;}\n\na {margin: 0; padding: 0; font-size: 100%; vertical-align: baseline; background: transparent;}\n\ndel {text-decoration: line-through;}\n\nabbr[title], dfn[title] {border-bottom: 1px dotted #000; cursor: help;}\n\n/* tables still need cellspacing=\"0\" in the markup */\ntable {border-collapse: collapse; border-spacing: 0;}\nth {font-weight: bold; vertical-align: bottom;}\ntd {font-weight: normal; vertical-align: top;}\n\nhr {display: block; height: 1px; border: 0; border-top: 1px solid #ccc; margin: 1em 0; padding: 0;}\n\ninput, select {vertical-align: middle;}\n\npre {\n    white-space: pre; /* CSS2 */\n    white-space: pre-wrap; /* CSS 2.1 */\n    white-space: pre-line; /* CSS 3 (and 2.1 as well, actually) */\n    word-wrap: break-word; /* IE */\n}\n\ninput[type=\"radio\"] {vertical-align: text-bottom;}\ninput[type=\"checkbox\"] {vertical-align: bottom;}\n.ie7 input[type=\"checkbox\"] {vertical-align: baseline;}\n.ie6 input {vertical-align: text-bottom;}\n\nselect, input, textarea {font: 99% sans-serif;}\n\ntable {font-size: inherit; font: 100%;}\n\nsmall {font-size: 85%;}\n\nstrong {font-weight: bold;}\n\ntd, td img {vertical-align: top;} \n\n/* Make sure sup and sub don't mess with your line-heights http://gist.github.com/413930 */\nsub, sup {font-size: 75%; line-height: 0; position: relative;}\nsup {top: -0.5em;}\nsub {bottom: -0.25em;}\n\n/* standardize any monospaced elements */\npre, code, kbd, samp {font-family: monospace, sans-serif;}\n\n/* hand cursor on clickable elements */\n.clickable,\nlabel, \ninput[type=button], \ninput[type=submit], \ninput[type=file], \nbutton {cursor: pointer;}\n\n/* Webkit browsers add a 2px margin outside the chrome of form elements */\nbutton, input, select, textarea {margin: 0;}\n\n/* make buttons play nice in IE */\nbutton,\ninput[type=button] {width: auto; overflow: visible;}\n \n/* scale images in IE7 more attractively */\n.ie7 img {-ms-interpolation-mode: bicubic;}\n\n/* prevent BG image flicker upon hover \n   (commented out as usage is rare, and the filter syntax messes with some pre-processors)\n.ie6 html {filter: expression(document.execCommand(\"BackgroundImageCache\", false, true));}\n*/\n\n/* let's clear some floats */\n.clearfix:before, .clearfix:after { content: \"\\0020\"; display: block; height: 0; overflow: hidden; }  \n.clearfix:after { clear: both; }  \n.clearfix { zoom: 1; }  \n"]}]);
// Exports
module.exports = exports;


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/style.css":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./styles/style.css ***!
  \*****************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, "/*\nTheme Name: Adanu\nTheme URI: http://thephuse.com\nAuthor: The Phuse\nAuthor URI: http://thephuse.com/\nDescription: Adanu Wordpress Theme - 2014 - Built specifically for the page requirements of Adanu. \nVersion: 0.4\n*/\n\n/* =============== CONTENTS =============== */\n/*\n *1. Generics & Reusage\n *2. Header\n *3. Pages\n *4. Posts\n *5. Plugins\n *6. Widgets & Misc\n *7. Footer\n *8. Media Queries ( Minify once all done to increase load speed of Older iOS Safari)\n *\n*/\n/* ======================================== */\n\n\n/* ======= 1. Generics & Reusage ========== */\n\n/* Color */\n\n.yellow { background: #FFC420; }\n\n.green  { background: #2EB785; }\n\n.blue   { background: #58C8E9; }\n\n.red    { background: #EE413D; }\n\n.darkbk { background: #221E1F; }\n\n.dark   {\n        background: #231F20;\n        color: #fff;\n        }\n.dark_text, .dark_text h2 {\n        color: #231F20 !important;\n        }\n.green_fix {\n        background: #2EB785;\n        overflow: hidden;\n        }\n.blue_fix {\n        background: #58C8E9;\n        overflow: hidden;\n        }\n.yellow_fix {\n        background: #FFC420;\n        overflow: hidden;\n        \n}\n\n/* Bar Divider */\n\n.bar_clear {\n        width: 100%;\n        clear: both;\n        }\n.bar {\n        width: 130px;\n        height: 5px;\n        background: #221E1F;\n        margin-left: auto;\n        margin-right: auto;\n        }\n/* Generics */\n\n.clr_left {\n        clear: left !important;\n        }\n.flt_right {\n        float: right !important;\n        margin-right: 30px;\n}\n.flt_left {\n        float: left;\n        margin-left: 30px;\n}\n\n/* Screams \"Open Sans\" from the roof tops!  */\n\nbody,p, em, p em {\n        font-family: 'Open Sans', sans-serif;\n        font-weight: 600;\n        font-size: 15px;\n        line-height: 150%;\n    }\nbody strong, body b {\n font-weight: bold;       \n}\n.centro {text-align: center;}\n.leftro {text-align: left;}\n.rightro { text-align: right;}\n\n/* Lowercase Fix */\n\nul li, ul li a { text-transform: lowercase !important;}\n\n\n/* Capetalize */\n\n.responsive_wrap_fullwidth h2,\n.responsive_wrap_fullwidth h3,\n.dark h2 {text-transform: capitalize;}\n.leaderboard h2 {text-transform: none;}\n\n.boxer, .side_boxed {text-transform: lowercase;}\n.sider h1, \n.sider h2, \n.sider h3, \nh1.vertigo_content, \n.about .leaderboard > h2:nth-child(1), \n.about .blue h2,\n.ideas h1 { text-transform: capitalize;}\n\n/* Headings */\nh1,h2,h3,h4,h5,h6 {letter-spacing: +0.5px;}\n\nh1 {\n        font-size: 25px;\n        font-weight: 700;\n        margin-bottom: 20px;\n        }\n.row h2 {\n        font-size: 33px;\n        line-height: 46px;\n        font-weight: bold;\n        text-align: center;\n        margin-top: 25px;\n        margin-bottom: 25px;\n        }\n.row .leaderboard h2, .row .leaderboard h2 em {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        font-size: 33px;\n        }\n.leaderboard h2 {\n        line-height: 46px;\n        width: 95%;\n        max-width: 1024px;\n        font-weight: bold;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        }\n.leaderboard p {\n        max-width: 900px;\n        margin-left: auto;\n        margin-right: auto;\n}\n.vertigo h3 {\n        font-size: 26px;\n        font-weight: bold;\n        margin-bottom: 20px;\n        }\n\n/* Links */\na           {\n        text-decoration: none;   \n        }\nheader a    {\n        color: #221E1F\n        }\n\n\n/* Generic Responsive Elements */\n\n.row {   \n       width: 100%; \n       margin: 0px; \n       padding: 0px;\n       overflow: hidden;\n      }\n\n.responsive_wrap_fullwidth { \n        width: 100%; \n        max-width: 1024px; \n        margin-left: auto; \n        margin-right: auto;\n      }\n.hundered {\n       width: 100%; \n       clear: both;\n      }\n.seventy {\n        width: 68%;\n        margin: 1%;\n        float: left; \n        overflow: hidden;\n        }\n.sixty {\n        width: 58%;\n        margin: 1%;\n        float: left; \n        overflow: hidden;         \n       }\n.sixty_col {\n        width: 60%;\n        overflow: hidden;\n        float: left;\n        }\n\n.fifty {\n       width: 46%; \n       margin: 2%; \n       float: left;\n       }\n\n.forty {\n       width: 38%; \n       float: left;\n       overflow: hidden;\n       margin: 1%;\n}\n.forty_col {\n    width: 40%;\n    float: left;\n    overflow: hidden;\n}\n.thirty {\n       width: 28%; \n       margin: 1%; \n       float: left; \n       overflow: hidden; \n       text-align: center;\n       padding-top: 70px;\n       }\n.thirtythree {\n       width: 25%; \n       margin: 4%; \n       float: left; \n       overflow: hidden; \n       text-align: center;\n       padding-top: 30px;\n       }\n.thirtythree img{ \n       width: 48%; \n       clear: both;\n       }\n.sidebar {\n       width: 40%; \n       float: right; \n       clear: right; \n       overflow: hidden; \n       height: 300px;\n       }\n.text_area_left {\n       max-width: 480px; \n       float: left; \n       }\n.boxer {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        border: 5px solid #231F20;\n        padding: 2%;\n        padding-left: 6%;\n        padding-right: 6%;\n        font-size: 17px;\n        font-weight: bold;\n        display: inline-block;\n        margin-top: 20px;\n        color: #231F20;\n        -webkit-transition: all ease-in 0.2s;\n        transition: all ease-in 0.2s;\n        }\n.boxer:hover {\n        border: 5px solid #fff;\n\n        }\n.b_large {\n        /* used with .boxer */\n        font-size: 30px;\n        padding: 20px;\n        line-height: 1.2;\n        height: 130px;\n        display: block;\n        overflow: hidden;\n        margin-bottom: 25px;\n        }\n.b_large a{\n        color: #231F20; \n        vertical-align: middle; \n        line-height: 100%;\n        }\n.underline {\n        font-weight: bold;\n        border-bottom: 4px solid #fff;\n        margin-bottom: 60px;\n        display: block;\n        width: 40px;\n        float: left;\n        margin-right: 20px;\n        }\n\n/* Spacing Fixes */\n\n.in_action {\n        padding-bottom: 24px;\n        overflow: hidden;\n        }\n.in_action h2 {\n        margin-bottom: 20px;\n        }\n.home .leaderboard h2 {\n        margin-bottom: 4px !important;\n        }\n.page-id-13 .blue .thirtythree {\n        margin-top: 0px;\n        padding-top: 40px;\n        }\n.page-id-13 .in_action {\n        padding-bottom: 0px !important;\n        margin-bottom: 0px;\n        }\n.page-id-13 .leaderboard h2 {\n        margin-bottom: 0px !important;\n        }\n.hundred.vertigo_content {\n        padding-bottom: 45px;\n        overflow: hidden;\n        }\n.page-id-29 .blue h2 {\n        margin-top: 60px !important;\n        margin-bottom: 60px !important;\n        }\n        \n/* ======= 2. Header =================== */\n\n/* Site Message */\n\n.sitemessage {\n        background: #FFFDE3;\n        padding: 25px;}\n.sitemessage a.closer_x {\n        position: absolute;\n        top: 25px;\n        right: 25px;\n        font-size: 25px;\n        cursor: pointer;\n        cursor: hand;\n}\n.sitemessage a.closer_x:hover {\n        top: 26px;\n        right: 26px;  \n}\n.sitemessage h1, .sitemessage p {width: 90%;}\n\n\n/* Page Header */\n\nheader {\n        width: 100%;\n        height: 142px;\n        overflow: hidden;\n}\na.logo {\n        width: 157px;\n        height: 142px;\n        display: block;\n        overflow: hidden;\n        overflow:hidden;\n        text-indent:100%;\n        white-space:nowrap;\n        /* Revise on live Site */\n        background: url(/images/adanu_logo.png) #FFC420 no-repeat top left;\n        background-size: 100%;\n        float: left;\n  }\n\nheader nav ul {\n        padding-top: 92px;\n        width: 100%;\n        max-width: 747px;\n        overflow: hidden;\n        float: left;\n        text-align: center;\n        }\nheader nav ul li {\n        display: inline-block;\n        text-align: center;\n        padding-left: 35px;\n        padding-right: 35px;\n        height: 40px;\n        } \nheader ul li {\n        text-align: center;\n        height: 40px;\n}\nheader ul.social_icons li {\n        text-align: center;\n        float: left;\n        height: 40px;\n        \n        } \nheader ul li a {\n        font-size: 15px;\n        font-weight: bold;\n        \n}\n\nheader ul li a:hover {\n        padding-bottom: 8px;\n        border-bottom: 5px solid #fff;\n        \n}\n\nheader ul li.current-menu-item a , header ul li.current-page-ancestor a {\n        padding-bottom: 8px;\n        border-bottom: 5px solid #221E1F;\n        color: #FFFDE3;\n}\n\n.social {\n        width: 120px;\n        margin-right: 40px;\n        float: right;\n}\na.donate {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        border: 4px solid #221E1F;\n        display: block;\n        text-align: center;\n        font-weight: bold;\n        font-size: 16px;\n        margin-top: 44px;\n        }\na.donate:hover {\n        border: 4px solid #fff;\n        }\nul.social_icons {\n        width: 100%;\n        margin-top: 13px;\n        }\nul.social_icons li {\n        width: 25%;\n        padding:5px;\n        }\nul.scocial_icons {} /* WHY ? */\n\n/* Sub Menu */\n\n.submenu {\n        width: 100%;\n        height: 70px;\n        background: #231F20;\n        overflow: hidden;\n        }\n.submenu ul {\n        width: 100%;\n        margin-left: auto;\n        margin-right: auto;\n        clear: both;\n        padding-top: 18px;\n        text-align: center;\n        }\n.submenu ul li {\n        display: inline-block;\n        padding-left: 25px;\n        padding-right: 25px;\n        overflow: hidden;\n        padding-top: 15px;\n        text-align:center;\n        }\n.submenu ul li a {\n        color: #FFC420;\n        font-size: 12px;\n        font-weight: bold;\n        }\n.submenu ul li a:hover {color: #fff;}\n.submenu ul li.current-menu-item a,\n.submenu .current-post-parent a {color: #fff;}\n.submenu ul li.current-menu-item,\n.submenu .current-post-parent {\n        background: url(/images/green_arrow.png) top center no-repeat;\n        background-size: 20px 15px;\n        }\n/* Leader Board */\n\n\n.leaderboard {\n        width: 100%;\n        /* background: #231F20; */\n        padding-top: 55px;\n        padding-bottom: 55px; /* Consider Shifting to a % */\n        color: #fff;\n        }\n\n.blue .leaderboard { color: #221E1F; }\n.dark .leaderboard {color: #fff; }\n\n/* ======= 3. Pages ==================== */\n\n/* HOME */\n\n.thirtythree p {\n        font-weight: 600;\n        line-height: 160%;\n        margin-top: 20px;\n       }\n.thirtythree h2 {\n        font-size: 35px;\n        font-weight: bold;\n        margin-top: 40px;\n       }\n.thirtythree h3 {\n        font-weight: bold;\n        margin-top: 30px;\n        }\n\n.fifty_col {\n        display: block;\n        width: 50%;\n        float: left;\n        height: 270px;\n        overflow: hidden;\n\n        }\n.fifty_col a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        display: block;\n        width: 180px;\n        height: 90px;\n        text-align: center;\n        border: 5px solid #221E1F;\n        font-size: 30px;\n        font-weight: bold;\n        color: #221E1F;\n        line-height: 70px;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 90px; /* Mobile Fix Needed */\n    \n        }\n.fifty_col a:hover {\n        color: #FFF;\n        border-color: #fff;\n       }\n\n/* Approach */\n\n/* REPLACE FOR VIDEO */\n\nimg.placeholder {\n        width: 720px;\n        margin-left: auto;\n        margin-right: auto;\n        display: block;\n        padding-bottom: 25px;\n        }\n.our_model .thirty_icon {\n        width: 50%;\n        margin-left: auto;\n        margin-right: auto;\n        display: block;\n        }\n.vertigo .thirty {\n        padding: 0px;\n        }\n.vertigo .seventy {\n        padding-top: 20px;\n        }\n.vertigo p {\n        font-weight: 600;\n        }\n.in_action .fifty p, .in_action .fifty p em {\n        font-weight: bold;\n        }\n.vertigo:last-child {\n        margin-bottom: 70px;\n        }\n.our_model h2 {margin-top: 60px;}\n\n/* go */\n\n.wrap_support_heading h3 {\n        font-size: 20px;\n        margin-bottom: 20px;\n        font-weight: bold;}\n\n.itinerary_section {\n        max-width: 670px;\n        float: right;\n        }\n\n.itinerary_section h1, .sider h1 {\n        font-size: 48px;\n        font-weight: bold;\n        line-height: 48px;\n        }\n.itinerary_section p {\n        font-size: 15px;\n        font-weight: 600;\n        }\n.itinerary_section .forty {\n        float: left;\n        clear: left;\n        }\n.itinerary_row {\n        overflow: hidden;\n        width: 95%;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        border-bottom: 4px solid #333;\n        }\n.itinerary_row:last-child {\n        border-bottom: none;\n        }\n.itinerary_section h2, .sider h2 {\n        font-size: 26px;\n        font-weight: bold;\n        margin-left: 1%;\n        margin-top: 50px;\n        }\n.sider h1{\n        margin-top: 30px;\n        }\n.sider h3 {\n        font-size: 18px;\n        font-weight: bold;\n        margin-bottom: 5px;\n        }\n.sider .total_cost {\n        font-size: 16px;\n        font-weight: bold;\n        margin-top: 30px;\n        }\n.sider a.side_boxed {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        font-size: 17px;\n        font-weight: bold;\n        color: #221E1F;\n        padding: 5px 10px;\n        border: 4px solid #221E1F;\n        margin-top: 30px;\n        margin-bottom: 60px;\n        display: inline-block;\n        }\n.sider a.side_boxed:hover {\n        border-color: #fff;\n        }\n.sider {\n        max-width: 330px;\n        margin-left: 40px;\n        min-height: 200px;\n        }\n\n.cf_spacing {\n        padding: 0px;\n        margin: 0px;\n        padding-top: 80px;\n        }\n\n/* Know Before You Go */\n\nh1.vertigo_content  {\n        margin-top: 40px;\n        margin-bottom: 40px;\n        }\n.vertigo_content h3 {\n        font-size: 18px;\n        font-weight: bold;\n        margin-top: 35px;\n        width: 95%;\n        }\n.vertigo_content p {\n        width: 95%;\n        font-size: 12px;\n        margin-top: 5px;\n        margin-bottom: 10px;\n        }\n.vertigo_content a {color: #EE413D; font-size: 15px; }\n.ov_spaced {margin-top: 30px;}\n\n/* Give */\n\n.give_title h2 {\n        margin-bottom: 0px !important;\n        margin-top: 40px;\n        }\n.give_title .thirtythree {\n        padding-top: 0px;\n        }\n.hundred_model {\n        width: 90% !important;\n        }\n.give_h {\n        padding-bottom: 45px;\n        }\n.give_h h2 {\n        margin-bottom: 20px;\n        }\nul.ul_multi li {\n        width: 100%;\n        overflow: hidden;\n        padding-top: 40px;\n        padding-bottom: 40px;\n        }\nul.ul_multi li .thirty {\n        padding-top: 0px;\n        }\nul.ul_multi li:nth-child(4n+1) {background: #EE413D;}\nul.ul_multi li:nth-child(4n+2) {background: #58C8E9;}\nul.ul_multi li:nth-child(4n+3) {background: #FFC420;}\nul.ul_multi li:nth-child(4n+4) {background: #2EB785;}\nul.ul_multi h3 {\n        font-size: 33px;\n        font-weight: bold;\n        margin-top: 15px;\n        margin-bottom: 20px;\n        line-height: 35px;\n        }\nul.ul_multi li .hide_p {\n        max-height: 0px;\n        -webkit-transition: max-height 0.8s;\n\ttransition: max-height 0.8s;\n        text-transform: none !important;\n        }\nul.ul_multi li:hover .hide_p, ul.ul_multi li.hover_effect .hide_p {\n        max-height: 1000px;\n        -webkit-user-select: none;\n        -webkit-touch-callout: none;  \n        }\n.arrow_space {\n        overflow: hidden;\n        padding-left: 80px;\n        }\nul.ul_multi li:hover .arw_blk, ul.ul_multi li.hover_effect  .arw_blk {\n        transform: rotate(0deg);\n        -webkit-transform: rotate(0deg)\n        }\n.arw_blk {\n        width: 80px;\n        transition: all ease 0.3s;\n        -webkit-transition: all ease 0.3s;\n        -webkit-transform: rotate(-90deg);\n        transform: rotate(-90deg);\n        position: absolute;\n        }\n\ndiv.row:nth-child(2) > section:nth-child(1) > article:nth-child(2) > div:nth-child(1) > div:nth-child(1) > a:nth-child(1),\ndiv.row:nth-child(2) > section:nth-child(1) > article:nth-child(2) > div:nth-child(3) > div:nth-child(1) > a:nth-child(1) {line-height: 80px;}\n\n/* Support a Community */\n\np.lb_note {\n        color: #ccc !important;\n        margin-top: 45px;\n        }\n\n.lb_note .underline {\n        color: #fff;\n        }\n.support .row.yellow {\n        padding-top: 60px;\n        padding-bottom: 20px !important;\n        }\n.support .row.red {\n        padding-top: 40px;\n        padding-bottom: 60px !important;\n        }\n\n.ideas h1 {\n        font-size: 33px;\n        font-weight: bold;\n        margin-bottom: 0px;\n        }\n\n.download_box a.boxer {\n        font-size: 30px;\n        padding: 0px;\n        padding-top: 20px;\n        padding-bottom: 20px;\n        width: 250px;\n        margin-top: 30px;\n        }\n  .support   article.thirtythree:nth-child(2) > img:nth-child(1)   {width: 60%; margin-top: -28px; padding-top: 10px; margin-bottom: -25px;}\n  .ideas a {color: #221E1F; font-weight: bold; }\n  .ideas a:hover {text-decoration: underline; }\n/* About */\n\n.about .leaderboard h2:nth-child(1){\n        margin-bottom: 30px;\n        }\n.about .yellow, .about .blue {\n        padding-bottom: 30px;\n        }\nimg.inline_logo {\n        width: 314px;\n        margin-left: auto;\n        margin-right: auto;\n        display: block;\n        }\n.about .blue .fifty {margin-top: 0px;}\n\n/* Ghana */\n\n.facts {\n        margin-bottom: 40px;\n        }\n.ghana aside {\n        padding-bottom: 40px;\n        }\n.ghana_map {\n        max-height: 590px; \n        margin-left: 40px; \n        margin-top: 40px;\n        }\n.ghana .boxer {\n        padding-top: 10px;\n        padding-bottom: 20px;\n        padding-left: 40px;\n        padding-right: 40px;\n        font-size: 30px;\n}\n.boxer_base p { \n        margin-top: 40px;\n        font-weight: bold;\n        }\n.ghana p {font-weight: bold;}\n\n.extender { min-height: 300px !important;}\n\n/* staff */\n\n.staff .responsive_wrap_fullwidth { \n        width: 960px;\n}\n.staff img {\n        display: block;\n        width: 300px !important; \n        height: 300px !important; \n        margin: 0px !important; \n        padding: 0px !important;\n        position: relative;\n        z-index: 1;\n        }\n.staff .thirtythree {\n        width: 300px; \n        margin: 10px !important;\n        left: clear none!important;\n        padding: 0px;\n        margin-bottom: 30px !important;\n}\n.staff .hidden_content { \n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        width: 300px; \n        height: 300px; \n        background: #221E1F; \n        color: #fff; \n        position: relative; \n        margin-top: -300px ;\n        overflow: hidden;\n        opacity: 0;\n        z-index: 99;\n        }\n.staff .hidden_content p {\n        width: 100%;\n        padding: 5%;\n        margin-top: 20px !important;\n        font-size: 15px;\n        margin-left: auto;\n        margin-right: auto;\n        font-size: 14px; \n        }\n.staff .thirtythree .image_text_wrapper:hover .hidden_content {\n        opacity: 0.9;\n        /* Removes Select box iOS */\n        -webkit-user-select: none;\n        -webkit-touch-callout: none; \n        }\n.staff .thirtythree h2 {\n        font-size: 22px; \n        margin: 0px;\n        padding: 0px;\n        margin-top: 15px;\n        }\n.staff .thirtythree p {\n        margin: 0px;\n        margin-top: -10px;\n        font-weight: bold;\n        font-size: 14px;\n        \n}\n\n.staff .yellow {\n        padding-top: 40px;\n        padding-bottom: 20px;\n        }\n\n/* Financials */\n\n.finance .yellow {\n        padding-top: 60px;\n        padding-bottom: 60px;\n        }\n.finance h1 { \n        text-align: center;\n        font-size: 40px;\n        }\n.finance h2 {\n        font-size: 26px;\n        width: 95%;\n}\n.finance .facts {\n        width: 90%;\n        margin-left: auto;\n        margin-right: auto;\n}\n.finance .hundred a.boxer {\n        font-size: 28px;\n        margin-top: 0px;\n        padding-top: 20px;\n        padding-bottom: 20px;\n        padding-left: 40px;\n        padding-right: 40px;\n        }\n.finance #canvas-holder {\n        display: block;\n        margin-top: 25px;\n        margin-left: 60px;\n}\n.right_content_financials p {\n\n        }\n.fin_title {\n        margin-top: 40px !important;\n        text-align: left !important;\n}\n.right_content_financials a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        color: #231F20;\n        font-weight: bold;\n        text-decoration: underline;\n        }\n.right_content_financials a:hover {\n        color: #fff;        \n        }\n.financials_2014 {\n        padding-bottom: 60px;\n        }\n.financials_2014 .boxer {\n        margin-top: 45px !important;\n        }\n.finance .blue {padding-bottom: 20px;}\n/* Contact */\n\n.contact h1 a {\n        color: #231F20;\n        font-weight: bold;\n        transition: all ease-in 0.3s;\n        -webkit-transition: all ease-in 0.3s;\n        font-size: 50px;\n        }\n.contact a:hover {\n        color: #fff;\n        }\n.contact h1 {\n        font-size: 72px;\n        font-weight: bold;\n        line-height: 84px;\n        }\n.contact {\n        padding-top: 45px;\n        padding-bottom: 0px;\n        }\n\n/* sponsors */\n\n.sponsors .thirtythree img {\n        width: 100%;\n        height: auto;\n}\n.sponsors .thirtythree {\n        display: inline-block;\n        float: none !important;\n        clear: none;\n        margin-top: 0px;\n        padding: 10px;\n}\n\n.sponsors h2 { \n        font-size: 33px;\n        margin-top: 20px;\n        text-align: center;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100%;\n        }\n.sponsors a h2 {\n        transition: all ease-in 0.3s;\n        -webkit-transition: all ease-in 0.3s;\n        font-size: 25px;\n        color: #221E1F;\n        }\n.sponsors a:hover h2 {\n        color: #fff;\n        \n        } \n.sponsors .yellow {text-align: center;}\n\n.sponsors .yellow,\n.sponsors .blue { padding-top: 40px;}\n\n/* 404 */\n\n.fourohfour a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        font-weight: bold;\n        color: #fff;\n        padding-right: 5px;\n        -webkit-transition: all ease-in 0.2s;\n        transition: all ease-in 0.2s;\n        } \n.fourohfour a:hover {\n        color: #231F20;\n        } \n.fourohfour h1,\n.fourohfour p {\n        text-align: center;\n        }\n\n/* Generic Pages */\n\n.page_content_Generric h2, \n.page_content_Generric h3, \n.page_content_Generric h4 {\n        text-align: left;\n}\n.generic_title {\n        font-size: 33px;\n        text-align: center;\n        margin-top: 60px;\n        padding-bottom: 60px;\n        border-bottom: 5px #221E1F solid;\n}\n\n.page_content_Generric ul li {\n        list-style-type: disc;\n        list-style-position: outside;\n        padding-left: 25px;\n        margin-left: 25px; \n        font-weight: 600;\n        text-transform: none !important;\n        }\n.page_content_Generric ul { \n        margin-top: 15px;\n        }\n.generic_content {\n        overflow: hidden;\n        padding-bottom: 60px;\n        }\n.generic_content a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        color: #fff;\n        font-weight: bold;\n        }\n.generic_content a:hover {\n        color: #221E1F;\n}\n\n/* ======= 4. Posts ==================== */\n\n/* General Posts Data */\n\n.post_section {\n        width: 100%;\n        max-width: 625px;\n        float: right;\n        padding-right: 45px;\n        padding-left: 10px;\n        }\n.post_section h1 {\n        font-size: 33px;\n        margin-top: 60px;\n        margin-bottom: 45px;\n}\n.post_section h2 {\n        font-size: 15px !important;\n        font-weight: bold;\n        margin-bottom: 45px;\n        margin-top: 0px !important;\n}\n.post_section p { \n        margin-top: 0px;\n        margin-bottom: 15px;}\n.post_divide {\n        overflow: hidden;\n        padding-bottom: 45px;\n        border-bottom: 5px solid #221E1F; \n}\n.post_section a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        color: #221E1F; \n        font-weight: bold;\n        }\n\n.post_divide a {\n        text-decoration: underline;\n}\n.post_section a:hover {\n        color: #fff;\n        }\n.post_section .post_divide:last-of-type {\n        border-bottom: none !important;\n}\n\n.nav-previous a, .nav-next a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        color: #221E1F;\n        font-size: 15px;\n        font-weight: bold;\n        \n}\n.nav-previous a:hover, .nav-next a:hover { \n        color: #fff;\n        }\n\n.paginater {\n        margin-bottom: 60px;\n        width: 100%;\n        margin-right: 0px;\n        \n        }\n.nav-previous {\n        float: left; \n        width: 150px; \n        margin-left: 0px;\n        }\n.nav-next {\n        float: right; \n        width: 150px; \n        text-align: right;\n        margin-right: 0px;\n        padding: 0px;\n        }\n.post_section .flt_right {\n        margin-right: 0px !important;\n}\n.nothing_error {\n        text-align: center;\n        margin-bottom: 60px;\n        }\na.more-link {\n        color: #221E1F;\n        margin-top: 45px !important;\n        display: block;\n        clear: both; }\n\n/* Post SideBars */\n\n.screen-reader-text, #searchsubmit {\n        display: none;\n        }\n.searching input {\n        border: 4px solid #221E1F !important; \n        margin-top: 30px; \n        width: 80%; \n        height: 45px;\n        background: url(/images/search.png) no-repeat right ;\n        background-position: 97% 7px;\n        -webkit-appearance: none;\n        margin-bottom: 60px !important;\n        \n        }\n.searching input:focus {\n        background: none;\n        }\n.searcher .sider { min-height: 150px;}\n.category_layout a.side_boxed { margin-bottom: 45px !important;}\n.category_layout .sider {overflow: hidden;}\n\n/* Cat Menu - not kittens - categories! kittens would be cooler. */\n\n.menu-blog-categories-container ul li a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        font-size: 15px;\n        font-weight: bold;\n        color: #221E1F;\n        padding-left: 8px;\n}\n.menu-blog-categories-container ul li a:hover {\n        color: #fff;\n}\n.menu-blog-categories-container ul {\n        margin-top: 25px;\n        margin-bottom: 60px;\n}\n.category_layout .sixty_col { min-height: 1200px;}\n.post_title a { color: #221E1F; }\n\n/* Search */\n\n.search_head h1 { font-size: 33px; margin-top: 60px;\nmargin-bottom: 60px; text-align: center;}\n\n/* comments */\n\n.adanu_comments { \n        overflow: hidden; \n        width: 100%;\n        \n        }\n.adanu_comments h3 {\n        font-size: 26px;\n        font-weight: bold;\n        margin-bottom: 45px;\n        border-top: 4px solid #221E1F !important;  \n        padding-top: 45px;\n        margin-top: 45px;\n}\n\n.single .paginater { display: none;}\n.adanu_comments small { \n        font-size: 12px; \n        font-weight: 600;\n\n        }\n.adanu_comments textarea {\n        border: 3px solid #221E1F !important; \n        background: #FFC420;\n        font-weight: 600;\n        padding: 5px;\n        }\n.adanu_comments input#submit {\n        transition: all ease-in 0.3s;\n        -webkit-transition: all ease-in 0.3s; \n        height: 55px;\n        line-height: 45px;\n        padding-left: 20px !important;\n        padding-right: 20px !important;\n        text-transform: lowercase;\n}\n.adanu_comments input#submit:hover {\n        color: #fff;\n        \n}\n\n.adanu_comments .comment-author cite, .adanu_comments .comment-author img {\n        line-height: 30px;\n        float: left;\n}\n.adanu_comments .comment-author img {\n        border-radius: 50%;\n        border: 3px solid #222;\n        }\n.adanu_comments .comment-author {\n        width: 100%;\n        margin-bottom: 10px;\n        border-bottom: 3px solid #333;\n        border-top: 4px solid #333;\n        padding-bottom: 10px;\n        padding-top: 10px;\n        }\n.adanu_comments .comment-author cite {\n        margin-left: 20px;\n        margin-right: 20px;\n        font-size: 20px;\n        }\n\n.adanu_comments span.says {\n        display: none;\n        clear: right;\n        display: block;\n        line-height: 30px;\n        margin-left: 10px;\n        color: #FFC420;\n        }\n\n.comment-meta {\n        font-size: 11px;\n        width: 100%;\n        margin-bottom: 10px;\n        }\n.comment-reply-link {\n        border: 3px solid #221E1F !important;\n        padding: 10px 20px 10px 20px;\n        margin-top: 45px;\n        display: block;\n        width: 100px;\n        text-align: center;\n        }\n/* List Styling */\n\n.adanu_blog ul{ \n        list-style: disc !important; \n        padding-left: 30px; \n        margin-top: 20px;\n        margin-bottom: 20px;\n        text-transform: none;\n}\n.adanu_blog ol {\n        list-style:   decimal!important;\n        padding-left: 30px;\n        text-indent: 10px;\n}\n.adanu_blog ul {\n        text-transform: none !important; \n        text-indent: 10px; \n        line-height: 120%;\n}\n\n.adanu_blog li {text-transform: none !important;}\n\n/* ======= 5. Plugins ================== */\n\n/* Gravity Forms */\n\n.gsection_title {\n        font-size: 33px !important; \n        border-bottom: none !important;\n        }\n.gsection {\n        border-bottom: 5px solid #231F20 !important; \n        margin-top: 0px !important; \n        margin-bottom: 40px !important; \n        }\nlabel {\n        font-size: 26px;\n        font-weight: bold;\n        }\n.gfield_description {\n        font-size: 15px;\n        font-weight: bold;\n        margin-bottom: 20px;\n        }\ninput {\n        background: #FFC420;\n        border: 3px solid #231F20 !important;\n        height: 35px;\n        padding: 4px !important;\n        display: block;\n        font-size: 15px !important;\n        font-weight: bold;\n        }\nselect {\n        height: 35px;\n        background: #FFC420;\n        border: 3px solid #231F20 !important;\n        font-weight: bold !important;\n        font-size: 15px !important;\n        -webkit-appearance: none;\n        /* Firefox Not Behaving Right Here */\n                -moz-appearance: none !important;\n                text-indent: 0.01px !important;\n                text-overflow: '' !important;\n                border-radius: 0px;\n        }\noption {\n        font-weight: bold !important;\n        }\ninput.ginput_card_security_code {\n        float: left;\n        margin-right: 30px !important;\n        }\nli.gfield.gfield_creditcard_warning {\n        margin-bottom: 6px !important;\n        padding: 10px !important;\n        border: none !important;\n        }\n#field_1_3,\n#field_1_8 {\n        width: 50% ;\n        float: left !important;\n        clear: none !important;\n        }\n\n.ginput_complex label,\n.gform_wrapper .gfield_time_hour label,\n.gform_wrapper .gfield_time_minute label,\n.gform_wrapper .gfield_date_month label,\n.gform_wrapper .gfield_date_day label,\n.gform_wrapper .gfield_date_year label,\n.gform_wrapper .instruction {\n        display: block;\n        margin: 3px 0px;\n        letter-spacing: 0.5pt;\n        font-size: 15px !important;\n        padding-left: 5px;\n        color: #231F20;\n}\n.ginput_complex,\n.ginput_container {\n        margin-bottom: 10px;\n        }\n.gfield_description {\n        margin-top: 0px !important;\n        padding-left: 5px !important;\n        color: #231F20;\n        }\n\n#gform_submit_button_1 {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        background: #2EB785;\n        height: auto;\n        padding: 20px !important;\n        font-size: 20px !important;\n        margin-left: auto;\n        margin-right: auto;\n        }\n#gform_submit_button_1:hover {\n        border-color: #fff !important;\n        background: #EE413D;\n        }\n.gfield_creditcard_warning_message {\n        display: none;\n        }\n.gform_wrapper li.gfield.gfield_error,\n.gform_wrapper li.gfield.gfield_error.gfield_contains_required.gfield_creditcard_warning {\n        background-color: #EE413D !important;\n        margin-bottom: 6px !important;\n        padding: 6px 6px 4px !important;\n        border-top: none !important;\n        border-bottom: none !important;\n}\n.validation_message {\n        color: #fff !important;\n        }\n.validation_error {\n        text-align: center;\n        color: #231F20 !important;\n        font-size: 33px !important;\n        line-height: 1.2;\n        margin-top: 40px;\n        margin-bottom: 40px !important;\n        width: 98%;\n        }\n#field_1_4, #field_1_9 {\n        clear: left !important;\n        }\n#field_1_4 {\n        clear: none!important;\n        float: left !important;\n        }\n#field_1_9 {\n        width: 48%;\n        padding: 1%;\n        border: 3px solid #231F20;\n        background: #EE413D;\n        padding-top: 20px;\n        padding-bottom: 20px;\n        margin-top: 10px;\n        margin-bottom: 40px;\n        text-align: center;\n        margin-right: 10px!important;\n        }\n#field_1_5 {\n        width: 50%;\n        float: right;\n        clear: none !important;\n        margin-top: -6px !important;\n        }\n.fifty_form {\n        width: 48%;\n        float: left;\n        clear: none !important;\n        }\n.fifty_form input { width: 99% !important;} \n#field_1_6 {margin-left: 2.5% !important;}\n.gsection {\n        margin-top: 40px!important;\n        display: block;\n        height: 60px;\n        }\n#field_1_8 {padding-left: 8px!important; }\n#field_1_8 input {width: 96%;}\n#field_1_3 {padding-right: 10px;}\n\n.gfield_description { width: 95%!important;}\n#input_1_5_2_cardinfo_right {\n        display: inline-box !important;\n        float: left !important;\n        margin-top: 10px;\n        }\n#input_1_5_2_cardinfo_right .ginput_card_security_code_icon {\n        float: left !important;\n        margin-right: 30px;\n        margin-left: -10px !important;\n        margin-top: 5px;\n        clear: left ;\n        }\n.ginput_card_expiration_container { margin-top: 10px;}\n#input_1_5_5_container {margin-top: 10px;}\n.gform_card_icon_container {margin-top: 1px !important;}\n.donation_form {\n        padding-top: 40px;\n        padding-left: 15px;\n        }\n.gfield_required {\n        color: #EE413D !important;\n        font-size: 15px;\n        vertical-align: super;\n        }\n.page-id-136 .leaderboard h2 { margin: 0px;}\ninput#input_1_5_1 { margin-top: 20px;}\n\n/* ======= 6. Widgets & Misc =========== */\n.cycle-slideshow img {\n       width: 100%;\n       }\n\n.cycle-pager {\n       height: 60px;\n       line-height: 60px;\n       font-size: 45px !important;\n       color: #f1f1f1;\n       text-align: center;\n       background: #231F20;\n       }\n.cycle-pager span:hover {cursor: pointer ;cursor: hand;}\n.cycle-pager-active {color: #FFC420; }\n.slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n        width: 100%;\n        height: 400px; /* Note: change for mobile */\n        overflow: hidden;\n         }\n/* left Minified for easy modding -- TODO Space and Tab This - */\n.slide_1 {background:  #000 url(/images/s1_kids.jpg) no-repeat center; background-size: 100%;}\n.slide_2 {background:  #000 url(/images/meet_blue.jpg) no-repeat center;}\n.slide_3 {background:  url(/images/s3_shirts.jpg) no-repeat top center; }\n.slide_4 {background:  url(/images/s3_shirts.jpg) no-repeat top center; }\n.slide_5 {background: #777;}\n.slide_6 {background: #888;}\n\na.boxed {\n        -webkit-transition: all 0.2s ease-in;\n        transition: all 0.2s ease-in;\n        -webkit-transisition:  all 0.2s ease-in;\n        display: block;\n        width: 320px;\n        height: 70px;\n        line-height: 55px;\n        text-align: center;\n        font-size: 30px;\n        font-weight: bold;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 180px;\n        font-weight: 700;\n}\n\n\na.yellow_cta {\n        -webkit-transition: all 0.2s ease-in;\n        transition: all 0.2s ease-in;\n        -webkit-transisition:  all 0.2s ease-in;\n        border: 5px solid #FFC420;\n        color: #FFC420;\n        width: 450px; /* Change For Mobile */\n}\n\na.yellow_cta:hover {border: 5px solid #2EB785;}\n\na.black_cta {\n        -webkit-transition: all 0.2s ease-in;\n        transition: all 0.2s ease-in;\n        -webkit-transisition:  all 0.2s ease-in;\n        border: 5px solid #221E1F;\n        color: #221E1F;\n}\n\na.black_cta:hover {border: 5px solid #fff;}\n.slide_2 .black_cta {float: right; margin-right: 10%;}\n.slide_2 .black_cta {background: #FFC420; }\n\n/* IMG Gallery */\n\n.secondary_ { overflow: hidden; background: #222222;}\n.twentyfive_si {width: 25%; float: left; padding: 0px; margin: 0px; overflow: hidden;}\n.twentyfive_si img { width: 100% !important; height: auto !important;}\na.fancybox { \n        overflow: hidden; \n        margin: 0px; \n        padding: 0px; \n        display: block;\n        height: auto;\n        -webkit-transition: all 0.2s ease-in;\n        transition: all 0.2s ease-in;\n        -webkit-transisition:  all 0.2s ease-in;\n        margin-bottom: -5px;\n        }\na.fancybox:hover img{ opacity: 0.8 }\n.si_bar { text-align: center; color: #555; height: 60px;}\n.si_bar p { line-height: 50px;}\n/* Fancy Box */\n\n\n.fancybox-wrap,\n.fancybox-skin,\n.fancybox-outer,\n.fancybox-inner,\n.fancybox-image,\n.fancybox-wrap iframe,\n.fancybox-wrap object,\n.fancybox-nav,\n.fancybox-nav span,\n.fancybox-tmp\n{\n\tpadding: 0;\n\tmargin: 0;\n\tborder: 0;\n\toutline: none;\n\tvertical-align: top;\n}\n\n.fancybox-wrap {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 8020;\n}\n\n.fancybox-skin {\n\tposition: relative;\n\tbackground: #f9f9f9;\n\tcolor: #444;\n\ttext-shadow: none;\n\tborder-radius: 4px;\n}\n\n.fancybox-opened {\n\tz-index: 8030;\n}\n\n.fancybox-opened .fancybox-skin {\n\tbox-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n}\n\n.fancybox-outer, .fancybox-inner {\n\tposition: relative;\n}\n\n.fancybox-inner {\n\toverflow: hidden;\n}\n\n.fancybox-type-iframe .fancybox-inner {\n\t-webkit-overflow-scrolling: touch;\n}\n\n.fancybox-error {\n\tcolor: #444;\n\tfont: 14px/20px \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n\tmargin: 0;\n\tpadding: 15px;\n\twhite-space: nowrap;\n}\n\n.fancybox-image, .fancybox-iframe {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.fancybox-image {\n\tmax-width: 100%;\n\tmax-height: 100%;\n}\n\n#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\n\tbackground-image: url('/images/fancybox_sprite.png');\n}\n\n#fancybox-loading {\n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\tmargin-top: -22px;\n\tmargin-left: -22px;\n\tbackground-position: 0 -108px;\n\topacity: 0.8;\n\tcursor: pointer;\n\tz-index: 8060;\n}\n\n#fancybox-loading div {\n\twidth: 44px;\n\theight: 44px;\n\tbackground: url('/images/fancybox_loading.gif') center center no-repeat;\n}\n\n.fancybox-close {\n\tposition: absolute;\n\ttop: -18px;\n\tright: -18px;\n\twidth: 36px;\n\theight: 36px;\n\tcursor: pointer;\n\tz-index: 8040;\n}\n\n.fancybox-nav {\n\tposition: absolute;\n\ttop: 0;\n\twidth: 40%;\n\theight: 100%;\n\tcursor: pointer;\n\ttext-decoration: none;\n\tbackground: transparent url('/images/blank.gif'); /* helps IE */\n\t-webkit-tap-highlight-color: rgba(0,0,0,0);\n\tz-index: 8040;\n}\n\n.fancybox-prev {\n\tleft: 0;\n}\n\n.fancybox-next {\n\tright: 0;\n}\n\n.fancybox-nav span {\n\tposition: absolute;\n\ttop: 50%;\n\twidth: 36px;\n\theight: 34px;\n\tmargin-top: -18px;\n\tcursor: pointer;\n\tz-index: 8040;\n\tvisibility: hidden;\n}\n\n.fancybox-prev span {\n\tleft: 10px;\n\tbackground-position: 0 -36px;\n}\n\n.fancybox-next span {\n\tright: 10px;\n\tbackground-position: 0 -72px;\n}\n\n.fancybox-nav:hover span {\n\tvisibility: visible;\n}\n\n.fancybox-tmp {\n\tposition: absolute;\n\ttop: -99999px;\n\tleft: -99999px;\n\tvisibility: hidden;\n\tmax-width: 99999px;\n\tmax-height: 99999px;\n\toverflow: visible !important;\n}\n\n/* Overlay helper */\n\n.fancybox-lock {\n    overflow: hidden !important;\n    width: auto;\n}\n\n.fancybox-lock body {\n    overflow: hidden !important;\n}\n\n.fancybox-lock-test {\n    overflow-y: hidden !important;\n}\n\n.fancybox-overlay {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\toverflow: hidden;\n\tdisplay: none;\n\tz-index: 8010;\n\tbackground: url('/images/fancybox_overlay.png');\n}\n\n.fancybox-overlay-fixed {\n\tposition: fixed;\n\tbottom: 0;\n\tright: 0;\n}\n\n.fancybox-lock .fancybox-overlay {\n\toverflow: auto;\n\toverflow-y: scroll;\n}\n\n/* Title helper */\n\n.fancybox-title {\n\tvisibility: hidden;\n\tfont: normal 13px/20px \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n\tposition: relative;\n\ttext-shadow: none;\n\tz-index: 8050;\n}\n\n.fancybox-opened .fancybox-title {\n\tvisibility: visible;\n}\n\n.fancybox-title-float-wrap {\n\tposition: absolute;\n\tbottom: 0;\n\tright: 50%;\n\tmargin-bottom: -35px;\n\tz-index: 8050;\n\ttext-align: center;\n}\n\n.fancybox-title-float-wrap .child {\n\tdisplay: inline-block;\n\tmargin-right: -100%;\n\tpadding: 2px 20px;\n\tbackground: transparent; /* Fallback for web browsers that doesn't support RGBa */\n\tbackground: rgba(0, 0, 0, 0.8);\n\tborder-radius: 15px;\n\ttext-shadow: 0 1px 2px #222;\n\tcolor: #FFF;\n\tfont-weight: bold;\n\tline-height: 24px;\n\twhite-space: nowrap;\n}\n\n.fancybox-title-outside-wrap {\n\tposition: relative;\n\tmargin-top: 10px;\n\tcolor: #fff;\n}\n\n.fancybox-title-inside-wrap {\n\tpadding-top: 10px;\n}\n\n.fancybox-title-over-wrap {\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\tcolor: #fff;\n\tpadding: 10px;\n\tbackground: #000;\n\tbackground: rgba(0, 0, 0, .8);\n}\n\n/*Retina graphics!*/\n@media only screen and (-webkit-min-device-pixel-ratio: 1.5),\n\t   only screen and (min--moz-device-pixel-ratio: 1.5),\n\t   only screen and (min-device-pixel-ratio: 1.5){\n\n\t#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\n\t\tbackground-image: url('/images/fancybox_sprite%402x.png');\n\t\tbackground-size: 44px 152px; /*The size of the normal image, half the size of the hi-res image*/\n\t}\n\n\t#fancybox-loading div {\n\t\tbackground-image: url('/images/fancybox_loading%402x.gif');\n\t\tbackground-size: 24px 24px; /*The size of the normal image, half the size of the hi-res image*/\n\t}\n}\n\n/* ======= 7. Footer =================== */\n\n.blue_strip {\n        overflow: hidden;\n        height: 105px;\n        width: 100%;\n        background: #58C8E9;\n        background-image: url(/images/footer_blue_bkg.png);\n        background-position: 0px 9px;\n        }\nfooter {\n        width: 100%;\n        background: #231F20;\n        padding-top: 45px;\n        }\nfooter .basestrip {\n        overflow: hidden;\n        width: 100%;\n        background: #3F3D3E;\n        height: 45px;\n        line-height: 40px;\n        padding: 0px;\n        margin: 0px;\n        clear: both;\n        }\nfooter span, footer a {\n        color: #A7A9AC;\n        font-size: 11px;\n        margin-left: 60px;\n        }\nfooter .six {\n        width: 16%;\n        float: left;\n        text-align: center;\n        margin-bottom: 45px;\n}\n\nfooter .six ul {\n        width: 100%;\n        padding-top: 20px;\n     \n}\nfooter .six ul li {\n        width: 100%;\n        clear: both;\n}\nfooter ul li a {\n        color:#FFC420;\n            }\nfooter .six li.ul_head a {\n        color: #fff;\n        font-weight: bold;\n        }\nfooter ul.social_foot img {\n        width: 20px;\n        }\nfooter ul.social_foot li {\n        width: 25px;\n        float: left;\n       clear: none;\n    }\nfooter ul.social_foot li.ul_head {\n        width: 100%;\n        }\nfooter ul.social_foot li.clr {\n        clear: left;\n        }\nfooter ul.social_foot ul.social_narrow {\n        width: 107px;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 8px;\n        }\n\n.strapline {\n        float: right;\n        font-size: 11px;\n        font-weight: bold;\n        color: #2EB785;\n        margin-right: 60px;\n        }\n        \n/* ======= 8. Media Queries ========== */\n\n/* Hide Non Mobile Elements ! */\n\n.mobile, .mobile_hide {display: none;}\n\n/* Larger Screens */\n\n@media only screen \nand (min-device-width : 1024px) \nand (max-device-width : 2880px)  { \n    \n    /* Calculate max width of the 100% menu minus the donate & Logo 3PX extra for browsre scope */\n    header nav ul {\n            max-width: 650px;\n            max-width: calc(100% - 320px);\n    } \n    \n     \n    /* calculate theMargin to scale according to the total Size */\n    header nav ul li {\n        margin: 0px;\n        padding: 0px;\n            margin-left: 25px;\n            margin-right: 25px;\n        margin-left: calc((100% - 320px) / 12);\n        margin-right: calc((100% - 320px) / 12);\n    }\n   \n    /* Close Out*/\n}\n\n/*\n * The 1X sizes will be fine, as retina will adhere to the sizingX2\n * Aspect Ratio's and MAth floor stays the same between the screen variants!\n */\n\n/* Nexus */\n\n@media all\nand (max-device-width: 640px )\n    and (min-device-width: 360px )\n        \n        {\n         .footer_menus {display: none;} \n        .slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n         height: 250px;\n         }\n        /* Slide Specific Fixes */\n        .slide_1 {background:  #000 url(/images/s1_kids_ip.jpg) no-repeat center; }\n        .slide_2 {background:  #000 url(/images/meet_ip_blue.jpg) no-repeat center right;  }\n        .slide_2 {background-size: auto 250px; background-position:  0px 0px !important;  }\n        .slide_3 {background:  url(/images/s3_shirts_ip.jpg) no-repeat top; }\n        .slide_1 {background-size: auto 380px; }\n        .slide_2 {background-size: auto 380px; background-position: 0 -0px;  }\n        .slide_3 {background-size: auto 380px; }\n        a.boxed  {margin-top: 90px; width: 300px;}\n        a.yellow_cta, a.black_cta {font-size: 20px}    \n        .slide_4 {background:  url(/images/s3_shirts.jpg) no-repeat top center; }  \n\n        \n        /* Close Out */        \n        }\n        \n\n/* iPad Widths // Portrait & Land Scape */\n\n@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px)  { \n        \n    /* Calculate max width of the 100% menu minus the donate & Logo 3PX extra for browser scope */\n        header nav ul {max-width: calc(100% - 320px);} \n    \n     \n        /* calculate theMargin to scale according to the total Size */\n        header nav ul li {\n           margin: 0px;\n            padding: 0px;\n            margin-left: calc((100% - 320px) / 12);\n            margin-right: calc((100% - 320px) / 12);\n        }\n        \n    \n    \n    /* Close Out */\n}\n\n/* iPad Width Portrait */\n\n@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px) \nand (orientation : portrait) {\n        \n         .footer_menus {display: none;} \n         \n          \n         /* this is the minimum width that these menu's are usaeable */\n         .slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n                 height: 300px; /* Note: change for mobile */\n         }\n        .staff .responsive_wrap_fullwidth {\n                width: 640px !important;\n                margin-left: auto;\n                margin-right: auto;\n                overflow: hidden;\n        }\n        .slide_2 .black_cta {background: rgba(255, 199, 0, 0.9); float: right; margin-right: 20px;}\n        /*close out */ \n        }\n\n\n/* iP Portrait & Land Scape */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 480px) { \n    \n    .footer_menus {display: none;} \n    .slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n         height: 250px; /* Note: change for mobile */\n         }\n    /* Slide Specific Fixes */\n    .slide_1 {background:  #000 url(/images/s1_kids_ip.jpg) no-repeat center; }\n    .slide_2 {background:  #000 url(/images/meet_ip_blue.jpg) no-repeat center right;  }\n    .slide_3 {background:  url(/images/s3_shirts_ip.jpg) no-repeat top; }\n    .slide_4 {background:  url(/images/book_ip.jpg) no-repeat top center; }\n    a.boxed  {margin-top: 90px; width: 300px;}\n    a.yellow_cta, a.black_cta {font-size: 20px}\n    \n    /* Mobile Menu */\n    \n    /* Close Out */\n    }\n\n/* iP Landscape */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 480px) \nand (orientation : landscape) { \n          /* Slide Specific Fixes */\n    .slide_1 {background-size: auto 350px; }\n    .slide_2 {background-size: auto 350px; background-position: 0 -0px;  }\n    .slide_3 {background-size: auto 290px; }\n    .slide_4 {background-size: auto 350px; }   \n    /* close out */\n    }\n\n/* iP Portrait */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 480px) \nand (orientation : portrait) { \n    .slide_1 {background-size: auto 250px; }\n    .slide_2 {background-size: auto 250px; background-position: -120px -0px;  }\n    .slide_3 {background-size: auto 250px; }\n    .slide_4 {background-size: auto 250px; }\n    /* Close Out */ \n    }\n\n/* 320 X 568px - iP 5 + 5s // Samsung // nexus ? */\n\n/* iP5 Landscape & Portrait */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 640px) \n/* Added Width for Nexus */\n{ \n    \n    .footer_menus {display: none;}\n    .footer_menus {display: none;} \n    .slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n         height: 250px; /* Note: change for mobile */\n         }\n    /* Slide Specific Fixes */\n    .slide_1 {background:  #000 url(/images/s1_kids_ip.jpg) no-repeat center; }\n    .slide_2 {background:  #000 url(/images/meet_ip_blue.jpg) no-repeat center right;  }\n    .slide_3 {background:  url(/images/s3_shirts_ip.jpg) no-repeat top; }\n    .slide_3 .black_cta {background: rgba(244, 64, 53, 0.7); }\n    .slide_2 .black_cta {background: rgba(255, 199, 0, 0.9); float: none; margin-right: auto;}\n        a.boxed  {margin-top: 90px; width: 300px;}\n        a.yellow_cta, a.black_cta {font-size: 20px}\n        a.black_cta {}\n       nav.menu_wrapper, .social_icons {display: none;}\n    .slide_4 {background:  url(/images/meet_blue_ip.html) no-repeat top center; }\n       \n       \n    /*  header fixes */\n    a.logo {\n        width: 70px;\n        height: 60px;\n        display: block;\n        overflow: hidden;\n        overflow:hidden;\n        text-indent:100%;\n        white-space:nowrap;\n        /* Revise on live Site */\n        background: url(/images/adanu_logo.png) #FFC420 no-repeat top left;\n        background-size: 100%;\n        float: left;\n           }\n   header {\n        width: 100%;\n        height: 60px;\n        overflow: hidden;\n          } \n    a.donate {\n        border: 4px solid #221E1F;\n        display: block;\n        text-align: center;\n        font-weight: bold;\n        font-size: 14px;\n        margin-top: 14px;\n        line-height: 25px;\n        height: 35px;\n        \n        }\n    .social {\n        width: 90px;\n        margin-right: 5px;\n        float: right;\n         }\n    .hamburger {\n        width: 50px; \n        height: 60px; \n        float: left;\n        padding-top: 20px;\n        margin-top: 15px;\n        background: url(/images/mobile_menu.png) no-repeat top center;\n        background-size: 35px;\n        font-size: 14px;\n        font-weight: bold;\n        overflow: hidden;\n        text-align: center;\n        text-transform: lowercase;\n        display: inline-block;\n        margin-left: 20px;\n       }\n    /* Mobile Menu Toggles */\n    .mobile {\n        display: block;\n        }\n    .mobile_show {\n        display: block !important;\n        }\n    .conditional_menu {\n        display: none;\n        }\n    .mobile_show {\n        overflow: hidden;\n        background: #232323;\n        }\n    .mobile_show li {\n        width: 100%;\n        clear: both;\n        }\n    .mobile_show ul li {\n        width: 100%;\n        height: 38px;\n        text-align: left;\n        text-indent: 20px;\n        \n    }\n    .mobile_show ul li ul {\n        width: 100%;\n       float: left;\n        clear: both;\n    }\n    .mobile_show ul li ul li {\n        width: 100%;\n       float: left;\n        padding-left: 15px;\n    }\n    .mobile_show a {\n        color: #ccc;\n        font-weight: bold;\n        font-size: 15px;\n        line-height: 35px;\n    }\n    .mobile_show ul li ul li a {\n        color: #FFC420;\n        font-size: 13px;\n    }\n\n    /* Cols to Full Width */\n    \n    .fifty_col, .sixty_col, .forty_col {\n        width: 100%;\n        clear: both;\n    \n}\n    /* Force Grid to Full Width on mobile */\n        .seventy, \n        .sixty, \n        .fifty,\n        .forty,\n        .thirty, \n        .thirtythree {\n                width: 90%;\n                padding: 5%;\n                text-align: center;\n                float: none;\n                margin-left: auto;\n                margin-right: auto;\n                } \n    \n        \n /* Text fixes */\n        \n        .leaderboard h2 {\n                font-size: 20px !important;\n                line-height: 1.5 !important;\n                }\n        .leaderboard {\n                padding-bottom: 10px;\n                }\n        footer {\n                padding-top:5px;\n                }\n        footer .basestrip {\n                height: auto;\n                }\n        footer .copyright,\n        footer .privacypolicy{\n                width: 50%;\n                text-align: center;\n                float: left;\n                padding: 0px;\n                margin: 0px;\n                }\n        footer .privacypolicy a {\n                width: 100%;\n                margin: 0px;\n                margin-right: 0px;\n                }\n        footer .imagefooter {\n                margin: 0px;\n                padding: 2px;\n                width: 100%;\n                }\n        footer .footerimage {\n      \t        margin: 0px;\n                padding: 0px;\n                text-align: center;\n                }\n        footer .strapline {\n                margin: 0px;\n                padding: 0px;\n                text-align: center;\n                width: 100%;\n                font-size: 110%;\n                }\n        .itinerary_section > h2:nth-child(1) {\n                text-align: center;\n                }\n        .itinerary_row {\n                width: 100%;\n                }\n        .itinerary_section h1,\n        .sider h1 {\n                font-size: 36px;\n                }\n        .itinerary_section {\n                width: 90%;\n                margin: 5%;\n                }\n        .sider {\n                margin: 5%;\n                width: 90%;\n                }\n        a.side_boxed {\n                text-align: center;\n                }\n        h2.give_title {\n                font-size: 26px;\n                }\n        .arw_blk {\n                display: none;\n                }\n        .arrow_space {\n                padding: 0px;\n                width: 100%;\n                }\n        .in_action h3 {\n                line-height: 1.4;\n                }\n        .ghana_map {\n                margin: 0px;\n                }\n        .page-template-pagespage_contact-php h1,\n        .page-template-pagespage_contact-php h1 a {\n                font-size: 26px;\n                line-height: 1.5; width: 90%;\n                text-align: center;\n                margin: 0px;\n                }\n        .contact {\n                min-height: 100px;\n                padding: 10px;\n                }\n        .donation_form {\n                width: 90%;\n                margin: 5%;\n                }\n        .donation_form input {\n                width: 100% !important;\n                }\n        .ginput_left,\n        .ginput_right {\n                width: 100% !important;\n                clear: both;\n                float: left;\n                }\n        .ginput_left input,\n        .ginput_right input {\n                width: 100% !important;\n                clear: both;\n                float: left;\n                }\n        .ginput_full {\n                margin-top: 20px;\n                }\n        .ginput_card_security_code_icon {\n                display: none !important;\n                }\n        #input_1_5_2_cardinfo_right > label:nth-child(3) {\n                float: left!important;\n                clear: both;\n                display: block;\n                }\n        .ginput_card_field {\n                margin-bottom: 20px;\n                }\n        #gform_submit_button_1 {\n                font-size: 26px !important;\n                }\n        .sitemessage {\n                display: none;\n                } /* removes the site notification on mobile */\n        .cf_spacing {\n                padding: 0px;\n                margin: 0px;\n                padding-top: 20px; /* Drops the padding for a better experience */\n        }\n        .donation_form li {width: 100%;}\n        .donation_form input {width: 95% !important;}\n        .fifty_form {width: 100% !important;}\n        #field_1_3, #field_1_8 {width: 100% !important;}\n        #field_1_5 { width: 100%;}\n        #field_1_6 { margin: 0px !important;}\n        .leaderboard p { max-width: 95%;}\n        .leaderboard p span {margin-bottom: 100px;}\n        .ideas h1 {margin-bottom: 0px;}\n        .sponsors .thirtythree { width: 100%;}\n        .finance #canvas-holder {margin-left: -20px; margin-top: 20px; padding-left: 0px;}\n        .finance .blue .thirtythree {margin-top: 10px !important; padding-top: 10px; padding-bottom: 0px}\n        .finance .blue .thirtythree p {padding-top: 0px !important; margin-top: 0px;}\n        .finance .blue {padding-bottom: 45px; padding-top: 5px;}\n        .finance .fin_title { text-align: center !important;} \n        .about .bar_clear {margin-top: 45px;}\n        .row .leaderboard { padding-top: 25px; padding-bottom: 25px;}\n        .category_layout .sixty_col { min-height: 100px;}\n        .post_section {\n                width: 100%;\n                padding: 5%;\n                margin: 0px;\n                \n        }\n        .fin_title { margin-top: 0px !important;}\n        .twentyfive_si {width: 50%; float: left; padding: 0px; margin: 0px; overflow: hidden;}\n        div.twentyfive_si:nth-child(3) {clear: left;}\n        .extender { min-height: 200px !important;}\n/* Close Out */\n    }\n\n\n\n/* iP5 Landscape */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 568px) \nand (orientation : landscape) { \n        .slide_1 {background-size: auto 350px; }\n        .slide_2 {background-size: auto 350px; background-position: -10px -0px;  }\n        .slide_3 {background-size: auto 320px; background-position: -00px -20px; }\n        .slide_4 {background-size: auto 350px; }\n\n    /* Close out */\n}\n\n/* iP5 Portrait */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 568px) \nand (orientation : portrait) {  \n    .slide_1 {background-size: auto 250px; }\n    .slide_2 {background-size: auto 250px; background-position: -0px -0px;  }\n    .slide_3 {background-size: auto 250px; }\n    .slide_4 {background-size: auto 250px; } \n\n    /* Close Out */ \n    }\n\n/* Signup Form */\n.dsip_none {display: none;}\n#mce-EMAIL { \nmargin-top: 20px;\nmargin-left: 90px;\nbackground: #333;\nborder: 1px solid #FFC420 !important;\ntext-align: center !important;\nfont-size: 12px !important;\n        font-weight: normal;\ncolor: #fff;\nwidth: 130%;\n}\n#mc-embedded-subscribe {\n        margin-left: 90px;\n        border: 1px solid #FFC420 !important;\n        margin-top: 5px; font-size: 12px !important;\n        color: #fff !important;\n        background: #333 !important;}\n.approach_video {\n        width: 720px;\n        clear: both;\n        margin-left: auto;\n        margin-right: auto;\n}\n\n/* Fixes - Blog - */\n.adanu_blog .post_title {\n        line-height: 140%;\n}\n\n.adanu_blog img {height: auto !important;}\n\n.align-middle {\n        text-align: center;\n}", "",{"version":3,"sources":["C:/Users/SameeraSubair/Source/Repos/Adanu/styles/style.css"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;AAED,6CAA6C;AAC7C;;;;;;;;;;CAUC;AACD,6CAA6C;;;AAG7C,6CAA6C;;AAE7C,UAAU;;AAEV,UAAU,mBAAmB,EAAE;;AAE/B,UAAU,mBAAmB,EAAE;;AAE/B,UAAU,mBAAmB,EAAE;;AAE/B,UAAU,mBAAmB,EAAE;;AAE/B,UAAU,mBAAmB,EAAE;;AAE/B;QACQ,mBAAmB;QACnB,WAAW;QACX;AACR;QACQ,yBAAyB;QACzB;AACR;QACQ,mBAAmB;QACnB,gBAAgB;QAChB;AACR;QACQ,mBAAmB;QACnB,gBAAgB;QAChB;AACR;QACQ,mBAAmB;QACnB,gBAAgB;;AAExB;;AAEA,gBAAgB;;AAEhB;QACQ,WAAW;QACX,WAAW;QACX;AACR;QACQ,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB;AACR,aAAa;;AAEb;QACQ,sBAAsB;QACtB;AACR;QACQ,uBAAuB;QACvB,kBAAkB;AAC1B;AACA;QACQ,WAAW;QACX,iBAAiB;AACzB;;AAEA,6CAA6C;;AAE7C;QACQ,oCAAoC;QACpC,gBAAgB;QAChB,eAAe;QACf,iBAAiB;IACrB;AACJ;CACC,iBAAiB;AAClB;AACA,SAAS,kBAAkB,CAAC;AAC5B,SAAS,gBAAgB,CAAC;AAC1B,WAAW,iBAAiB,CAAC;;AAE7B,kBAAkB;;AAElB,iBAAiB,oCAAoC,CAAC;;;AAGtD,eAAe;;AAEf;;UAEU,0BAA0B,CAAC;AACrC,iBAAiB,oBAAoB,CAAC;;AAEtC,qBAAqB,yBAAyB,CAAC;AAC/C;;;;;;YAMY,0BAA0B,CAAC;;AAEvC,aAAa;AACb,mBAAmB,sBAAsB,CAAC;;AAE1C;QACQ,eAAe;QACf,gBAAgB;QAChB,mBAAmB;QACnB;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB,iBAAiB;QACjB,kBAAkB;QAClB,gBAAgB;QAChB,mBAAmB;QACnB;AACR;QACQ,eAAe;QACf,kBAAkB;QAClB,eAAe;QACf;AACR;QACQ,iBAAiB;QACjB,UAAU;QACV,iBAAiB;QACjB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,kBAAkB;QAClB;AACR;QACQ,gBAAgB;QAChB,iBAAiB;QACjB,kBAAkB;AAC1B;AACA;QACQ,eAAe;QACf,iBAAiB;QACjB,mBAAmB;QACnB;;AAER,UAAU;AACV;QACQ,qBAAqB;QACrB;AACR;QACQ;QACA;;;AAGR,gCAAgC;;AAEhC;OACO,WAAW;OACX,WAAW;OACX,YAAY;OACZ,gBAAgB;MACjB;;AAEN;QACQ,WAAW;QACX,iBAAiB;QACjB,iBAAiB;QACjB,kBAAkB;MACpB;AACN;OACO,WAAW;OACX,WAAW;MACZ;AACN;QACQ,UAAU;QACV,UAAU;QACV,WAAW;QACX,gBAAgB;QAChB;AACR;QACQ,UAAU;QACV,UAAU;QACV,WAAW;QACX,gBAAgB;OACjB;AACP;QACQ,UAAU;QACV,gBAAgB;QAChB,WAAW;QACX;;AAER;OACO,UAAU;OACV,UAAU;OACV,WAAW;OACX;;AAEP;OACO,UAAU;OACV,WAAW;OACX,gBAAgB;OAChB,UAAU;AACjB;AACA;IACI,UAAU;IACV,WAAW;IACX,gBAAgB;AACpB;AACA;OACO,UAAU;OACV,UAAU;OACV,WAAW;OACX,gBAAgB;OAChB,kBAAkB;OAClB,iBAAiB;OACjB;AACP;OACO,UAAU;OACV,UAAU;OACV,WAAW;OACX,gBAAgB;OAChB,kBAAkB;OAClB,iBAAiB;OACjB;AACP;OACO,UAAU;OACV,WAAW;OACX;AACP;OACO,UAAU;OACV,YAAY;OACZ,YAAY;OACZ,gBAAgB;OAChB,aAAa;OACb;AACP;OACO,gBAAgB;OAChB,WAAW;OACX;AACP;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,yBAAyB;QACzB,WAAW;QACX,gBAAgB;QAChB,iBAAiB;QACjB,eAAe;QACf,iBAAiB;QACjB,qBAAqB;QACrB,gBAAgB;QAChB,cAAc;QACd,oCAA4B;QAA5B,4BAA4B;QAC5B;AACR;QACQ,sBAAsB;;QAEtB;AACR;QACQ,qBAAqB;QACrB,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,aAAa;QACb,cAAc;QACd,gBAAgB;QAChB,mBAAmB;QACnB;AACR;QACQ,cAAc;QACd,sBAAsB;QACtB,iBAAiB;QACjB;AACR;QACQ,iBAAiB;QACjB,6BAA6B;QAC7B,mBAAmB;QACnB,cAAc;QACd,WAAW;QACX,WAAW;QACX,kBAAkB;QAClB;;AAER,kBAAkB;;AAElB;QACQ,oBAAoB;QACpB,gBAAgB;QAChB;AACR;QACQ,mBAAmB;QACnB;AACR;QACQ,6BAA6B;QAC7B;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB;AACR;QACQ,8BAA8B;QAC9B,kBAAkB;QAClB;AACR;QACQ,6BAA6B;QAC7B;AACR;QACQ,oBAAoB;QACpB,gBAAgB;QAChB;AACR;QACQ,2BAA2B;QAC3B,8BAA8B;QAC9B;;AAER,0CAA0C;;AAE1C,iBAAiB;;AAEjB;QACQ,mBAAmB;QACnB,aAAa,CAAC;AACtB;QACQ,kBAAkB;QAClB,SAAS;QACT,WAAW;QACX,eAAe;QACf,eAAe;QACf,YAAY;AACpB;AACA;QACQ,SAAS;QACT,WAAW;AACnB;AACA,iCAAiC,UAAU,CAAC;;;AAG5C,gBAAgB;;AAEhB;QACQ,WAAW;QACX,aAAa;QACb,gBAAgB;AACxB;AACA;QACQ,YAAY;QACZ,aAAa;QACb,cAAc;QACd,gBAAgB;QAChB,eAAe;QACf,gBAAgB;QAChB,kBAAkB;QAClB,wBAAwB;QACxB,kEAAkE;QAClE,qBAAqB;QACrB,WAAW;EACjB;;AAEF;QACQ,iBAAiB;QACjB,WAAW;QACX,gBAAgB;QAChB,gBAAgB;QAChB,WAAW;QACX,kBAAkB;QAClB;AACR;QACQ,qBAAqB;QACrB,kBAAkB;QAClB,kBAAkB;QAClB,mBAAmB;QACnB,YAAY;QACZ;AACR;QACQ,kBAAkB;QAClB,YAAY;AACpB;AACA;QACQ,kBAAkB;QAClB,WAAW;QACX,YAAY;;QAEZ;AACR;QACQ,eAAe;QACf,iBAAiB;;AAEzB;;AAEA;QACQ,mBAAmB;QACnB,6BAA6B;;AAErC;;AAEA;QACQ,mBAAmB;QACnB,gCAAgC;QAChC,cAAc;AACtB;;AAEA;QACQ,YAAY;QACZ,kBAAkB;QAClB,YAAY;AACpB;AACA;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,yBAAyB;QACzB,cAAc;QACd,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;QACf,gBAAgB;QAChB;AACR;QACQ,sBAAsB;QACtB;AACR;QACQ,WAAW;QACX,gBAAgB;QAChB;AACR;QACQ,UAAU;QACV,WAAW;QACX;AACR,kBAAkB,EAAE,UAAU;;AAE9B,aAAa;;AAEb;QACQ,WAAW;QACX,YAAY;QACZ,mBAAmB;QACnB,gBAAgB;QAChB;AACR;QACQ,WAAW;QACX,iBAAiB;QACjB,kBAAkB;QAClB,WAAW;QACX,iBAAiB;QACjB,kBAAkB;QAClB;AACR;QACQ,qBAAqB;QACrB,kBAAkB;QAClB,mBAAmB;QACnB,gBAAgB;QAChB,iBAAiB;QACjB,iBAAiB;QACjB;AACR;QACQ,cAAc;QACd,eAAe;QACf,iBAAiB;QACjB;AACR,wBAAwB,WAAW,CAAC;AACpC;iCACiC,WAAW,CAAC;AAC7C;;QAEQ,6DAA6D;QAC7D,0BAA0B;QAC1B;AACR,iBAAiB;;;AAGjB;QACQ,WAAW;QACX,yBAAyB;QACzB,iBAAiB;QACjB,oBAAoB,EAAE,6BAA6B;QACnD,WAAW;QACX;;AAER,qBAAqB,cAAc,EAAE;AACrC,oBAAoB,WAAW,EAAE;;AAEjC,0CAA0C;;AAE1C,SAAS;;AAET;QACQ,gBAAgB;QAChB,iBAAiB;QACjB,gBAAgB;OACjB;AACP;QACQ,eAAe;QACf,iBAAiB;QACjB,gBAAgB;OACjB;AACP;QACQ,iBAAiB;QACjB,gBAAgB;QAChB;;AAER;QACQ,cAAc;QACd,UAAU;QACV,WAAW;QACX,aAAa;QACb,gBAAgB;;QAEhB;AACR;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,cAAc;QACd,YAAY;QACZ,YAAY;QACZ,kBAAkB;QAClB,yBAAyB;QACzB,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,iBAAiB;QACjB,iBAAiB;QACjB,kBAAkB;QAClB,gBAAgB,EAAE,sBAAsB;;QAExC;AACR;QACQ,WAAW;QACX,kBAAkB;OACnB;;AAEP,aAAa;;AAEb,sBAAsB;;AAEtB;QACQ,YAAY;QACZ,iBAAiB;QACjB,kBAAkB;QAClB,cAAc;QACd,oBAAoB;QACpB;AACR;QACQ,UAAU;QACV,iBAAiB;QACjB,kBAAkB;QAClB,cAAc;QACd;AACR;QACQ,YAAY;QACZ;AACR;QACQ,iBAAiB;QACjB;AACR;QACQ,gBAAgB;QAChB;AACR;QACQ,iBAAiB;QACjB;AACR;QACQ,mBAAmB;QACnB;AACR,eAAe,gBAAgB,CAAC;;AAEhC,OAAO;;AAEP;QACQ,eAAe;QACf,mBAAmB;QACnB,iBAAiB,CAAC;;AAE1B;QACQ,gBAAgB;QAChB,YAAY;QACZ;;AAER;QACQ,eAAe;QACf,iBAAiB;QACjB,iBAAiB;QACjB;AACR;QACQ,eAAe;QACf,gBAAgB;QAChB;AACR;QACQ,WAAW;QACX,WAAW;QACX;AACR;QACQ,gBAAgB;QAChB,UAAU;QACV,iBAAiB;QACjB,oBAAoB;QACpB,6BAA6B;QAC7B;AACR;QACQ,mBAAmB;QACnB;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB,eAAe;QACf,gBAAgB;QAChB;AACR;QACQ,gBAAgB;QAChB;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB,kBAAkB;QAClB;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB,gBAAgB;QAChB;AACR;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,iBAAiB;QACjB,yBAAyB;QACzB,gBAAgB;QAChB,mBAAmB;QACnB,qBAAqB;QACrB;AACR;QACQ,kBAAkB;QAClB;AACR;QACQ,gBAAgB;QAChB,iBAAiB;QACjB,iBAAiB;QACjB;;AAER;QACQ,YAAY;QACZ,WAAW;QACX,iBAAiB;QACjB;;AAER,uBAAuB;;AAEvB;QACQ,gBAAgB;QAChB,mBAAmB;QACnB;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB,gBAAgB;QAChB,UAAU;QACV;AACR;QACQ,UAAU;QACV,eAAe;QACf,eAAe;QACf,mBAAmB;QACnB;AACR,oBAAoB,cAAc,EAAE,eAAe,EAAE;AACrD,YAAY,gBAAgB,CAAC;;AAE7B,SAAS;;AAET;QACQ,6BAA6B;QAC7B,gBAAgB;QAChB;AACR;QACQ,gBAAgB;QAChB;AACR;QACQ,qBAAqB;QACrB;AACR;QACQ,oBAAoB;QACpB;AACR;QACQ,mBAAmB;QACnB;AACR;QACQ,WAAW;QACX,gBAAgB;QAChB,iBAAiB;QACjB,oBAAoB;QACpB;AACR;QACQ,gBAAgB;QAChB;AACR,gCAAgC,mBAAmB,CAAC;AACpD,gCAAgC,mBAAmB,CAAC;AACpD,gCAAgC,mBAAmB,CAAC;AACpD,gCAAgC,mBAAmB,CAAC;AACpD;QACQ,eAAe;QACf,iBAAiB;QACjB,gBAAgB;QAChB,mBAAmB;QACnB,iBAAiB;QACjB;AACR;QACQ,eAAe;QACf,mCAAmC;CAE1C,2BAA2B;QACpB,+BAA+B;QAC/B;AACR;QACQ,kBAAkB;QAClB,yBAAyB;QACzB,2BAA2B;QAC3B;AACR;QACQ,gBAAgB;QAChB,kBAAkB;QAClB;AACR;QACQ,uBAAuB;QACvB;QACA;AACR;QACQ,WAAW;QACX,yBAAyB;QACzB,iCAAiC;QACjC,iCAAiC;QACjC,yBAAyB;QACzB,kBAAkB;QAClB;;AAER;2HAC2H,iBAAiB,CAAC;;AAE7I,wBAAwB;;AAExB;QACQ,sBAAsB;QACtB,gBAAgB;QAChB;;AAER;QACQ,WAAW;QACX;AACR;QACQ,iBAAiB;QACjB,+BAA+B;QAC/B;AACR;QACQ,iBAAiB;QACjB,+BAA+B;QAC/B;;AAER;QACQ,eAAe;QACf,iBAAiB;QACjB,kBAAkB;QAClB;;AAER;QACQ,eAAe;QACf,YAAY;QACZ,iBAAiB;QACjB,oBAAoB;QACpB,YAAY;QACZ,gBAAgB;QAChB;EACN,kEAAkE,UAAU,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,oBAAoB,CAAC;EACzI,UAAU,cAAc,EAAE,iBAAiB,EAAE;EAC7C,gBAAgB,0BAA0B,EAAE;AAC9C,UAAU;;AAEV;QACQ,mBAAmB;QACnB;AACR;QACQ,oBAAoB;QACpB;AACR;QACQ,YAAY;QACZ,iBAAiB;QACjB,kBAAkB;QAClB,cAAc;QACd;AACR,qBAAqB,eAAe,CAAC;;AAErC,UAAU;;AAEV;QACQ,mBAAmB;QACnB;AACR;QACQ,oBAAoB;QACpB;AACR;QACQ,iBAAiB;QACjB,iBAAiB;QACjB,gBAAgB;QAChB;AACR;QACQ,iBAAiB;QACjB,oBAAoB;QACpB,kBAAkB;QAClB,mBAAmB;QACnB,eAAe;AACvB;AACA;QACQ,gBAAgB;QAChB,iBAAiB;QACjB;AACR,UAAU,iBAAiB,CAAC;;AAE5B,YAAY,4BAA4B,CAAC;;AAEzC,UAAU;;AAEV;QACQ,YAAY;AACpB;AACA;QACQ,cAAc;QACd,uBAAuB;QACvB,wBAAwB;QACxB,sBAAsB;QACtB,uBAAuB;QACvB,kBAAkB;QAClB,UAAU;QACV;AACR;QACQ,YAAY;QACZ,uBAAuB;QACvB,0BAA0B;QAC1B,YAAY;QACZ,8BAA8B;AACtC;AACA;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,YAAY;QACZ,aAAa;QACb,mBAAmB;QACnB,WAAW;QACX,kBAAkB;QAClB,mBAAmB;QACnB,gBAAgB;QAChB,UAAU;QACV,WAAW;QACX;AACR;QACQ,WAAW;QACX,WAAW;QACX,2BAA2B;QAC3B,eAAe;QACf,iBAAiB;QACjB,kBAAkB;QAClB,eAAe;QACf;AACR;QACQ,YAAY;QACZ,2BAA2B;QAC3B,yBAAyB;QACzB,2BAA2B;QAC3B;AACR;QACQ,eAAe;QACf,WAAW;QACX,YAAY;QACZ,gBAAgB;QAChB;AACR;QACQ,WAAW;QACX,iBAAiB;QACjB,iBAAiB;QACjB,eAAe;;AAEvB;;AAEA;QACQ,iBAAiB;QACjB,oBAAoB;QACpB;;AAER,eAAe;;AAEf;QACQ,iBAAiB;QACjB,oBAAoB;QACpB;AACR;QACQ,kBAAkB;QAClB,eAAe;QACf;AACR;QACQ,eAAe;QACf,UAAU;AAClB;AACA;QACQ,UAAU;QACV,iBAAiB;QACjB,kBAAkB;AAC1B;AACA;QACQ,eAAe;QACf,eAAe;QACf,iBAAiB;QACjB,oBAAoB;QACpB,kBAAkB;QAClB,mBAAmB;QACnB;AACR;QACQ,cAAc;QACd,gBAAgB;QAChB,iBAAiB;AACzB;AACA;;QAEQ;AACR;QACQ,2BAA2B;QAC3B,2BAA2B;AACnC;AACA;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,cAAc;QACd,iBAAiB;QACjB,0BAA0B;QAC1B;AACR;QACQ,WAAW;QACX;AACR;QACQ,oBAAoB;QACpB;AACR;QACQ,2BAA2B;QAC3B;AACR,gBAAgB,oBAAoB,CAAC;AACrC,YAAY;;AAEZ;QACQ,cAAc;QACd,iBAAiB;QACjB,4BAA4B;QAC5B,oCAAoC;QACpC,eAAe;QACf;AACR;QACQ,WAAW;QACX;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB,iBAAiB;QACjB;AACR;QACQ,iBAAiB;QACjB,mBAAmB;QACnB;;AAER,aAAa;;AAEb;QACQ,WAAW;QACX,YAAY;AACpB;AACA;QACQ,qBAAqB;QACrB,sBAAsB;QACtB,WAAW;QACX,eAAe;QACf,aAAa;AACrB;;AAEA;QACQ,eAAe;QACf,gBAAgB;QAChB,kBAAkB;QAClB,cAAc;QACd,iBAAiB;QACjB,kBAAkB;QAClB,WAAW;QACX;AACR;QACQ,4BAA4B;QAC5B,oCAAoC;QACpC,eAAe;QACf,cAAc;QACd;AACR;QACQ,WAAW;;QAEX;AACR,mBAAmB,kBAAkB,CAAC;;AAEtC;kBACkB,iBAAiB,CAAC;;AAEpC,QAAQ;;AAER;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,iBAAiB;QACjB,WAAW;QACX,kBAAkB;QAClB,oCAA4B;QAA5B,4BAA4B;QAC5B;AACR;QACQ,cAAc;QACd;AACR;;QAEQ,kBAAkB;QAClB;;AAER,kBAAkB;;AAElB;;;QAGQ,gBAAgB;AACxB;AACA;QACQ,eAAe;QACf,kBAAkB;QAClB,gBAAgB;QAChB,oBAAoB;QACpB,gCAAgC;AACxC;;AAEA;QACQ,qBAAqB;QACrB,4BAA4B;QAC5B,kBAAkB;QAClB,iBAAiB;QACjB,gBAAgB;QAChB,+BAA+B;QAC/B;AACR;QACQ,gBAAgB;QAChB;AACR;QACQ,gBAAgB;QAChB,oBAAoB;QACpB;AACR;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,WAAW;QACX,iBAAiB;QACjB;AACR;QACQ,cAAc;AACtB;;AAEA,0CAA0C;;AAE1C,uBAAuB;;AAEvB;QACQ,WAAW;QACX,gBAAgB;QAChB,YAAY;QACZ,mBAAmB;QACnB,kBAAkB;QAClB;AACR;QACQ,eAAe;QACf,gBAAgB;QAChB,mBAAmB;AAC3B;AACA;QACQ,0BAA0B;QAC1B,iBAAiB;QACjB,mBAAmB;QACnB,0BAA0B;AAClC;AACA;QACQ,eAAe;QACf,mBAAmB,CAAC;AAC5B;QACQ,gBAAgB;QAChB,oBAAoB;QACpB,gCAAgC;AACxC;AACA;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,cAAc;QACd,iBAAiB;QACjB;;AAER;QACQ,0BAA0B;AAClC;AACA;QACQ,WAAW;QACX;AACR;QACQ,8BAA8B;AACtC;;AAEA;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,cAAc;QACd,eAAe;QACf,iBAAiB;;AAEzB;AACA;QACQ,WAAW;QACX;;AAER;QACQ,mBAAmB;QACnB,WAAW;QACX,iBAAiB;;QAEjB;AACR;QACQ,WAAW;QACX,YAAY;QACZ,gBAAgB;QAChB;AACR;QACQ,YAAY;QACZ,YAAY;QACZ,iBAAiB;QACjB,iBAAiB;QACjB,YAAY;QACZ;AACR;QACQ,4BAA4B;AACpC;AACA;QACQ,kBAAkB;QAClB,mBAAmB;QACnB;AACR;QACQ,cAAc;QACd,2BAA2B;QAC3B,cAAc;QACd,WAAW,EAAE;;AAErB,kBAAkB;;AAElB;QACQ,aAAa;QACb;AACR;QACQ,oCAAoC;QACpC,gBAAgB;QAChB,UAAU;QACV,YAAY;QACZ,oDAAoD;QACpD,4BAA4B;QAC5B,wBAAwB;QACxB,8BAA8B;;QAE9B;AACR;QACQ,gBAAgB;QAChB;AACR,mBAAmB,iBAAiB,CAAC;AACrC,gCAAgC,8BAA8B,CAAC;AAC/D,yBAAyB,gBAAgB,CAAC;;AAE1C,kEAAkE;;AAElE;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,iBAAiB;AACzB;AACA;QACQ,WAAW;AACnB;AACA;QACQ,gBAAgB;QAChB,mBAAmB;AAC3B;AACA,8BAA8B,kBAAkB,CAAC;AACjD,gBAAgB,cAAc,EAAE;;AAEhC,WAAW;;AAEX,kBAAkB,eAAe,EAAE,gBAAgB;AACnD,mBAAmB,EAAE,kBAAkB,CAAC;;AAExC,aAAa;;AAEb;QACQ,gBAAgB;QAChB,WAAW;;QAEX;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB,mBAAmB;QACnB,wCAAwC;QACxC,iBAAiB;QACjB,gBAAgB;AACxB;;AAEA,qBAAqB,aAAa,CAAC;AACnC;QACQ,eAAe;QACf,gBAAgB;;QAEhB;AACR;QACQ,oCAAoC;QACpC,mBAAmB;QACnB,gBAAgB;QAChB,YAAY;QACZ;AACR;QACQ,4BAA4B;QAC5B,oCAAoC;QACpC,YAAY;QACZ,iBAAiB;QACjB,6BAA6B;QAC7B,8BAA8B;QAC9B,yBAAyB;AACjC;AACA;QACQ,WAAW;;AAEnB;;AAEA;QACQ,iBAAiB;QACjB,WAAW;AACnB;AACA;QACQ,kBAAkB;QAClB,sBAAsB;QACtB;AACR;QACQ,WAAW;QACX,mBAAmB;QACnB,6BAA6B;QAC7B,0BAA0B;QAC1B,oBAAoB;QACpB,iBAAiB;QACjB;AACR;QACQ,iBAAiB;QACjB,kBAAkB;QAClB,eAAe;QACf;;AAER;QACQ,aAAa;QACb,YAAY;QACZ,cAAc;QACd,iBAAiB;QACjB,iBAAiB;QACjB,cAAc;QACd;;AAER;QACQ,eAAe;QACf,WAAW;QACX,mBAAmB;QACnB;AACR;QACQ,oCAAoC;QACpC,4BAA4B;QAC5B,gBAAgB;QAChB,cAAc;QACd,YAAY;QACZ,kBAAkB;QAClB;AACR,iBAAiB;;AAEjB;QACQ,2BAA2B;QAC3B,kBAAkB;QAClB,gBAAgB;QAChB,mBAAmB;QACnB,oBAAoB;AAC5B;AACA;QACQ,+BAA+B;QAC/B,kBAAkB;QAClB,iBAAiB;AACzB;AACA;QACQ,+BAA+B;QAC/B,iBAAiB;QACjB,iBAAiB;AACzB;;AAEA,gBAAgB,+BAA+B,CAAC;;AAEhD,0CAA0C;;AAE1C,kBAAkB;;AAElB;QACQ,0BAA0B;QAC1B,8BAA8B;QAC9B;AACR;QACQ,2CAA2C;QAC3C,0BAA0B;QAC1B,8BAA8B;QAC9B;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB;AACR;QACQ,eAAe;QACf,iBAAiB;QACjB,mBAAmB;QACnB;AACR;QACQ,mBAAmB;QACnB,oCAAoC;QACpC,YAAY;QACZ,uBAAuB;QACvB,cAAc;QACd,0BAA0B;QAC1B,iBAAiB;QACjB;AACR;QACQ,YAAY;QACZ,mBAAmB;QACnB,oCAAoC;QACpC,4BAA4B;QAC5B,0BAA0B;QAC1B,wBAAwB;QACxB,oCAAoC;gBAC5B,gCAAgC;gBAChC,8BAA8B;gBAC9B,4BAA4B;gBAC5B,kBAAkB;QAC1B;AACR;QACQ,4BAA4B;QAC5B;AACR;QACQ,WAAW;QACX,6BAA6B;QAC7B;AACR;QACQ,6BAA6B;QAC7B,wBAAwB;QACxB,uBAAuB;QACvB;AACR;;QAEQ,WAAW;QACX,sBAAsB;QACtB,sBAAsB;QACtB;;AAER;;;;;;;QAOQ,cAAc;QACd,eAAe;QACf,qBAAqB;QACrB,0BAA0B;QAC1B,iBAAiB;QACjB,cAAc;AACtB;AACA;;QAEQ,mBAAmB;QACnB;AACR;QACQ,0BAA0B;QAC1B,4BAA4B;QAC5B,cAAc;QACd;;AAER;QACQ,4BAA4B;QAC5B,qCAAqC;QACrC,mBAAmB;QACnB,YAAY;QACZ,wBAAwB;QACxB,0BAA0B;QAC1B,iBAAiB;QACjB,kBAAkB;QAClB;AACR;QACQ,6BAA6B;QAC7B,mBAAmB;QACnB;AACR;QACQ,aAAa;QACb;AACR;;QAEQ,oCAAoC;QACpC,6BAA6B;QAC7B,+BAA+B;QAC/B,2BAA2B;QAC3B,8BAA8B;AACtC;AACA;QACQ,sBAAsB;QACtB;AACR;QACQ,kBAAkB;QAClB,yBAAyB;QACzB,0BAA0B;QAC1B,gBAAgB;QAChB,gBAAgB;QAChB,8BAA8B;QAC9B,UAAU;QACV;AACR;QACQ,sBAAsB;QACtB;AACR;QACQ,qBAAqB;QACrB,sBAAsB;QACtB;AACR;QACQ,UAAU;QACV,WAAW;QACX,yBAAyB;QACzB,mBAAmB;QACnB,iBAAiB;QACjB,oBAAoB;QACpB,gBAAgB;QAChB,mBAAmB;QACnB,kBAAkB;QAClB,4BAA4B;QAC5B;AACR;QACQ,UAAU;QACV,YAAY;QACZ,sBAAsB;QACtB,2BAA2B;QAC3B;AACR;QACQ,UAAU;QACV,WAAW;QACX,sBAAsB;QACtB;AACR,oBAAoB,qBAAqB,CAAC;AAC1C,YAAY,4BAA4B,CAAC;AACzC;QACQ,0BAA0B;QAC1B,cAAc;QACd,YAAY;QACZ;AACR,YAAY,2BAA2B,EAAE;AACzC,kBAAkB,UAAU,CAAC;AAC7B,YAAY,mBAAmB,CAAC;;AAEhC,sBAAsB,oBAAoB,CAAC;AAC3C;QACQ,8BAA8B;QAC9B,sBAAsB;QACtB,gBAAgB;QAChB;AACR;QACQ,sBAAsB;QACtB,kBAAkB;QAClB,6BAA6B;QAC7B,eAAe;QACf,YAAY;QACZ;AACR,oCAAoC,gBAAgB,CAAC;AACrD,wBAAwB,gBAAgB,CAAC;AACzC,4BAA4B,0BAA0B,CAAC;AACvD;QACQ,iBAAiB;QACjB,kBAAkB;QAClB;AACR;QACQ,yBAAyB;QACzB,eAAe;QACf,qBAAqB;QACrB;AACR,+BAA+B,WAAW,CAAC;AAC3C,oBAAoB,gBAAgB,CAAC;;AAErC,0CAA0C;AAC1C;OACO,WAAW;OACX;;AAEP;OACO,YAAY;OACZ,iBAAiB;OACjB,0BAA0B;OAC1B,cAAc;OACd,kBAAkB;OAClB,mBAAmB;OACnB;AACP,yBAAyB,gBAAgB,CAAC,YAAY,CAAC;AACvD,qBAAqB,cAAc,EAAE;AACrC;QACQ,WAAW;QACX,aAAa,EAAE,4BAA4B;QAC3C,gBAAgB;SACf;AACT,gEAAgE;AAChE,UAAU,2DAA2D,EAAE,qBAAqB,CAAC;AAC7F,UAAU,6DAA6D,CAAC;AACxE,UAAU,4DAA4D,EAAE;AACxE,UAAU,4DAA4D,EAAE;AACxE,UAAU,gBAAgB,CAAC;AAC3B,UAAU,gBAAgB,CAAC;;AAE3B;QACQ,oCAA4B;QAA5B,4BAA4B;QAC5B,uCAAuC;QACvC,cAAc;QACd,YAAY;QACZ,YAAY;QACZ,iBAAiB;QACjB,kBAAkB;QAClB,eAAe;QACf,iBAAiB;QACjB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,gBAAgB;AACxB;;;AAGA;QACQ,oCAA4B;QAA5B,4BAA4B;QAC5B,uCAAuC;QACvC,yBAAyB;QACzB,cAAc;QACd,YAAY,EAAE,sBAAsB;AAC5C;;AAEA,oBAAoB,yBAAyB,CAAC;;AAE9C;QACQ,oCAA4B;QAA5B,4BAA4B;QAC5B,uCAAuC;QACvC,yBAAyB;QACzB,cAAc;AACtB;;AAEA,mBAAmB,sBAAsB,CAAC;AAC1C,qBAAqB,YAAY,EAAE,iBAAiB,CAAC;AACrD,qBAAqB,mBAAmB,EAAE;;AAE1C,gBAAgB;;AAEhB,cAAc,gBAAgB,EAAE,mBAAmB,CAAC;AACpD,gBAAgB,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,gBAAgB,CAAC;AACrF,qBAAqB,sBAAsB,EAAE,uBAAuB,CAAC;AACrE;QACQ,gBAAgB;QAChB,WAAW;QACX,YAAY;QACZ,cAAc;QACd,YAAY;QACZ,oCAA4B;QAA5B,4BAA4B;QAC5B,uCAAuC;QACvC,mBAAmB;QACnB;AACR,sBAAsB,aAAa;AACnC,UAAU,kBAAkB,EAAE,WAAW,EAAE,YAAY,CAAC;AACxD,YAAY,iBAAiB,CAAC;AAC9B,cAAc;;;AAGd;;;;;;;;;;;CAWC,UAAU;CACV,SAAS;CACT,SAAS;CACT,aAAa;CACb,mBAAmB;AACpB;;AAEA;CACC,kBAAkB;CAClB,MAAM;CACN,OAAO;CACP,aAAa;AACd;;AAEA;CACC,kBAAkB;CAClB,mBAAmB;CACnB,WAAW;CACX,iBAAiB;CAGT,kBAAkB;AAC3B;;AAEA;CACC,aAAa;AACd;;AAEA;CAGS,0CAA0C;AACnD;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,gBAAgB;AACjB;;AAEA;CACC,iCAAiC;AAClC;;AAEA;CACC,WAAW;CACX,2DAA2D;CAC3D,SAAS;CACT,aAAa;CACb,mBAAmB;AACpB;;AAEA;CACC,cAAc;CACd,WAAW;CACX,YAAY;AACb;;AAEA;CACC,eAAe;CACf,gBAAgB;AACjB;;AAEA;CACC,oDAAoD;AACrD;;AAEA;CACC,eAAe;CACf,QAAQ;CACR,SAAS;CACT,iBAAiB;CACjB,kBAAkB;CAClB,6BAA6B;CAC7B,YAAY;CACZ,eAAe;CACf,aAAa;AACd;;AAEA;CACC,WAAW;CACX,YAAY;CACZ,uEAAuE;AACxE;;AAEA;CACC,kBAAkB;CAClB,UAAU;CACV,YAAY;CACZ,WAAW;CACX,YAAY;CACZ,eAAe;CACf,aAAa;AACd;;AAEA;CACC,kBAAkB;CAClB,MAAM;CACN,UAAU;CACV,YAAY;CACZ,eAAe;CACf,qBAAqB;CACrB,gDAAgD,EAAE,aAAa;CAC/D,0CAA0C;CAC1C,aAAa;AACd;;AAEA;CACC,OAAO;AACR;;AAEA;CACC,QAAQ;AACT;;AAEA;CACC,kBAAkB;CAClB,QAAQ;CACR,WAAW;CACX,YAAY;CACZ,iBAAiB;CACjB,eAAe;CACf,aAAa;CACb,kBAAkB;AACnB;;AAEA;CACC,UAAU;CACV,4BAA4B;AAC7B;;AAEA;CACC,WAAW;CACX,4BAA4B;AAC7B;;AAEA;CACC,mBAAmB;AACpB;;AAEA;CACC,kBAAkB;CAClB,aAAa;CACb,cAAc;CACd,kBAAkB;CAClB,kBAAkB;CAClB,mBAAmB;CACnB,4BAA4B;AAC7B;;AAEA,mBAAmB;;AAEnB;IACI,2BAA2B;IAC3B,WAAW;AACf;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,6BAA6B;AACjC;;AAEA;CACC,kBAAkB;CAClB,MAAM;CACN,OAAO;CACP,gBAAgB;CAChB,aAAa;CACb,aAAa;CACb,+CAA+C;AAChD;;AAEA;CACC,eAAe;CACf,SAAS;CACT,QAAQ;AACT;;AAEA;CACC,cAAc;CACd,kBAAkB;AACnB;;AAEA,iBAAiB;;AAEjB;CACC,kBAAkB;CAClB,kEAAkE;CAClE,kBAAkB;CAClB,iBAAiB;CACjB,aAAa;AACd;;AAEA;CACC,mBAAmB;AACpB;;AAEA;CACC,kBAAkB;CAClB,SAAS;CACT,UAAU;CACV,oBAAoB;CACpB,aAAa;CACb,kBAAkB;AACnB;;AAEA;CACC,qBAAqB;CACrB,mBAAmB;CACnB,iBAAiB;CACjB,uBAAuB,EAAE,wDAAwD;CACjF,8BAA8B;CAGtB,mBAAmB;CAC3B,2BAA2B;CAC3B,WAAW;CACX,iBAAiB;CACjB,iBAAiB;CACjB,mBAAmB;AACpB;;AAEA;CACC,kBAAkB;CAClB,gBAAgB;CAChB,WAAW;AACZ;;AAEA;CACC,iBAAiB;AAClB;;AAEA;CACC,kBAAkB;CAClB,SAAS;CACT,OAAO;CACP,WAAW;CACX,aAAa;CACb,gBAAgB;CAChB,6BAA6B;AAC9B;;AAEA,mBAAmB;AACnB;;;;CAIC;EACC,yDAAyD;EACzD,2BAA2B,EAAE,kEAAkE;CAChG;;CAEA;EACC,0DAA0D;EAC1D,0BAA0B,EAAE,kEAAkE;CAC/F;AACD;;AAEA,0CAA0C;;AAE1C;QACQ,gBAAgB;QAChB,aAAa;QACb,WAAW;QACX,mBAAmB;QACnB,kDAAkD;QAClD,4BAA4B;QAC5B;AACR;QACQ,WAAW;QACX,mBAAmB;QACnB,iBAAiB;QACjB;AACR;QACQ,gBAAgB;QAChB,WAAW;QACX,mBAAmB;QACnB,YAAY;QACZ,iBAAiB;QACjB,YAAY;QACZ,WAAW;QACX,WAAW;QACX;AACR;QACQ,cAAc;QACd,eAAe;QACf,iBAAiB;QACjB;AACR;QACQ,UAAU;QACV,WAAW;QACX,kBAAkB;QAClB,mBAAmB;AAC3B;;AAEA;QACQ,WAAW;QACX,iBAAiB;;AAEzB;AACA;QACQ,WAAW;QACX,WAAW;AACnB;AACA;QACQ,aAAa;YACT;AACZ;QACQ,WAAW;QACX,iBAAiB;QACjB;AACR;QACQ,WAAW;QACX;AACR;QACQ,WAAW;QACX,WAAW;OACZ,WAAW;IACd;AACJ;QACQ,WAAW;QACX;AACR;QACQ,WAAW;QACX;AACR;QACQ,YAAY;QACZ,iBAAiB;QACjB,kBAAkB;QAClB,eAAe;QACf;;AAER;QACQ,YAAY;QACZ,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,kBAAkB;QAClB;;AAER,wCAAwC;;AAExC,+BAA+B;;AAE/B,uBAAuB,aAAa,CAAC;;AAErC,mBAAmB;;AAEnB;;;;IAII,6FAA6F;IAC7F;YACQ,gBAAgB;YAChB,6BAA6B;IACrC;;;IAGA,6DAA6D;IAC7D;QACI,WAAW;QACX,YAAY;YACR,iBAAiB;YACjB,kBAAkB;QACtB,sCAAsC;QACtC,uCAAuC;IAC3C;;IAEA,aAAa;AACjB;;AAEA;;;EAGE;;AAEF,UAAU;;AAEV;;;;;SAKS,eAAe,aAAa,CAAC;QAC9B;SACC,aAAa;SACb;QACD,yBAAyB;QACzB,UAAU,8DAA8D,EAAE;QAC1E,UAAU,sEAAsE,GAAG;QACnF,UAAU,2BAA2B,EAAE,wCAAwC,GAAG;QAClF,UAAU,wDAAwD,EAAE;QACpE,UAAU,2BAA2B,EAAE;QACvC,UAAU,2BAA2B,EAAE,2BAA2B,GAAG;QACrE,UAAU,2BAA2B,EAAE;QACvC,UAAU,gBAAgB,EAAE,YAAY,CAAC;QACzC,2BAA2B,eAAe;QAC1C,UAAU,4DAA4D,EAAE;;;QAGxE,cAAc;QACd;;;AAGR,yCAAyC;;AAEzC;;;;IAII,6FAA6F;QACzF,eAAe,6BAA6B,CAAC;;;QAG7C,6DAA6D;QAC7D;WACG,WAAW;YACV,YAAY;YACZ,sCAAsC;YACtC,uCAAuC;QAC3C;;;;IAIJ,cAAc;AAClB;;AAEA,wBAAwB;;AAExB;;;;;SAKS,eAAe,aAAa,CAAC;;;SAG7B,6DAA6D;SAC7D;iBACQ,aAAa,EAAE,4BAA4B;SACnD;QACD;gBACQ,uBAAuB;gBACvB,iBAAiB;gBACjB,kBAAkB;gBAClB,gBAAgB;QACxB;QACA,qBAAqB,kCAAkC,EAAE,YAAY,EAAE,kBAAkB,CAAC;QAC1F,aAAa;QACb;;;AAGR,6BAA6B;;AAE7B;;;;IAII,eAAe,aAAa,CAAC;IAC7B;SACK,aAAa,EAAE,4BAA4B;SAC3C;IACL,yBAAyB;IACzB,UAAU,8DAA8D,EAAE;IAC1E,UAAU,sEAAsE,GAAG;IACnF,UAAU,wDAAwD,EAAE;IACpE,UAAU,0DAA0D,EAAE;IACtE,UAAU,gBAAgB,EAAE,YAAY,CAAC;IACzC,2BAA2B,eAAe;;IAE1C,gBAAgB;;IAEhB,cAAc;IACd;;AAEJ,iBAAiB;;AAEjB;;;;UAIU,yBAAyB;IAC/B,UAAU,2BAA2B,EAAE;IACvC,UAAU,2BAA2B,EAAE,2BAA2B,GAAG;IACrE,UAAU,2BAA2B,EAAE;IACvC,UAAU,2BAA2B,EAAE;IACvC,cAAc;IACd;;AAEJ,gBAAgB;;AAEhB;;;;IAII,UAAU,2BAA2B,EAAE;IACvC,UAAU,2BAA2B,EAAE,gCAAgC,GAAG;IAC1E,UAAU,2BAA2B,EAAE;IACvC,UAAU,2BAA2B,EAAE;IACvC,cAAc;IACd;;AAEJ,kDAAkD;;AAElD,6BAA6B;;AAE7B;;;;;;IAMI,eAAe,aAAa,CAAC;IAC7B,eAAe,aAAa,CAAC;IAC7B;SACK,aAAa,EAAE,4BAA4B;SAC3C;IACL,yBAAyB;IACzB,UAAU,8DAA8D,EAAE;IAC1E,UAAU,sEAAsE,GAAG;IACnF,UAAU,wDAAwD,EAAE;IACpE,qBAAqB,kCAAkC,EAAE;IACzD,qBAAqB,kCAAkC,EAAE,WAAW,EAAE,kBAAkB,CAAC;QACrF,UAAU,gBAAgB,EAAE,YAAY,CAAC;QACzC,2BAA2B,eAAe;QAC1C,aAAa;OACd,iCAAiC,aAAa,CAAC;IAClD,UAAU,gEAAgE,EAAE;;;IAG5E,kBAAkB;IAClB;QACI,WAAW;QACX,YAAY;QACZ,cAAc;QACd,gBAAgB;QAChB,eAAe;QACf,gBAAgB;QAChB,kBAAkB;QAClB,wBAAwB;QACxB,kEAAkE;QAClE,qBAAqB;QACrB,WAAW;WACR;GACR;QACK,WAAW;QACX,YAAY;QACZ,gBAAgB;UACd;IACN;QACI,yBAAyB;QACzB,cAAc;QACd,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;QACf,gBAAgB;QAChB,iBAAiB;QACjB,YAAY;;QAEZ;IACJ;QACI,WAAW;QACX,iBAAiB;QACjB,YAAY;SACX;IACL;QACI,WAAW;QACX,YAAY;QACZ,WAAW;QACX,iBAAiB;QACjB,gBAAgB;QAChB,6DAA6D;QAC7D,qBAAqB;QACrB,eAAe;QACf,iBAAiB;QACjB,gBAAgB;QAChB,kBAAkB;QAClB,yBAAyB;QACzB,qBAAqB;QACrB,iBAAiB;OAClB;IACH,wBAAwB;IACxB;QACI,cAAc;QACd;IACJ;QACI,yBAAyB;QACzB;IACJ;QACI,aAAa;QACb;IACJ;QACI,gBAAgB;QAChB,mBAAmB;QACnB;IACJ;QACI,WAAW;QACX,WAAW;QACX;IACJ;QACI,WAAW;QACX,YAAY;QACZ,gBAAgB;QAChB,iBAAiB;;IAErB;IACA;QACI,WAAW;OACZ,WAAW;QACV,WAAW;IACf;IACA;QACI,WAAW;OACZ,WAAW;QACV,kBAAkB;IACtB;IACA;QACI,WAAW;QACX,iBAAiB;QACjB,eAAe;QACf,iBAAiB;IACrB;IACA;QACI,cAAc;QACd,eAAe;IACnB;;IAEA,uBAAuB;;IAEvB;QACI,WAAW;QACX,WAAW;;AAEnB;IACI,uCAAuC;QACnC;;;;;;gBAMQ,UAAU;gBACV,WAAW;gBACX,kBAAkB;gBAClB,WAAW;gBACX,iBAAiB;gBACjB,kBAAkB;gBAClB;;;CAGf,eAAe;;QAER;gBACQ,0BAA0B;gBAC1B,2BAA2B;gBAC3B;QACR;gBACQ,oBAAoB;gBACpB;QACR;gBACQ,eAAe;gBACf;QACR;gBACQ,YAAY;gBACZ;QACR;;gBAEQ,UAAU;gBACV,kBAAkB;gBAClB,WAAW;gBACX,YAAY;gBACZ,WAAW;gBACX;QACR;gBACQ,WAAW;gBACX,WAAW;gBACX,iBAAiB;gBACjB;QACR;gBACQ,WAAW;gBACX,YAAY;gBACZ,WAAW;gBACX;QACR;eACO,WAAW;gBACV,YAAY;gBACZ,kBAAkB;gBAClB;QACR;gBACQ,WAAW;gBACX,YAAY;gBACZ,kBAAkB;gBAClB,WAAW;gBACX,eAAe;gBACf;QACR;gBACQ,kBAAkB;gBAClB;QACR;gBACQ,WAAW;gBACX;QACR;;gBAEQ,eAAe;gBACf;QACR;gBACQ,UAAU;gBACV,UAAU;gBACV;QACR;gBACQ,UAAU;gBACV,UAAU;gBACV;QACR;gBACQ,kBAAkB;gBAClB;QACR;gBACQ,eAAe;gBACf;QACR;gBACQ,aAAa;gBACb;QACR;gBACQ,YAAY;gBACZ,WAAW;gBACX;QACR;gBACQ,gBAAgB;gBAChB;QACR;gBACQ,WAAW;gBACX;QACR;;gBAEQ,eAAe;gBACf,gBAAgB,EAAE,UAAU;gBAC5B,kBAAkB;gBAClB,WAAW;gBACX;QACR;gBACQ,iBAAiB;gBACjB,aAAa;gBACb;QACR;gBACQ,UAAU;gBACV,UAAU;gBACV;QACR;gBACQ,sBAAsB;gBACtB;QACR;;gBAEQ,sBAAsB;gBACtB,WAAW;gBACX,WAAW;gBACX;QACR;;gBAEQ,sBAAsB;gBACtB,WAAW;gBACX,WAAW;gBACX;QACR;gBACQ,gBAAgB;gBAChB;QACR;gBACQ,wBAAwB;gBACxB;QACR;gBACQ,qBAAqB;gBACrB,WAAW;gBACX,cAAc;gBACd;QACR;gBACQ,mBAAmB;gBACnB;QACR;gBACQ,0BAA0B;gBAC1B;QACR;gBACQ,aAAa;gBACb,EAAE,4CAA4C;QACtD;gBACQ,YAAY;gBACZ,WAAW;gBACX,iBAAiB,EAAE,8CAA8C;QACzE;QACA,mBAAmB,WAAW,CAAC;QAC/B,sBAAsB,qBAAqB,CAAC;QAC5C,aAAa,sBAAsB,CAAC;QACpC,wBAAwB,sBAAsB,CAAC;QAC/C,aAAa,WAAW,CAAC;QACzB,aAAa,sBAAsB,CAAC;QACpC,iBAAiB,cAAc,CAAC;QAChC,qBAAqB,oBAAoB,CAAC;QAC1C,WAAW,kBAAkB,CAAC;QAC9B,yBAAyB,WAAW,CAAC;QACrC,yBAAyB,kBAAkB,EAAE,gBAAgB,EAAE,iBAAiB,CAAC;QACjF,6BAA6B,2BAA2B,EAAE,iBAAiB,EAAE,mBAAmB;QAChG,+BAA+B,2BAA2B,EAAE,eAAe,CAAC;QAC5E,gBAAgB,oBAAoB,EAAE,gBAAgB,CAAC;QACvD,sBAAsB,6BAA6B,CAAC;QACpD,mBAAmB,gBAAgB,CAAC;QACpC,oBAAoB,iBAAiB,EAAE,oBAAoB,CAAC;QAC5D,8BAA8B,iBAAiB,CAAC;QAChD;gBACQ,WAAW;gBACX,WAAW;gBACX,WAAW;;QAEnB;QACA,aAAa,0BAA0B,CAAC;QACxC,gBAAgB,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,gBAAgB,CAAC;QACrF,gCAAgC,WAAW,CAAC;QAC5C,YAAY,4BAA4B,CAAC;AACjD,cAAc;IACV;;;;AAIJ,kBAAkB;;AAElB;;;;QAIQ,UAAU,2BAA2B,EAAE;QACvC,UAAU,2BAA2B,EAAE,+BAA+B,GAAG;QACzE,UAAU,2BAA2B,EAAE,gCAAgC,EAAE;QACzE,UAAU,2BAA2B,EAAE;;IAE3C,cAAc;AAClB;;AAEA,iBAAiB;;AAEjB;;;;IAII,UAAU,2BAA2B,EAAE;IACvC,UAAU,2BAA2B,EAAE,8BAA8B,GAAG;IACxE,UAAU,2BAA2B,EAAE;IACvC,UAAU,2BAA2B,EAAE;;IAEvC,cAAc;IACd;;AAEJ,gBAAgB;AAChB,YAAY,aAAa,CAAC;AAC1B;AACA,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,oCAAoC;AACpC,6BAA6B;AAC7B,0BAA0B;QAClB,mBAAmB;AAC3B,WAAW;AACX,WAAW;AACX;AACA;QACQ,iBAAiB;QACjB,oCAAoC;QACpC,eAAe,EAAE,0BAA0B;QAC3C,sBAAsB;QACtB,2BAA2B,CAAC;AACpC;QACQ,YAAY;QACZ,WAAW;QACX,iBAAiB;QACjB,kBAAkB;AAC1B;;AAEA,mBAAmB;AACnB;QACQ,iBAAiB;AACzB;;AAEA,iBAAiB,uBAAuB,CAAC;;AAEzC;QACQ,kBAAkB;AAC1B","file":"style.css","sourcesContent":["/*\nTheme Name: Adanu\nTheme URI: http://thephuse.com\nAuthor: The Phuse\nAuthor URI: http://thephuse.com/\nDescription: Adanu Wordpress Theme - 2014 - Built specifically for the page requirements of Adanu. \nVersion: 0.4\n*/\n\n/* =============== CONTENTS =============== */\n/*\n *1. Generics & Reusage\n *2. Header\n *3. Pages\n *4. Posts\n *5. Plugins\n *6. Widgets & Misc\n *7. Footer\n *8. Media Queries ( Minify once all done to increase load speed of Older iOS Safari)\n *\n*/\n/* ======================================== */\n\n\n/* ======= 1. Generics & Reusage ========== */\n\n/* Color */\n\n.yellow { background: #FFC420; }\n\n.green  { background: #2EB785; }\n\n.blue   { background: #58C8E9; }\n\n.red    { background: #EE413D; }\n\n.darkbk { background: #221E1F; }\n\n.dark   {\n        background: #231F20;\n        color: #fff;\n        }\n.dark_text, .dark_text h2 {\n        color: #231F20 !important;\n        }\n.green_fix {\n        background: #2EB785;\n        overflow: hidden;\n        }\n.blue_fix {\n        background: #58C8E9;\n        overflow: hidden;\n        }\n.yellow_fix {\n        background: #FFC420;\n        overflow: hidden;\n        \n}\n\n/* Bar Divider */\n\n.bar_clear {\n        width: 100%;\n        clear: both;\n        }\n.bar {\n        width: 130px;\n        height: 5px;\n        background: #221E1F;\n        margin-left: auto;\n        margin-right: auto;\n        }\n/* Generics */\n\n.clr_left {\n        clear: left !important;\n        }\n.flt_right {\n        float: right !important;\n        margin-right: 30px;\n}\n.flt_left {\n        float: left;\n        margin-left: 30px;\n}\n\n/* Screams \"Open Sans\" from the roof tops!  */\n\nbody,p, em, p em {\n        font-family: 'Open Sans', sans-serif;\n        font-weight: 600;\n        font-size: 15px;\n        line-height: 150%;\n    }\nbody strong, body b {\n font-weight: bold;       \n}\n.centro {text-align: center;}\n.leftro {text-align: left;}\n.rightro { text-align: right;}\n\n/* Lowercase Fix */\n\nul li, ul li a { text-transform: lowercase !important;}\n\n\n/* Capetalize */\n\n.responsive_wrap_fullwidth h2,\n.responsive_wrap_fullwidth h3,\n.dark h2 {text-transform: capitalize;}\n.leaderboard h2 {text-transform: none;}\n\n.boxer, .side_boxed {text-transform: lowercase;}\n.sider h1, \n.sider h2, \n.sider h3, \nh1.vertigo_content, \n.about .leaderboard > h2:nth-child(1), \n.about .blue h2,\n.ideas h1 { text-transform: capitalize;}\n\n/* Headings */\nh1,h2,h3,h4,h5,h6 {letter-spacing: +0.5px;}\n\nh1 {\n        font-size: 25px;\n        font-weight: 700;\n        margin-bottom: 20px;\n        }\n.row h2 {\n        font-size: 33px;\n        line-height: 46px;\n        font-weight: bold;\n        text-align: center;\n        margin-top: 25px;\n        margin-bottom: 25px;\n        }\n.row .leaderboard h2, .row .leaderboard h2 em {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        font-size: 33px;\n        }\n.leaderboard h2 {\n        line-height: 46px;\n        width: 95%;\n        max-width: 1024px;\n        font-weight: bold;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        }\n.leaderboard p {\n        max-width: 900px;\n        margin-left: auto;\n        margin-right: auto;\n}\n.vertigo h3 {\n        font-size: 26px;\n        font-weight: bold;\n        margin-bottom: 20px;\n        }\n\n/* Links */\na           {\n        text-decoration: none;   \n        }\nheader a    {\n        color: #221E1F\n        }\n\n\n/* Generic Responsive Elements */\n\n.row {   \n       width: 100%; \n       margin: 0px; \n       padding: 0px;\n       overflow: hidden;\n      }\n\n.responsive_wrap_fullwidth { \n        width: 100%; \n        max-width: 1024px; \n        margin-left: auto; \n        margin-right: auto;\n      }\n.hundered {\n       width: 100%; \n       clear: both;\n      }\n.seventy {\n        width: 68%;\n        margin: 1%;\n        float: left; \n        overflow: hidden;\n        }\n.sixty {\n        width: 58%;\n        margin: 1%;\n        float: left; \n        overflow: hidden;         \n       }\n.sixty_col {\n        width: 60%;\n        overflow: hidden;\n        float: left;\n        }\n\n.fifty {\n       width: 46%; \n       margin: 2%; \n       float: left;\n       }\n\n.forty {\n       width: 38%; \n       float: left;\n       overflow: hidden;\n       margin: 1%;\n}\n.forty_col {\n    width: 40%;\n    float: left;\n    overflow: hidden;\n}\n.thirty {\n       width: 28%; \n       margin: 1%; \n       float: left; \n       overflow: hidden; \n       text-align: center;\n       padding-top: 70px;\n       }\n.thirtythree {\n       width: 25%; \n       margin: 4%; \n       float: left; \n       overflow: hidden; \n       text-align: center;\n       padding-top: 30px;\n       }\n.thirtythree img{ \n       width: 48%; \n       clear: both;\n       }\n.sidebar {\n       width: 40%; \n       float: right; \n       clear: right; \n       overflow: hidden; \n       height: 300px;\n       }\n.text_area_left {\n       max-width: 480px; \n       float: left; \n       }\n.boxer {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        border: 5px solid #231F20;\n        padding: 2%;\n        padding-left: 6%;\n        padding-right: 6%;\n        font-size: 17px;\n        font-weight: bold;\n        display: inline-block;\n        margin-top: 20px;\n        color: #231F20;\n        transition: all ease-in 0.2s;\n        }\n.boxer:hover {\n        border: 5px solid #fff;\n\n        }\n.b_large {\n        /* used with .boxer */\n        font-size: 30px;\n        padding: 20px;\n        line-height: 1.2;\n        height: 130px;\n        display: block;\n        overflow: hidden;\n        margin-bottom: 25px;\n        }\n.b_large a{\n        color: #231F20; \n        vertical-align: middle; \n        line-height: 100%;\n        }\n.underline {\n        font-weight: bold;\n        border-bottom: 4px solid #fff;\n        margin-bottom: 60px;\n        display: block;\n        width: 40px;\n        float: left;\n        margin-right: 20px;\n        }\n\n/* Spacing Fixes */\n\n.in_action {\n        padding-bottom: 24px;\n        overflow: hidden;\n        }\n.in_action h2 {\n        margin-bottom: 20px;\n        }\n.home .leaderboard h2 {\n        margin-bottom: 4px !important;\n        }\n.page-id-13 .blue .thirtythree {\n        margin-top: 0px;\n        padding-top: 40px;\n        }\n.page-id-13 .in_action {\n        padding-bottom: 0px !important;\n        margin-bottom: 0px;\n        }\n.page-id-13 .leaderboard h2 {\n        margin-bottom: 0px !important;\n        }\n.hundred.vertigo_content {\n        padding-bottom: 45px;\n        overflow: hidden;\n        }\n.page-id-29 .blue h2 {\n        margin-top: 60px !important;\n        margin-bottom: 60px !important;\n        }\n        \n/* ======= 2. Header =================== */\n\n/* Site Message */\n\n.sitemessage {\n        background: #FFFDE3;\n        padding: 25px;}\n.sitemessage a.closer_x {\n        position: absolute;\n        top: 25px;\n        right: 25px;\n        font-size: 25px;\n        cursor: pointer;\n        cursor: hand;\n}\n.sitemessage a.closer_x:hover {\n        top: 26px;\n        right: 26px;  \n}\n.sitemessage h1, .sitemessage p {width: 90%;}\n\n\n/* Page Header */\n\nheader {\n        width: 100%;\n        height: 142px;\n        overflow: hidden;\n}\na.logo {\n        width: 157px;\n        height: 142px;\n        display: block;\n        overflow: hidden;\n        overflow:hidden;\n        text-indent:100%;\n        white-space:nowrap;\n        /* Revise on live Site */\n        background: url(/images/adanu_logo.png) #FFC420 no-repeat top left;\n        background-size: 100%;\n        float: left;\n  }\n\nheader nav ul {\n        padding-top: 92px;\n        width: 100%;\n        max-width: 747px;\n        overflow: hidden;\n        float: left;\n        text-align: center;\n        }\nheader nav ul li {\n        display: inline-block;\n        text-align: center;\n        padding-left: 35px;\n        padding-right: 35px;\n        height: 40px;\n        } \nheader ul li {\n        text-align: center;\n        height: 40px;\n}\nheader ul.social_icons li {\n        text-align: center;\n        float: left;\n        height: 40px;\n        \n        } \nheader ul li a {\n        font-size: 15px;\n        font-weight: bold;\n        \n}\n\nheader ul li a:hover {\n        padding-bottom: 8px;\n        border-bottom: 5px solid #fff;\n        \n}\n\nheader ul li.current-menu-item a , header ul li.current-page-ancestor a {\n        padding-bottom: 8px;\n        border-bottom: 5px solid #221E1F;\n        color: #FFFDE3;\n}\n\n.social {\n        width: 120px;\n        margin-right: 40px;\n        float: right;\n}\na.donate {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        border: 4px solid #221E1F;\n        display: block;\n        text-align: center;\n        font-weight: bold;\n        font-size: 16px;\n        margin-top: 44px;\n        }\na.donate:hover {\n        border: 4px solid #fff;\n        }\nul.social_icons {\n        width: 100%;\n        margin-top: 13px;\n        }\nul.social_icons li {\n        width: 25%;\n        padding:5px;\n        }\nul.scocial_icons {} /* WHY ? */\n\n/* Sub Menu */\n\n.submenu {\n        width: 100%;\n        height: 70px;\n        background: #231F20;\n        overflow: hidden;\n        }\n.submenu ul {\n        width: 100%;\n        margin-left: auto;\n        margin-right: auto;\n        clear: both;\n        padding-top: 18px;\n        text-align: center;\n        }\n.submenu ul li {\n        display: inline-block;\n        padding-left: 25px;\n        padding-right: 25px;\n        overflow: hidden;\n        padding-top: 15px;\n        text-align:center;\n        }\n.submenu ul li a {\n        color: #FFC420;\n        font-size: 12px;\n        font-weight: bold;\n        }\n.submenu ul li a:hover {color: #fff;}\n.submenu ul li.current-menu-item a,\n.submenu .current-post-parent a {color: #fff;}\n.submenu ul li.current-menu-item,\n.submenu .current-post-parent {\n        background: url(/images/green_arrow.png) top center no-repeat;\n        background-size: 20px 15px;\n        }\n/* Leader Board */\n\n\n.leaderboard {\n        width: 100%;\n        /* background: #231F20; */\n        padding-top: 55px;\n        padding-bottom: 55px; /* Consider Shifting to a % */\n        color: #fff;\n        }\n\n.blue .leaderboard { color: #221E1F; }\n.dark .leaderboard {color: #fff; }\n\n/* ======= 3. Pages ==================== */\n\n/* HOME */\n\n.thirtythree p {\n        font-weight: 600;\n        line-height: 160%;\n        margin-top: 20px;\n       }\n.thirtythree h2 {\n        font-size: 35px;\n        font-weight: bold;\n        margin-top: 40px;\n       }\n.thirtythree h3 {\n        font-weight: bold;\n        margin-top: 30px;\n        }\n\n.fifty_col {\n        display: block;\n        width: 50%;\n        float: left;\n        height: 270px;\n        overflow: hidden;\n\n        }\n.fifty_col a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        display: block;\n        width: 180px;\n        height: 90px;\n        text-align: center;\n        border: 5px solid #221E1F;\n        font-size: 30px;\n        font-weight: bold;\n        color: #221E1F;\n        line-height: 70px;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 90px; /* Mobile Fix Needed */\n    \n        }\n.fifty_col a:hover {\n        color: #FFF;\n        border-color: #fff;\n       }\n\n/* Approach */\n\n/* REPLACE FOR VIDEO */\n\nimg.placeholder {\n        width: 720px;\n        margin-left: auto;\n        margin-right: auto;\n        display: block;\n        padding-bottom: 25px;\n        }\n.our_model .thirty_icon {\n        width: 50%;\n        margin-left: auto;\n        margin-right: auto;\n        display: block;\n        }\n.vertigo .thirty {\n        padding: 0px;\n        }\n.vertigo .seventy {\n        padding-top: 20px;\n        }\n.vertigo p {\n        font-weight: 600;\n        }\n.in_action .fifty p, .in_action .fifty p em {\n        font-weight: bold;\n        }\n.vertigo:last-child {\n        margin-bottom: 70px;\n        }\n.our_model h2 {margin-top: 60px;}\n\n/* go */\n\n.wrap_support_heading h3 {\n        font-size: 20px;\n        margin-bottom: 20px;\n        font-weight: bold;}\n\n.itinerary_section {\n        max-width: 670px;\n        float: right;\n        }\n\n.itinerary_section h1, .sider h1 {\n        font-size: 48px;\n        font-weight: bold;\n        line-height: 48px;\n        }\n.itinerary_section p {\n        font-size: 15px;\n        font-weight: 600;\n        }\n.itinerary_section .forty {\n        float: left;\n        clear: left;\n        }\n.itinerary_row {\n        overflow: hidden;\n        width: 95%;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        border-bottom: 4px solid #333;\n        }\n.itinerary_row:last-child {\n        border-bottom: none;\n        }\n.itinerary_section h2, .sider h2 {\n        font-size: 26px;\n        font-weight: bold;\n        margin-left: 1%;\n        margin-top: 50px;\n        }\n.sider h1{\n        margin-top: 30px;\n        }\n.sider h3 {\n        font-size: 18px;\n        font-weight: bold;\n        margin-bottom: 5px;\n        }\n.sider .total_cost {\n        font-size: 16px;\n        font-weight: bold;\n        margin-top: 30px;\n        }\n.sider a.side_boxed {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        font-size: 17px;\n        font-weight: bold;\n        color: #221E1F;\n        padding: 5px 10px;\n        border: 4px solid #221E1F;\n        margin-top: 30px;\n        margin-bottom: 60px;\n        display: inline-block;\n        }\n.sider a.side_boxed:hover {\n        border-color: #fff;\n        }\n.sider {\n        max-width: 330px;\n        margin-left: 40px;\n        min-height: 200px;\n        }\n\n.cf_spacing {\n        padding: 0px;\n        margin: 0px;\n        padding-top: 80px;\n        }\n\n/* Know Before You Go */\n\nh1.vertigo_content  {\n        margin-top: 40px;\n        margin-bottom: 40px;\n        }\n.vertigo_content h3 {\n        font-size: 18px;\n        font-weight: bold;\n        margin-top: 35px;\n        width: 95%;\n        }\n.vertigo_content p {\n        width: 95%;\n        font-size: 12px;\n        margin-top: 5px;\n        margin-bottom: 10px;\n        }\n.vertigo_content a {color: #EE413D; font-size: 15px; }\n.ov_spaced {margin-top: 30px;}\n\n/* Give */\n\n.give_title h2 {\n        margin-bottom: 0px !important;\n        margin-top: 40px;\n        }\n.give_title .thirtythree {\n        padding-top: 0px;\n        }\n.hundred_model {\n        width: 90% !important;\n        }\n.give_h {\n        padding-bottom: 45px;\n        }\n.give_h h2 {\n        margin-bottom: 20px;\n        }\nul.ul_multi li {\n        width: 100%;\n        overflow: hidden;\n        padding-top: 40px;\n        padding-bottom: 40px;\n        }\nul.ul_multi li .thirty {\n        padding-top: 0px;\n        }\nul.ul_multi li:nth-child(4n+1) {background: #EE413D;}\nul.ul_multi li:nth-child(4n+2) {background: #58C8E9;}\nul.ul_multi li:nth-child(4n+3) {background: #FFC420;}\nul.ul_multi li:nth-child(4n+4) {background: #2EB785;}\nul.ul_multi h3 {\n        font-size: 33px;\n        font-weight: bold;\n        margin-top: 15px;\n        margin-bottom: 20px;\n        line-height: 35px;\n        }\nul.ul_multi li .hide_p {\n        max-height: 0px;\n        -webkit-transition: max-height 0.8s;\n\t-moz-transition: max-height 0.8s;\n\ttransition: max-height 0.8s;\n        text-transform: none !important;\n        }\nul.ul_multi li:hover .hide_p, ul.ul_multi li.hover_effect .hide_p {\n        max-height: 1000px;\n        -webkit-user-select: none;\n        -webkit-touch-callout: none;  \n        }\n.arrow_space {\n        overflow: hidden;\n        padding-left: 80px;\n        }\nul.ul_multi li:hover .arw_blk, ul.ul_multi li.hover_effect  .arw_blk {\n        transform: rotate(0deg);\n        -webkit-transform: rotate(0deg)\n        }\n.arw_blk {\n        width: 80px;\n        transition: all ease 0.3s;\n        -webkit-transition: all ease 0.3s;\n        -webkit-transform: rotate(-90deg);\n        transform: rotate(-90deg);\n        position: absolute;\n        }\n\ndiv.row:nth-child(2) > section:nth-child(1) > article:nth-child(2) > div:nth-child(1) > div:nth-child(1) > a:nth-child(1),\ndiv.row:nth-child(2) > section:nth-child(1) > article:nth-child(2) > div:nth-child(3) > div:nth-child(1) > a:nth-child(1) {line-height: 80px;}\n\n/* Support a Community */\n\np.lb_note {\n        color: #ccc !important;\n        margin-top: 45px;\n        }\n\n.lb_note .underline {\n        color: #fff;\n        }\n.support .row.yellow {\n        padding-top: 60px;\n        padding-bottom: 20px !important;\n        }\n.support .row.red {\n        padding-top: 40px;\n        padding-bottom: 60px !important;\n        }\n\n.ideas h1 {\n        font-size: 33px;\n        font-weight: bold;\n        margin-bottom: 0px;\n        }\n\n.download_box a.boxer {\n        font-size: 30px;\n        padding: 0px;\n        padding-top: 20px;\n        padding-bottom: 20px;\n        width: 250px;\n        margin-top: 30px;\n        }\n  .support   article.thirtythree:nth-child(2) > img:nth-child(1)   {width: 60%; margin-top: -28px; padding-top: 10px; margin-bottom: -25px;}\n  .ideas a {color: #221E1F; font-weight: bold; }\n  .ideas a:hover {text-decoration: underline; }\n/* About */\n\n.about .leaderboard h2:nth-child(1){\n        margin-bottom: 30px;\n        }\n.about .yellow, .about .blue {\n        padding-bottom: 30px;\n        }\nimg.inline_logo {\n        width: 314px;\n        margin-left: auto;\n        margin-right: auto;\n        display: block;\n        }\n.about .blue .fifty {margin-top: 0px;}\n\n/* Ghana */\n\n.facts {\n        margin-bottom: 40px;\n        }\n.ghana aside {\n        padding-bottom: 40px;\n        }\n.ghana_map {\n        max-height: 590px; \n        margin-left: 40px; \n        margin-top: 40px;\n        }\n.ghana .boxer {\n        padding-top: 10px;\n        padding-bottom: 20px;\n        padding-left: 40px;\n        padding-right: 40px;\n        font-size: 30px;\n}\n.boxer_base p { \n        margin-top: 40px;\n        font-weight: bold;\n        }\n.ghana p {font-weight: bold;}\n\n.extender { min-height: 300px !important;}\n\n/* staff */\n\n.staff .responsive_wrap_fullwidth { \n        width: 960px;\n}\n.staff img {\n        display: block;\n        width: 300px !important; \n        height: 300px !important; \n        margin: 0px !important; \n        padding: 0px !important;\n        position: relative;\n        z-index: 1;\n        }\n.staff .thirtythree {\n        width: 300px; \n        margin: 10px !important;\n        left: clear none!important;\n        padding: 0px;\n        margin-bottom: 30px !important;\n}\n.staff .hidden_content { \n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        width: 300px; \n        height: 300px; \n        background: #221E1F; \n        color: #fff; \n        position: relative; \n        margin-top: -300px ;\n        overflow: hidden;\n        opacity: 0;\n        z-index: 99;\n        }\n.staff .hidden_content p {\n        width: 100%;\n        padding: 5%;\n        margin-top: 20px !important;\n        font-size: 15px;\n        margin-left: auto;\n        margin-right: auto;\n        font-size: 14px; \n        }\n.staff .thirtythree .image_text_wrapper:hover .hidden_content {\n        opacity: 0.9;\n        /* Removes Select box iOS */\n        -webkit-user-select: none;\n        -webkit-touch-callout: none; \n        }\n.staff .thirtythree h2 {\n        font-size: 22px; \n        margin: 0px;\n        padding: 0px;\n        margin-top: 15px;\n        }\n.staff .thirtythree p {\n        margin: 0px;\n        margin-top: -10px;\n        font-weight: bold;\n        font-size: 14px;\n        \n}\n\n.staff .yellow {\n        padding-top: 40px;\n        padding-bottom: 20px;\n        }\n\n/* Financials */\n\n.finance .yellow {\n        padding-top: 60px;\n        padding-bottom: 60px;\n        }\n.finance h1 { \n        text-align: center;\n        font-size: 40px;\n        }\n.finance h2 {\n        font-size: 26px;\n        width: 95%;\n}\n.finance .facts {\n        width: 90%;\n        margin-left: auto;\n        margin-right: auto;\n}\n.finance .hundred a.boxer {\n        font-size: 28px;\n        margin-top: 0px;\n        padding-top: 20px;\n        padding-bottom: 20px;\n        padding-left: 40px;\n        padding-right: 40px;\n        }\n.finance #canvas-holder {\n        display: block;\n        margin-top: 25px;\n        margin-left: 60px;\n}\n.right_content_financials p {\n\n        }\n.fin_title {\n        margin-top: 40px !important;\n        text-align: left !important;\n}\n.right_content_financials a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        color: #231F20;\n        font-weight: bold;\n        text-decoration: underline;\n        }\n.right_content_financials a:hover {\n        color: #fff;        \n        }\n.financials_2014 {\n        padding-bottom: 60px;\n        }\n.financials_2014 .boxer {\n        margin-top: 45px !important;\n        }\n.finance .blue {padding-bottom: 20px;}\n/* Contact */\n\n.contact h1 a {\n        color: #231F20;\n        font-weight: bold;\n        transition: all ease-in 0.3s;\n        -webkit-transition: all ease-in 0.3s;\n        font-size: 50px;\n        }\n.contact a:hover {\n        color: #fff;\n        }\n.contact h1 {\n        font-size: 72px;\n        font-weight: bold;\n        line-height: 84px;\n        }\n.contact {\n        padding-top: 45px;\n        padding-bottom: 0px;\n        }\n\n/* sponsors */\n\n.sponsors .thirtythree img {\n        width: 100%;\n        height: auto;\n}\n.sponsors .thirtythree {\n        display: inline-block;\n        float: none !important;\n        clear: none;\n        margin-top: 0px;\n        padding: 10px;\n}\n\n.sponsors h2 { \n        font-size: 33px;\n        margin-top: 20px;\n        text-align: center;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100%;\n        }\n.sponsors a h2 {\n        transition: all ease-in 0.3s;\n        -webkit-transition: all ease-in 0.3s;\n        font-size: 25px;\n        color: #221E1F;\n        }\n.sponsors a:hover h2 {\n        color: #fff;\n        \n        } \n.sponsors .yellow {text-align: center;}\n\n.sponsors .yellow,\n.sponsors .blue { padding-top: 40px;}\n\n/* 404 */\n\n.fourohfour a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        font-weight: bold;\n        color: #fff;\n        padding-right: 5px;\n        transition: all ease-in 0.2s;\n        } \n.fourohfour a:hover {\n        color: #231F20;\n        } \n.fourohfour h1,\n.fourohfour p {\n        text-align: center;\n        }\n\n/* Generic Pages */\n\n.page_content_Generric h2, \n.page_content_Generric h3, \n.page_content_Generric h4 {\n        text-align: left;\n}\n.generic_title {\n        font-size: 33px;\n        text-align: center;\n        margin-top: 60px;\n        padding-bottom: 60px;\n        border-bottom: 5px #221E1F solid;\n}\n\n.page_content_Generric ul li {\n        list-style-type: disc;\n        list-style-position: outside;\n        padding-left: 25px;\n        margin-left: 25px; \n        font-weight: 600;\n        text-transform: none !important;\n        }\n.page_content_Generric ul { \n        margin-top: 15px;\n        }\n.generic_content {\n        overflow: hidden;\n        padding-bottom: 60px;\n        }\n.generic_content a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        color: #fff;\n        font-weight: bold;\n        }\n.generic_content a:hover {\n        color: #221E1F;\n}\n\n/* ======= 4. Posts ==================== */\n\n/* General Posts Data */\n\n.post_section {\n        width: 100%;\n        max-width: 625px;\n        float: right;\n        padding-right: 45px;\n        padding-left: 10px;\n        }\n.post_section h1 {\n        font-size: 33px;\n        margin-top: 60px;\n        margin-bottom: 45px;\n}\n.post_section h2 {\n        font-size: 15px !important;\n        font-weight: bold;\n        margin-bottom: 45px;\n        margin-top: 0px !important;\n}\n.post_section p { \n        margin-top: 0px;\n        margin-bottom: 15px;}\n.post_divide {\n        overflow: hidden;\n        padding-bottom: 45px;\n        border-bottom: 5px solid #221E1F; \n}\n.post_section a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        color: #221E1F; \n        font-weight: bold;\n        }\n\n.post_divide a {\n        text-decoration: underline;\n}\n.post_section a:hover {\n        color: #fff;\n        }\n.post_section .post_divide:last-of-type {\n        border-bottom: none !important;\n}\n\n.nav-previous a, .nav-next a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        color: #221E1F;\n        font-size: 15px;\n        font-weight: bold;\n        \n}\n.nav-previous a:hover, .nav-next a:hover { \n        color: #fff;\n        }\n\n.paginater {\n        margin-bottom: 60px;\n        width: 100%;\n        margin-right: 0px;\n        \n        }\n.nav-previous {\n        float: left; \n        width: 150px; \n        margin-left: 0px;\n        }\n.nav-next {\n        float: right; \n        width: 150px; \n        text-align: right;\n        margin-right: 0px;\n        padding: 0px;\n        }\n.post_section .flt_right {\n        margin-right: 0px !important;\n}\n.nothing_error {\n        text-align: center;\n        margin-bottom: 60px;\n        }\na.more-link {\n        color: #221E1F;\n        margin-top: 45px !important;\n        display: block;\n        clear: both; }\n\n/* Post SideBars */\n\n.screen-reader-text, #searchsubmit {\n        display: none;\n        }\n.searching input {\n        border: 4px solid #221E1F !important; \n        margin-top: 30px; \n        width: 80%; \n        height: 45px;\n        background: url(/images/search.png) no-repeat right ;\n        background-position: 97% 7px;\n        -webkit-appearance: none;\n        margin-bottom: 60px !important;\n        \n        }\n.searching input:focus {\n        background: none;\n        }\n.searcher .sider { min-height: 150px;}\n.category_layout a.side_boxed { margin-bottom: 45px !important;}\n.category_layout .sider {overflow: hidden;}\n\n/* Cat Menu - not kittens - categories! kittens would be cooler. */\n\n.menu-blog-categories-container ul li a {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        font-size: 15px;\n        font-weight: bold;\n        color: #221E1F;\n        padding-left: 8px;\n}\n.menu-blog-categories-container ul li a:hover {\n        color: #fff;\n}\n.menu-blog-categories-container ul {\n        margin-top: 25px;\n        margin-bottom: 60px;\n}\n.category_layout .sixty_col { min-height: 1200px;}\n.post_title a { color: #221E1F; }\n\n/* Search */\n\n.search_head h1 { font-size: 33px; margin-top: 60px;\nmargin-bottom: 60px; text-align: center;}\n\n/* comments */\n\n.adanu_comments { \n        overflow: hidden; \n        width: 100%;\n        \n        }\n.adanu_comments h3 {\n        font-size: 26px;\n        font-weight: bold;\n        margin-bottom: 45px;\n        border-top: 4px solid #221E1F !important;  \n        padding-top: 45px;\n        margin-top: 45px;\n}\n\n.single .paginater { display: none;}\n.adanu_comments small { \n        font-size: 12px; \n        font-weight: 600;\n\n        }\n.adanu_comments textarea {\n        border: 3px solid #221E1F !important; \n        background: #FFC420;\n        font-weight: 600;\n        padding: 5px;\n        }\n.adanu_comments input#submit {\n        transition: all ease-in 0.3s;\n        -webkit-transition: all ease-in 0.3s; \n        height: 55px;\n        line-height: 45px;\n        padding-left: 20px !important;\n        padding-right: 20px !important;\n        text-transform: lowercase;\n}\n.adanu_comments input#submit:hover {\n        color: #fff;\n        \n}\n\n.adanu_comments .comment-author cite, .adanu_comments .comment-author img {\n        line-height: 30px;\n        float: left;\n}\n.adanu_comments .comment-author img {\n        border-radius: 50%;\n        border: 3px solid #222;\n        }\n.adanu_comments .comment-author {\n        width: 100%;\n        margin-bottom: 10px;\n        border-bottom: 3px solid #333;\n        border-top: 4px solid #333;\n        padding-bottom: 10px;\n        padding-top: 10px;\n        }\n.adanu_comments .comment-author cite {\n        margin-left: 20px;\n        margin-right: 20px;\n        font-size: 20px;\n        }\n\n.adanu_comments span.says {\n        display: none;\n        clear: right;\n        display: block;\n        line-height: 30px;\n        margin-left: 10px;\n        color: #FFC420;\n        }\n\n.comment-meta {\n        font-size: 11px;\n        width: 100%;\n        margin-bottom: 10px;\n        }\n.comment-reply-link {\n        border: 3px solid #221E1F !important;\n        padding: 10px 20px 10px 20px;\n        margin-top: 45px;\n        display: block;\n        width: 100px;\n        text-align: center;\n        }\n/* List Styling */\n\n.adanu_blog ul{ \n        list-style: disc !important; \n        padding-left: 30px; \n        margin-top: 20px;\n        margin-bottom: 20px;\n        text-transform: none;\n}\n.adanu_blog ol {\n        list-style:   decimal!important;\n        padding-left: 30px;\n        text-indent: 10px;\n}\n.adanu_blog ul {\n        text-transform: none !important; \n        text-indent: 10px; \n        line-height: 120%;\n}\n\n.adanu_blog li {text-transform: none !important;}\n\n/* ======= 5. Plugins ================== */\n\n/* Gravity Forms */\n\n.gsection_title {\n        font-size: 33px !important; \n        border-bottom: none !important;\n        }\n.gsection {\n        border-bottom: 5px solid #231F20 !important; \n        margin-top: 0px !important; \n        margin-bottom: 40px !important; \n        }\nlabel {\n        font-size: 26px;\n        font-weight: bold;\n        }\n.gfield_description {\n        font-size: 15px;\n        font-weight: bold;\n        margin-bottom: 20px;\n        }\ninput {\n        background: #FFC420;\n        border: 3px solid #231F20 !important;\n        height: 35px;\n        padding: 4px !important;\n        display: block;\n        font-size: 15px !important;\n        font-weight: bold;\n        }\nselect {\n        height: 35px;\n        background: #FFC420;\n        border: 3px solid #231F20 !important;\n        font-weight: bold !important;\n        font-size: 15px !important;\n        -webkit-appearance: none;\n        /* Firefox Not Behaving Right Here */\n                -moz-appearance: none !important;\n                text-indent: 0.01px !important;\n                text-overflow: '' !important;\n                border-radius: 0px;\n        }\noption {\n        font-weight: bold !important;\n        }\ninput.ginput_card_security_code {\n        float: left;\n        margin-right: 30px !important;\n        }\nli.gfield.gfield_creditcard_warning {\n        margin-bottom: 6px !important;\n        padding: 10px !important;\n        border: none !important;\n        }\n#field_1_3,\n#field_1_8 {\n        width: 50% ;\n        float: left !important;\n        clear: none !important;\n        }\n\n.ginput_complex label,\n.gform_wrapper .gfield_time_hour label,\n.gform_wrapper .gfield_time_minute label,\n.gform_wrapper .gfield_date_month label,\n.gform_wrapper .gfield_date_day label,\n.gform_wrapper .gfield_date_year label,\n.gform_wrapper .instruction {\n        display: block;\n        margin: 3px 0px;\n        letter-spacing: 0.5pt;\n        font-size: 15px !important;\n        padding-left: 5px;\n        color: #231F20;\n}\n.ginput_complex,\n.ginput_container {\n        margin-bottom: 10px;\n        }\n.gfield_description {\n        margin-top: 0px !important;\n        padding-left: 5px !important;\n        color: #231F20;\n        }\n\n#gform_submit_button_1 {\n        transition: all 0.2s ease-in;\n        -webkit-transition:  all 0.2s ease-in;\n        background: #2EB785;\n        height: auto;\n        padding: 20px !important;\n        font-size: 20px !important;\n        margin-left: auto;\n        margin-right: auto;\n        }\n#gform_submit_button_1:hover {\n        border-color: #fff !important;\n        background: #EE413D;\n        }\n.gfield_creditcard_warning_message {\n        display: none;\n        }\n.gform_wrapper li.gfield.gfield_error,\n.gform_wrapper li.gfield.gfield_error.gfield_contains_required.gfield_creditcard_warning {\n        background-color: #EE413D !important;\n        margin-bottom: 6px !important;\n        padding: 6px 6px 4px !important;\n        border-top: none !important;\n        border-bottom: none !important;\n}\n.validation_message {\n        color: #fff !important;\n        }\n.validation_error {\n        text-align: center;\n        color: #231F20 !important;\n        font-size: 33px !important;\n        line-height: 1.2;\n        margin-top: 40px;\n        margin-bottom: 40px !important;\n        width: 98%;\n        }\n#field_1_4, #field_1_9 {\n        clear: left !important;\n        }\n#field_1_4 {\n        clear: none!important;\n        float: left !important;\n        }\n#field_1_9 {\n        width: 48%;\n        padding: 1%;\n        border: 3px solid #231F20;\n        background: #EE413D;\n        padding-top: 20px;\n        padding-bottom: 20px;\n        margin-top: 10px;\n        margin-bottom: 40px;\n        text-align: center;\n        margin-right: 10px!important;\n        }\n#field_1_5 {\n        width: 50%;\n        float: right;\n        clear: none !important;\n        margin-top: -6px !important;\n        }\n.fifty_form {\n        width: 48%;\n        float: left;\n        clear: none !important;\n        }\n.fifty_form input { width: 99% !important;} \n#field_1_6 {margin-left: 2.5% !important;}\n.gsection {\n        margin-top: 40px!important;\n        display: block;\n        height: 60px;\n        }\n#field_1_8 {padding-left: 8px!important; }\n#field_1_8 input {width: 96%;}\n#field_1_3 {padding-right: 10px;}\n\n.gfield_description { width: 95%!important;}\n#input_1_5_2_cardinfo_right {\n        display: inline-box !important;\n        float: left !important;\n        margin-top: 10px;\n        }\n#input_1_5_2_cardinfo_right .ginput_card_security_code_icon {\n        float: left !important;\n        margin-right: 30px;\n        margin-left: -10px !important;\n        margin-top: 5px;\n        clear: left ;\n        }\n.ginput_card_expiration_container { margin-top: 10px;}\n#input_1_5_5_container {margin-top: 10px;}\n.gform_card_icon_container {margin-top: 1px !important;}\n.donation_form {\n        padding-top: 40px;\n        padding-left: 15px;\n        }\n.gfield_required {\n        color: #EE413D !important;\n        font-size: 15px;\n        vertical-align: super;\n        }\n.page-id-136 .leaderboard h2 { margin: 0px;}\ninput#input_1_5_1 { margin-top: 20px;}\n\n/* ======= 6. Widgets & Misc =========== */\n.cycle-slideshow img {\n       width: 100%;\n       }\n\n.cycle-pager {\n       height: 60px;\n       line-height: 60px;\n       font-size: 45px !important;\n       color: #f1f1f1;\n       text-align: center;\n       background: #231F20;\n       }\n.cycle-pager span:hover {cursor: pointer ;cursor: hand;}\n.cycle-pager-active {color: #FFC420; }\n.slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n        width: 100%;\n        height: 400px; /* Note: change for mobile */\n        overflow: hidden;\n         }\n/* left Minified for easy modding -- TODO Space and Tab This - */\n.slide_1 {background:  #000 url(/images/s1_kids.jpg) no-repeat center; background-size: 100%;}\n.slide_2 {background:  #000 url(/images/meet_blue.jpg) no-repeat center;}\n.slide_3 {background:  url(/images/s3_shirts.jpg) no-repeat top center; }\n.slide_4 {background:  url(/images/s3_shirts.jpg) no-repeat top center; }\n.slide_5 {background: #777;}\n.slide_6 {background: #888;}\n\na.boxed {\n        transition: all 0.2s ease-in;\n        -webkit-transisition:  all 0.2s ease-in;\n        display: block;\n        width: 320px;\n        height: 70px;\n        line-height: 55px;\n        text-align: center;\n        font-size: 30px;\n        font-weight: bold;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 180px;\n        font-weight: 700;\n}\n\n\na.yellow_cta {\n        transition: all 0.2s ease-in;\n        -webkit-transisition:  all 0.2s ease-in;\n        border: 5px solid #FFC420;\n        color: #FFC420;\n        width: 450px; /* Change For Mobile */\n}\n\na.yellow_cta:hover {border: 5px solid #2EB785;}\n\na.black_cta {\n        transition: all 0.2s ease-in;\n        -webkit-transisition:  all 0.2s ease-in;\n        border: 5px solid #221E1F;\n        color: #221E1F;\n}\n\na.black_cta:hover {border: 5px solid #fff;}\n.slide_2 .black_cta {float: right; margin-right: 10%;}\n.slide_2 .black_cta {background: #FFC420; }\n\n/* IMG Gallery */\n\n.secondary_ { overflow: hidden; background: #222222;}\n.twentyfive_si {width: 25%; float: left; padding: 0px; margin: 0px; overflow: hidden;}\n.twentyfive_si img { width: 100% !important; height: auto !important;}\na.fancybox { \n        overflow: hidden; \n        margin: 0px; \n        padding: 0px; \n        display: block;\n        height: auto;\n        transition: all 0.2s ease-in;\n        -webkit-transisition:  all 0.2s ease-in;\n        margin-bottom: -5px;\n        }\na.fancybox:hover img{ opacity: 0.8 }\n.si_bar { text-align: center; color: #555; height: 60px;}\n.si_bar p { line-height: 50px;}\n/* Fancy Box */\n\n\n.fancybox-wrap,\n.fancybox-skin,\n.fancybox-outer,\n.fancybox-inner,\n.fancybox-image,\n.fancybox-wrap iframe,\n.fancybox-wrap object,\n.fancybox-nav,\n.fancybox-nav span,\n.fancybox-tmp\n{\n\tpadding: 0;\n\tmargin: 0;\n\tborder: 0;\n\toutline: none;\n\tvertical-align: top;\n}\n\n.fancybox-wrap {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 8020;\n}\n\n.fancybox-skin {\n\tposition: relative;\n\tbackground: #f9f9f9;\n\tcolor: #444;\n\ttext-shadow: none;\n\t-webkit-border-radius: 4px;\n\t   -moz-border-radius: 4px;\n\t        border-radius: 4px;\n}\n\n.fancybox-opened {\n\tz-index: 8030;\n}\n\n.fancybox-opened .fancybox-skin {\n\t-webkit-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n\t   -moz-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n\t        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n}\n\n.fancybox-outer, .fancybox-inner {\n\tposition: relative;\n}\n\n.fancybox-inner {\n\toverflow: hidden;\n}\n\n.fancybox-type-iframe .fancybox-inner {\n\t-webkit-overflow-scrolling: touch;\n}\n\n.fancybox-error {\n\tcolor: #444;\n\tfont: 14px/20px \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n\tmargin: 0;\n\tpadding: 15px;\n\twhite-space: nowrap;\n}\n\n.fancybox-image, .fancybox-iframe {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.fancybox-image {\n\tmax-width: 100%;\n\tmax-height: 100%;\n}\n\n#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\n\tbackground-image: url('/images/fancybox_sprite.png');\n}\n\n#fancybox-loading {\n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\tmargin-top: -22px;\n\tmargin-left: -22px;\n\tbackground-position: 0 -108px;\n\topacity: 0.8;\n\tcursor: pointer;\n\tz-index: 8060;\n}\n\n#fancybox-loading div {\n\twidth: 44px;\n\theight: 44px;\n\tbackground: url('/images/fancybox_loading.gif') center center no-repeat;\n}\n\n.fancybox-close {\n\tposition: absolute;\n\ttop: -18px;\n\tright: -18px;\n\twidth: 36px;\n\theight: 36px;\n\tcursor: pointer;\n\tz-index: 8040;\n}\n\n.fancybox-nav {\n\tposition: absolute;\n\ttop: 0;\n\twidth: 40%;\n\theight: 100%;\n\tcursor: pointer;\n\ttext-decoration: none;\n\tbackground: transparent url('/images/blank.gif'); /* helps IE */\n\t-webkit-tap-highlight-color: rgba(0,0,0,0);\n\tz-index: 8040;\n}\n\n.fancybox-prev {\n\tleft: 0;\n}\n\n.fancybox-next {\n\tright: 0;\n}\n\n.fancybox-nav span {\n\tposition: absolute;\n\ttop: 50%;\n\twidth: 36px;\n\theight: 34px;\n\tmargin-top: -18px;\n\tcursor: pointer;\n\tz-index: 8040;\n\tvisibility: hidden;\n}\n\n.fancybox-prev span {\n\tleft: 10px;\n\tbackground-position: 0 -36px;\n}\n\n.fancybox-next span {\n\tright: 10px;\n\tbackground-position: 0 -72px;\n}\n\n.fancybox-nav:hover span {\n\tvisibility: visible;\n}\n\n.fancybox-tmp {\n\tposition: absolute;\n\ttop: -99999px;\n\tleft: -99999px;\n\tvisibility: hidden;\n\tmax-width: 99999px;\n\tmax-height: 99999px;\n\toverflow: visible !important;\n}\n\n/* Overlay helper */\n\n.fancybox-lock {\n    overflow: hidden !important;\n    width: auto;\n}\n\n.fancybox-lock body {\n    overflow: hidden !important;\n}\n\n.fancybox-lock-test {\n    overflow-y: hidden !important;\n}\n\n.fancybox-overlay {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\toverflow: hidden;\n\tdisplay: none;\n\tz-index: 8010;\n\tbackground: url('/images/fancybox_overlay.png');\n}\n\n.fancybox-overlay-fixed {\n\tposition: fixed;\n\tbottom: 0;\n\tright: 0;\n}\n\n.fancybox-lock .fancybox-overlay {\n\toverflow: auto;\n\toverflow-y: scroll;\n}\n\n/* Title helper */\n\n.fancybox-title {\n\tvisibility: hidden;\n\tfont: normal 13px/20px \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n\tposition: relative;\n\ttext-shadow: none;\n\tz-index: 8050;\n}\n\n.fancybox-opened .fancybox-title {\n\tvisibility: visible;\n}\n\n.fancybox-title-float-wrap {\n\tposition: absolute;\n\tbottom: 0;\n\tright: 50%;\n\tmargin-bottom: -35px;\n\tz-index: 8050;\n\ttext-align: center;\n}\n\n.fancybox-title-float-wrap .child {\n\tdisplay: inline-block;\n\tmargin-right: -100%;\n\tpadding: 2px 20px;\n\tbackground: transparent; /* Fallback for web browsers that doesn't support RGBa */\n\tbackground: rgba(0, 0, 0, 0.8);\n\t-webkit-border-radius: 15px;\n\t   -moz-border-radius: 15px;\n\t        border-radius: 15px;\n\ttext-shadow: 0 1px 2px #222;\n\tcolor: #FFF;\n\tfont-weight: bold;\n\tline-height: 24px;\n\twhite-space: nowrap;\n}\n\n.fancybox-title-outside-wrap {\n\tposition: relative;\n\tmargin-top: 10px;\n\tcolor: #fff;\n}\n\n.fancybox-title-inside-wrap {\n\tpadding-top: 10px;\n}\n\n.fancybox-title-over-wrap {\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\tcolor: #fff;\n\tpadding: 10px;\n\tbackground: #000;\n\tbackground: rgba(0, 0, 0, .8);\n}\n\n/*Retina graphics!*/\n@media only screen and (-webkit-min-device-pixel-ratio: 1.5),\n\t   only screen and (min--moz-device-pixel-ratio: 1.5),\n\t   only screen and (min-device-pixel-ratio: 1.5){\n\n\t#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\n\t\tbackground-image: url('/images/fancybox_sprite%402x.png');\n\t\tbackground-size: 44px 152px; /*The size of the normal image, half the size of the hi-res image*/\n\t}\n\n\t#fancybox-loading div {\n\t\tbackground-image: url('/images/fancybox_loading%402x.gif');\n\t\tbackground-size: 24px 24px; /*The size of the normal image, half the size of the hi-res image*/\n\t}\n}\n\n/* ======= 7. Footer =================== */\n\n.blue_strip {\n        overflow: hidden;\n        height: 105px;\n        width: 100%;\n        background: #58C8E9;\n        background-image: url(/images/footer_blue_bkg.png);\n        background-position: 0px 9px;\n        }\nfooter {\n        width: 100%;\n        background: #231F20;\n        padding-top: 45px;\n        }\nfooter .basestrip {\n        overflow: hidden;\n        width: 100%;\n        background: #3F3D3E;\n        height: 45px;\n        line-height: 40px;\n        padding: 0px;\n        margin: 0px;\n        clear: both;\n        }\nfooter span, footer a {\n        color: #A7A9AC;\n        font-size: 11px;\n        margin-left: 60px;\n        }\nfooter .six {\n        width: 16%;\n        float: left;\n        text-align: center;\n        margin-bottom: 45px;\n}\n\nfooter .six ul {\n        width: 100%;\n        padding-top: 20px;\n     \n}\nfooter .six ul li {\n        width: 100%;\n        clear: both;\n}\nfooter ul li a {\n        color:#FFC420;\n            }\nfooter .six li.ul_head a {\n        color: #fff;\n        font-weight: bold;\n        }\nfooter ul.social_foot img {\n        width: 20px;\n        }\nfooter ul.social_foot li {\n        width: 25px;\n        float: left;\n       clear: none;\n    }\nfooter ul.social_foot li.ul_head {\n        width: 100%;\n        }\nfooter ul.social_foot li.clr {\n        clear: left;\n        }\nfooter ul.social_foot ul.social_narrow {\n        width: 107px;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 8px;\n        }\n\n.strapline {\n        float: right;\n        font-size: 11px;\n        font-weight: bold;\n        color: #2EB785;\n        margin-right: 60px;\n        }\n        \n/* ======= 8. Media Queries ========== */\n\n/* Hide Non Mobile Elements ! */\n\n.mobile, .mobile_hide {display: none;}\n\n/* Larger Screens */\n\n@media only screen \nand (min-device-width : 1024px) \nand (max-device-width : 2880px)  { \n    \n    /* Calculate max width of the 100% menu minus the donate & Logo 3PX extra for browsre scope */\n    header nav ul {\n            max-width: 650px;\n            max-width: calc(100% - 320px);\n    } \n    \n     \n    /* calculate theMargin to scale according to the total Size */\n    header nav ul li {\n        margin: 0px;\n        padding: 0px;\n            margin-left: 25px;\n            margin-right: 25px;\n        margin-left: calc((100% - 320px) / 12);\n        margin-right: calc((100% - 320px) / 12);\n    }\n   \n    /* Close Out*/\n}\n\n/*\n * The 1X sizes will be fine, as retina will adhere to the sizingX2\n * Aspect Ratio's and MAth floor stays the same between the screen variants!\n */\n\n/* Nexus */\n\n@media all\nand (max-device-width: 640px )\n    and (min-device-width: 360px )\n        \n        {\n         .footer_menus {display: none;} \n        .slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n         height: 250px;\n         }\n        /* Slide Specific Fixes */\n        .slide_1 {background:  #000 url(/images/s1_kids_ip.jpg) no-repeat center; }\n        .slide_2 {background:  #000 url(/images/meet_ip_blue.jpg) no-repeat center right;  }\n        .slide_2 {background-size: auto 250px; background-position:  0px 0px !important;  }\n        .slide_3 {background:  url(/images/s3_shirts_ip.jpg) no-repeat top; }\n        .slide_1 {background-size: auto 380px; }\n        .slide_2 {background-size: auto 380px; background-position: 0 -0px;  }\n        .slide_3 {background-size: auto 380px; }\n        a.boxed  {margin-top: 90px; width: 300px;}\n        a.yellow_cta, a.black_cta {font-size: 20px}    \n        .slide_4 {background:  url(/images/s3_shirts.jpg) no-repeat top center; }  \n\n        \n        /* Close Out */        \n        }\n        \n\n/* iPad Widths // Portrait & Land Scape */\n\n@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px)  { \n        \n    /* Calculate max width of the 100% menu minus the donate & Logo 3PX extra for browser scope */\n        header nav ul {max-width: calc(100% - 320px);} \n    \n     \n        /* calculate theMargin to scale according to the total Size */\n        header nav ul li {\n           margin: 0px;\n            padding: 0px;\n            margin-left: calc((100% - 320px) / 12);\n            margin-right: calc((100% - 320px) / 12);\n        }\n        \n    \n    \n    /* Close Out */\n}\n\n/* iPad Width Portrait */\n\n@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px) \nand (orientation : portrait) {\n        \n         .footer_menus {display: none;} \n         \n          \n         /* this is the minimum width that these menu's are usaeable */\n         .slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n                 height: 300px; /* Note: change for mobile */\n         }\n        .staff .responsive_wrap_fullwidth {\n                width: 640px !important;\n                margin-left: auto;\n                margin-right: auto;\n                overflow: hidden;\n        }\n        .slide_2 .black_cta {background: rgba(255, 199, 0, 0.9); float: right; margin-right: 20px;}\n        /*close out */ \n        }\n\n\n/* iP Portrait & Land Scape */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 480px) { \n    \n    .footer_menus {display: none;} \n    .slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n         height: 250px; /* Note: change for mobile */\n         }\n    /* Slide Specific Fixes */\n    .slide_1 {background:  #000 url(/images/s1_kids_ip.jpg) no-repeat center; }\n    .slide_2 {background:  #000 url(/images/meet_ip_blue.jpg) no-repeat center right;  }\n    .slide_3 {background:  url(/images/s3_shirts_ip.jpg) no-repeat top; }\n    .slide_4 {background:  url(/images/book_ip.jpg) no-repeat top center; }\n    a.boxed  {margin-top: 90px; width: 300px;}\n    a.yellow_cta, a.black_cta {font-size: 20px}\n    \n    /* Mobile Menu */\n    \n    /* Close Out */\n    }\n\n/* iP Landscape */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 480px) \nand (orientation : landscape) { \n          /* Slide Specific Fixes */\n    .slide_1 {background-size: auto 350px; }\n    .slide_2 {background-size: auto 350px; background-position: 0 -0px;  }\n    .slide_3 {background-size: auto 290px; }\n    .slide_4 {background-size: auto 350px; }   \n    /* close out */\n    }\n\n/* iP Portrait */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 480px) \nand (orientation : portrait) { \n    .slide_1 {background-size: auto 250px; }\n    .slide_2 {background-size: auto 250px; background-position: -120px -0px;  }\n    .slide_3 {background-size: auto 250px; }\n    .slide_4 {background-size: auto 250px; }\n    /* Close Out */ \n    }\n\n/* 320 X 568px - iP 5 + 5s // Samsung // nexus ? */\n\n/* iP5 Landscape & Portrait */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 640px) \n/* Added Width for Nexus */\n{ \n    \n    .footer_menus {display: none;}\n    .footer_menus {display: none;} \n    .slide_1, .slide_2, .slide_3, .slide_4, .slide_5, .slide_6 {\n         height: 250px; /* Note: change for mobile */\n         }\n    /* Slide Specific Fixes */\n    .slide_1 {background:  #000 url(/images/s1_kids_ip.jpg) no-repeat center; }\n    .slide_2 {background:  #000 url(/images/meet_ip_blue.jpg) no-repeat center right;  }\n    .slide_3 {background:  url(/images/s3_shirts_ip.jpg) no-repeat top; }\n    .slide_3 .black_cta {background: rgba(244, 64, 53, 0.7); }\n    .slide_2 .black_cta {background: rgba(255, 199, 0, 0.9); float: none; margin-right: auto;}\n        a.boxed  {margin-top: 90px; width: 300px;}\n        a.yellow_cta, a.black_cta {font-size: 20px}\n        a.black_cta {}\n       nav.menu_wrapper, .social_icons {display: none;}\n    .slide_4 {background:  url(/images/meet_blue_ip.html) no-repeat top center; }\n       \n       \n    /*  header fixes */\n    a.logo {\n        width: 70px;\n        height: 60px;\n        display: block;\n        overflow: hidden;\n        overflow:hidden;\n        text-indent:100%;\n        white-space:nowrap;\n        /* Revise on live Site */\n        background: url(/images/adanu_logo.png) #FFC420 no-repeat top left;\n        background-size: 100%;\n        float: left;\n           }\n   header {\n        width: 100%;\n        height: 60px;\n        overflow: hidden;\n          } \n    a.donate {\n        border: 4px solid #221E1F;\n        display: block;\n        text-align: center;\n        font-weight: bold;\n        font-size: 14px;\n        margin-top: 14px;\n        line-height: 25px;\n        height: 35px;\n        \n        }\n    .social {\n        width: 90px;\n        margin-right: 5px;\n        float: right;\n         }\n    .hamburger {\n        width: 50px; \n        height: 60px; \n        float: left;\n        padding-top: 20px;\n        margin-top: 15px;\n        background: url(/images/mobile_menu.png) no-repeat top center;\n        background-size: 35px;\n        font-size: 14px;\n        font-weight: bold;\n        overflow: hidden;\n        text-align: center;\n        text-transform: lowercase;\n        display: inline-block;\n        margin-left: 20px;\n       }\n    /* Mobile Menu Toggles */\n    .mobile {\n        display: block;\n        }\n    .mobile_show {\n        display: block !important;\n        }\n    .conditional_menu {\n        display: none;\n        }\n    .mobile_show {\n        overflow: hidden;\n        background: #232323;\n        }\n    .mobile_show li {\n        width: 100%;\n        clear: both;\n        }\n    .mobile_show ul li {\n        width: 100%;\n        height: 38px;\n        text-align: left;\n        text-indent: 20px;\n        \n    }\n    .mobile_show ul li ul {\n        width: 100%;\n       float: left;\n        clear: both;\n    }\n    .mobile_show ul li ul li {\n        width: 100%;\n       float: left;\n        padding-left: 15px;\n    }\n    .mobile_show a {\n        color: #ccc;\n        font-weight: bold;\n        font-size: 15px;\n        line-height: 35px;\n    }\n    .mobile_show ul li ul li a {\n        color: #FFC420;\n        font-size: 13px;\n    }\n\n    /* Cols to Full Width */\n    \n    .fifty_col, .sixty_col, .forty_col {\n        width: 100%;\n        clear: both;\n    \n}\n    /* Force Grid to Full Width on mobile */\n        .seventy, \n        .sixty, \n        .fifty,\n        .forty,\n        .thirty, \n        .thirtythree {\n                width: 90%;\n                padding: 5%;\n                text-align: center;\n                float: none;\n                margin-left: auto;\n                margin-right: auto;\n                } \n    \n        \n /* Text fixes */\n        \n        .leaderboard h2 {\n                font-size: 20px !important;\n                line-height: 1.5 !important;\n                }\n        .leaderboard {\n                padding-bottom: 10px;\n                }\n        footer {\n                padding-top:5px;\n                }\n        footer .basestrip {\n                height: auto;\n                }\n        footer .copyright,\n        footer .privacypolicy{\n                width: 50%;\n                text-align: center;\n                float: left;\n                padding: 0px;\n                margin: 0px;\n                }\n        footer .privacypolicy a {\n                width: 100%;\n                margin: 0px;\n                margin-right: 0px;\n                }\n        footer .imagefooter {\n                margin: 0px;\n                padding: 2px;\n                width: 100%;\n                }\n        footer .footerimage {\n      \t        margin: 0px;\n                padding: 0px;\n                text-align: center;\n                }\n        footer .strapline {\n                margin: 0px;\n                padding: 0px;\n                text-align: center;\n                width: 100%;\n                font-size: 110%;\n                }\n        .itinerary_section > h2:nth-child(1) {\n                text-align: center;\n                }\n        .itinerary_row {\n                width: 100%;\n                }\n        .itinerary_section h1,\n        .sider h1 {\n                font-size: 36px;\n                }\n        .itinerary_section {\n                width: 90%;\n                margin: 5%;\n                }\n        .sider {\n                margin: 5%;\n                width: 90%;\n                }\n        a.side_boxed {\n                text-align: center;\n                }\n        h2.give_title {\n                font-size: 26px;\n                }\n        .arw_blk {\n                display: none;\n                }\n        .arrow_space {\n                padding: 0px;\n                width: 100%;\n                }\n        .in_action h3 {\n                line-height: 1.4;\n                }\n        .ghana_map {\n                margin: 0px;\n                }\n        .page-template-pagespage_contact-php h1,\n        .page-template-pagespage_contact-php h1 a {\n                font-size: 26px;\n                line-height: 1.5; width: 90%;\n                text-align: center;\n                margin: 0px;\n                }\n        .contact {\n                min-height: 100px;\n                padding: 10px;\n                }\n        .donation_form {\n                width: 90%;\n                margin: 5%;\n                }\n        .donation_form input {\n                width: 100% !important;\n                }\n        .ginput_left,\n        .ginput_right {\n                width: 100% !important;\n                clear: both;\n                float: left;\n                }\n        .ginput_left input,\n        .ginput_right input {\n                width: 100% !important;\n                clear: both;\n                float: left;\n                }\n        .ginput_full {\n                margin-top: 20px;\n                }\n        .ginput_card_security_code_icon {\n                display: none !important;\n                }\n        #input_1_5_2_cardinfo_right > label:nth-child(3) {\n                float: left!important;\n                clear: both;\n                display: block;\n                }\n        .ginput_card_field {\n                margin-bottom: 20px;\n                }\n        #gform_submit_button_1 {\n                font-size: 26px !important;\n                }\n        .sitemessage {\n                display: none;\n                } /* removes the site notification on mobile */\n        .cf_spacing {\n                padding: 0px;\n                margin: 0px;\n                padding-top: 20px; /* Drops the padding for a better experience */\n        }\n        .donation_form li {width: 100%;}\n        .donation_form input {width: 95% !important;}\n        .fifty_form {width: 100% !important;}\n        #field_1_3, #field_1_8 {width: 100% !important;}\n        #field_1_5 { width: 100%;}\n        #field_1_6 { margin: 0px !important;}\n        .leaderboard p { max-width: 95%;}\n        .leaderboard p span {margin-bottom: 100px;}\n        .ideas h1 {margin-bottom: 0px;}\n        .sponsors .thirtythree { width: 100%;}\n        .finance #canvas-holder {margin-left: -20px; margin-top: 20px; padding-left: 0px;}\n        .finance .blue .thirtythree {margin-top: 10px !important; padding-top: 10px; padding-bottom: 0px}\n        .finance .blue .thirtythree p {padding-top: 0px !important; margin-top: 0px;}\n        .finance .blue {padding-bottom: 45px; padding-top: 5px;}\n        .finance .fin_title { text-align: center !important;} \n        .about .bar_clear {margin-top: 45px;}\n        .row .leaderboard { padding-top: 25px; padding-bottom: 25px;}\n        .category_layout .sixty_col { min-height: 100px;}\n        .post_section {\n                width: 100%;\n                padding: 5%;\n                margin: 0px;\n                \n        }\n        .fin_title { margin-top: 0px !important;}\n        .twentyfive_si {width: 50%; float: left; padding: 0px; margin: 0px; overflow: hidden;}\n        div.twentyfive_si:nth-child(3) {clear: left;}\n        .extender { min-height: 200px !important;}\n/* Close Out */\n    }\n\n\n\n/* iP5 Landscape */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 568px) \nand (orientation : landscape) { \n        .slide_1 {background-size: auto 350px; }\n        .slide_2 {background-size: auto 350px; background-position: -10px -0px;  }\n        .slide_3 {background-size: auto 320px; background-position: -00px -20px; }\n        .slide_4 {background-size: auto 350px; }\n\n    /* Close out */\n}\n\n/* iP5 Portrait */\n\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 568px) \nand (orientation : portrait) {  \n    .slide_1 {background-size: auto 250px; }\n    .slide_2 {background-size: auto 250px; background-position: -0px -0px;  }\n    .slide_3 {background-size: auto 250px; }\n    .slide_4 {background-size: auto 250px; } \n\n    /* Close Out */ \n    }\n\n/* Signup Form */\n.dsip_none {display: none;}\n#mce-EMAIL { \nmargin-top: 20px;\nmargin-left: 90px;\nbackground: #333;\nborder: 1px solid #FFC420 !important;\ntext-align: center !important;\nfont-size: 12px !important;\n        font-weight: normal;\ncolor: #fff;\nwidth: 130%;\n}\n#mc-embedded-subscribe {\n        margin-left: 90px;\n        border: 1px solid #FFC420 !important;\n        margin-top: 5px; font-size: 12px !important;\n        color: #fff !important;\n        background: #333 !important;}\n.approach_video {\n        width: 720px;\n        clear: both;\n        margin-left: auto;\n        margin-right: auto;\n}\n\n/* Fixes - Blog - */\n.adanu_blog .post_title {\n        line-height: 140%;\n}\n\n.adanu_blog img {height: auto !important;}\n\n.align-middle {\n        text-align: center;\n}"]}]);
// Exports
module.exports = exports;


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;
//# sourceMappingURL=object-assign.js.map

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


    (window.__NEXT_P = window.__NEXT_P || []).push([
      "/_app",
      function () {
        return __webpack_require__(/*! private-next-pages/_app.js */ "./pages/_app.js");
      }
    ]);
  

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.removePathTrailingSlash = removePathTrailingSlash;
exports.normalizePathTrailingSlash = void 0;
/**
* Removes the trailing slash of a path if there is one. Preserves the root path `/`.
*/

function removePathTrailingSlash(path) {
  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;
}
/**
* Normalizes the trailing slash of a path according to the `trailingSlash` option
* in `next.config.js`.
*/


var normalizePathTrailingSlash =  false ? undefined : removePathTrailingSlash;
exports.normalizePathTrailingSlash = normalizePathTrailingSlash;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _construct = __webpack_require__(/*! @babel/runtime/helpers/construct */ "./node_modules/@babel/runtime/helpers/construct.js");

var _s = $RefreshSig$();

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js"));

exports.Router = _router2["default"];
exports.NextRouter = _router2.NextRouter;

var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "./node_modules/next/dist/next-server/lib/router-context.js");

var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/client/with-router.js"));

exports.withRouter = _withRouter["default"];
/* global window */

var singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],
  ready: function ready(cb) {
    if (this.router) return cb();

    if (true) {
      this.readyCallbacks.push(cb);
    }
  }
}; // Create public properties and methods of the router in the singletonRouter

var urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath'];
var routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
var coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(singletonRouter, 'events', {
  get: function get() {
    return _router2["default"].events;
  }
});
urlPropertyFields.forEach(function (field) {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get: function get() {
      var router = getRouter();
      return router[field];
    }
  });
});
coreMethodFields.forEach(function (field) {
  // We don't really know the types here, so we add them later instead
  ;

  singletonRouter[field] = function () {
    var router = getRouter();
    return router[field].apply(router, arguments);
  };
});
routerEvents.forEach(function (event) {
  singletonRouter.ready(function () {
    _router2["default"].events.on(event, function () {
      var eventField = "on".concat(event.charAt(0).toUpperCase()).concat(event.substring(1));
      var _singletonRouter = singletonRouter;

      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField].apply(_singletonRouter, arguments);
        } catch (err) {
          console.error("Error when running the Router event: ".concat(eventField));
          console.error("".concat(err.message, "\n").concat(err.stack));
        }
      }
    });
  });
});

function getRouter() {
  if (!singletonRouter.router) {
    var message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }

  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.


var _default = singletonRouter; // Reexport the withRoute HOC

exports["default"] = _default;

function useRouter() {
  _s();

  return _react["default"].useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.


_s(useRouter, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");

var createRouter = function createRouter() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  singletonRouter.router = _construct(_router2["default"], args);
  singletonRouter.readyCallbacks.forEach(function (cb) {
    return cb();
  });
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance


exports.createRouter = createRouter;

function makePublicRouterInstance(router) {
  var _router = router;
  var instance = {};

  var _iterator = _createForOfIteratorHelper(urlPropertyFields),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var property = _step.value;

      if (typeof _router[property] === 'object') {
        instance[property] = Object.assign({}, _router[property]); // makes sure query is not stateful

        continue;
      }

      instance[property] = _router[property];
    } // Events is a static property on the router, the router doesn't have to be initialized to use it

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  instance.events = _router2["default"].events;
  coreMethodFields.forEach(function (field) {
    instance[field] = function () {
      return _router[field].apply(_router, arguments);
    };
  });
  return instance;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = withRouter;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _router = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");

function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react["default"].createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }

  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

  if (true) {
    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = "withRouter(".concat(name, ")");
  }

  return WithRouterWrapper;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/compiled/path-to-regexp/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-to-regexp/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Tokenize input string.
 */
function lexer(str) {
    var tokens = [];
    var i = 0;
    while (i < str.length) {
        var char = str[i];
        if (char === "*" || char === "+" || char === "?") {
            tokens.push({ type: "MODIFIER", index: i, value: str[i++] });
            continue;
        }
        if (char === "\\") {
            tokens.push({ type: "ESCAPED_CHAR", index: i++, value: str[i++] });
            continue;
        }
        if (char === "{") {
            tokens.push({ type: "OPEN", index: i, value: str[i++] });
            continue;
        }
        if (char === "}") {
            tokens.push({ type: "CLOSE", index: i, value: str[i++] });
            continue;
        }
        if (char === ":") {
            var name = "";
            var j = i + 1;
            while (j < str.length) {
                var code = str.charCodeAt(j);
                if (
                // `0-9`
                (code >= 48 && code <= 57) ||
                    // `A-Z`
                    (code >= 65 && code <= 90) ||
                    // `a-z`
                    (code >= 97 && code <= 122) ||
                    // `_`
                    code === 95) {
                    name += str[j++];
                    continue;
                }
                break;
            }
            if (!name)
                throw new TypeError("Missing parameter name at " + i);
            tokens.push({ type: "NAME", index: i, value: name });
            i = j;
            continue;
        }
        if (char === "(") {
            var count = 1;
            var pattern = "";
            var j = i + 1;
            if (str[j] === "?") {
                throw new TypeError("Pattern cannot start with \"?\" at " + j);
            }
            while (j < str.length) {
                if (str[j] === "\\") {
                    pattern += str[j++] + str[j++];
                    continue;
                }
                if (str[j] === ")") {
                    count--;
                    if (count === 0) {
                        j++;
                        break;
                    }
                }
                else if (str[j] === "(") {
                    count++;
                    if (str[j + 1] !== "?") {
                        throw new TypeError("Capturing groups are not allowed at " + j);
                    }
                }
                pattern += str[j++];
            }
            if (count)
                throw new TypeError("Unbalanced pattern at " + i);
            if (!pattern)
                throw new TypeError("Missing pattern at " + i);
            tokens.push({ type: "PATTERN", index: i, value: pattern });
            i = j;
            continue;
        }
        tokens.push({ type: "CHAR", index: i, value: str[i++] });
    }
    tokens.push({ type: "END", index: i, value: "" });
    return tokens;
}
/**
 * Parse a string for the raw tokens.
 */
function parse(str, options) {
    if (options === void 0) { options = {}; }
    var tokens = lexer(str);
    var _a = options.prefixes, prefixes = _a === void 0 ? "./" : _a;
    var defaultPattern = "[^" + escapeString(options.delimiter || "/#?") + "]+?";
    var result = [];
    var key = 0;
    var i = 0;
    var path = "";
    var tryConsume = function (type) {
        if (i < tokens.length && tokens[i].type === type)
            return tokens[i++].value;
    };
    var mustConsume = function (type) {
        var value = tryConsume(type);
        if (value !== undefined)
            return value;
        var _a = tokens[i], nextType = _a.type, index = _a.index;
        throw new TypeError("Unexpected " + nextType + " at " + index + ", expected " + type);
    };
    var consumeText = function () {
        var result = "";
        var value;
        // tslint:disable-next-line
        while ((value = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR"))) {
            result += value;
        }
        return result;
    };
    while (i < tokens.length) {
        var char = tryConsume("CHAR");
        var name = tryConsume("NAME");
        var pattern = tryConsume("PATTERN");
        if (name || pattern) {
            var prefix = char || "";
            if (prefixes.indexOf(prefix) === -1) {
                path += prefix;
                prefix = "";
            }
            if (path) {
                result.push(path);
                path = "";
            }
            result.push({
                name: name || key++,
                prefix: prefix,
                suffix: "",
                pattern: pattern || defaultPattern,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        var value = char || tryConsume("ESCAPED_CHAR");
        if (value) {
            path += value;
            continue;
        }
        if (path) {
            result.push(path);
            path = "";
        }
        var open = tryConsume("OPEN");
        if (open) {
            var prefix = consumeText();
            var name_1 = tryConsume("NAME") || "";
            var pattern_1 = tryConsume("PATTERN") || "";
            var suffix = consumeText();
            mustConsume("CLOSE");
            result.push({
                name: name_1 || (pattern_1 ? key++ : ""),
                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
                prefix: prefix,
                suffix: suffix,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        mustConsume("END");
    }
    return result;
}
exports.parse = parse;
/**
 * Compile a string to a template function for the path.
 */
function compile(str, options) {
    return tokensToFunction(parse(str, options), options);
}
exports.compile = compile;
/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction(tokens, options) {
    if (options === void 0) { options = {}; }
    var reFlags = flags(options);
    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;
    // Compile all the tokens into regexps.
    var matches = tokens.map(function (token) {
        if (typeof token === "object") {
            return new RegExp("^(?:" + token.pattern + ")$", reFlags);
        }
    });
    return function (data) {
        var path = "";
        for (var i = 0; i < tokens.length; i++) {
            var token = tokens[i];
            if (typeof token === "string") {
                path += token;
                continue;
            }
            var value = data ? data[token.name] : undefined;
            var optional = token.modifier === "?" || token.modifier === "*";
            var repeat = token.modifier === "*" || token.modifier === "+";
            if (Array.isArray(value)) {
                if (!repeat) {
                    throw new TypeError("Expected \"" + token.name + "\" to not repeat, but got an array");
                }
                if (value.length === 0) {
                    if (optional)
                        continue;
                    throw new TypeError("Expected \"" + token.name + "\" to not be empty");
                }
                for (var j = 0; j < value.length; j++) {
                    var segment = encode(value[j], token);
                    if (validate && !matches[i].test(segment)) {
                        throw new TypeError("Expected all \"" + token.name + "\" to match \"" + token.pattern + "\", but got \"" + segment + "\"");
                    }
                    path += token.prefix + segment + token.suffix;
                }
                continue;
            }
            if (typeof value === "string" || typeof value === "number") {
                var segment = encode(String(value), token);
                if (validate && !matches[i].test(segment)) {
                    throw new TypeError("Expected \"" + token.name + "\" to match \"" + token.pattern + "\", but got \"" + segment + "\"");
                }
                path += token.prefix + segment + token.suffix;
                continue;
            }
            if (optional)
                continue;
            var typeOfMessage = repeat ? "an array" : "a string";
            throw new TypeError("Expected \"" + token.name + "\" to be " + typeOfMessage);
        }
        return path;
    };
}
exports.tokensToFunction = tokensToFunction;
/**
 * Create path match function from `path-to-regexp` spec.
 */
function match(str, options) {
    var keys = [];
    var re = pathToRegexp(str, keys, options);
    return regexpToFunction(re, keys, options);
}
exports.match = match;
/**
 * Create a path match function from `path-to-regexp` output.
 */
function regexpToFunction(re, keys, options) {
    if (options === void 0) { options = {}; }
    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;
    return function (pathname) {
        var m = re.exec(pathname);
        if (!m)
            return false;
        var path = m[0], index = m.index;
        var params = Object.create(null);
        var _loop_1 = function (i) {
            // tslint:disable-next-line
            if (m[i] === undefined)
                return "continue";
            var key = keys[i - 1];
            if (key.modifier === "*" || key.modifier === "+") {
                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {
                    return decode(value, key);
                });
            }
            else {
                params[key.name] = decode(m[i], key);
            }
        };
        for (var i = 1; i < m.length; i++) {
            _loop_1(i);
        }
        return { path: path, index: index, params: params };
    };
}
exports.regexpToFunction = regexpToFunction;
/**
 * Escape a regular expression string.
 */
function escapeString(str) {
    return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
/**
 * Get the flags for a regexp from the options.
 */
function flags(options) {
    return options && options.sensitive ? "" : "i";
}
/**
 * Pull out keys from a regexp.
 */
function regexpToRegexp(path, keys) {
    if (!keys)
        return path;
    // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g);
    if (groups) {
        for (var i = 0; i < groups.length; i++) {
            keys.push({
                name: i,
                prefix: "",
                suffix: "",
                modifier: "",
                pattern: ""
            });
        }
    }
    return path;
}
/**
 * Transform an array into a regexp.
 */
function arrayToRegexp(paths, keys, options) {
    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });
    return new RegExp("(?:" + parts.join("|") + ")", flags(options));
}
/**
 * Create a path regexp from string input.
 */
function stringToRegexp(path, keys, options) {
    return tokensToRegexp(parse(path, options), keys, options);
}
/**
 * Expose a function for taking tokens and returning a RegExp.
 */
function tokensToRegexp(tokens, keys, options) {
    if (options === void 0) { options = {}; }
    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;
    var endsWith = "[" + escapeString(options.endsWith || "") + "]|$";
    var delimiter = "[" + escapeString(options.delimiter || "/#?") + "]";
    var route = start ? "^" : "";
    // Iterate over the tokens and create our regexp string.
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof token === "string") {
            route += escapeString(encode(token));
        }
        else {
            var prefix = escapeString(encode(token.prefix));
            var suffix = escapeString(encode(token.suffix));
            if (token.pattern) {
                if (keys)
                    keys.push(token);
                if (prefix || suffix) {
                    if (token.modifier === "+" || token.modifier === "*") {
                        var mod = token.modifier === "*" ? "?" : "";
                        route += "(?:" + prefix + "((?:" + token.pattern + ")(?:" + suffix + prefix + "(?:" + token.pattern + "))*)" + suffix + ")" + mod;
                    }
                    else {
                        route += "(?:" + prefix + "(" + token.pattern + ")" + suffix + ")" + token.modifier;
                    }
                }
                else {
                    route += "(" + token.pattern + ")" + token.modifier;
                }
            }
            else {
                route += "(?:" + prefix + suffix + ")" + token.modifier;
            }
        }
    }
    if (end) {
        if (!strict)
            route += delimiter + "?";
        route += !options.endsWith ? "$" : "(?=" + endsWith + ")";
    }
    else {
        var endToken = tokens[tokens.length - 1];
        var isEndDelimited = typeof endToken === "string"
            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1
            : // tslint:disable-next-line
                endToken === undefined;
        if (!strict) {
            route += "(?:" + delimiter + "(?=" + endsWith + "))?";
        }
        if (!isEndDelimited) {
            route += "(?=" + delimiter + "|" + endsWith + ")";
        }
    }
    return new RegExp(route, flags(options));
}
exports.tokensToRegexp = tokensToRegexp;
/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 */
function pathToRegexp(path, keys, options) {
    if (path instanceof RegExp)
        return regexpToRegexp(path, keys);
    if (Array.isArray(path))
        return arrayToRegexp(path, keys, options);
    return stringToRegexp(path, keys, options);
}
exports.pathToRegexp = pathToRegexp;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports["default"] = mitt;
/*
MIT License
Copyright (c) Jason Miller (https://jasonformat.com/)
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file

function mitt() {
  var all = Object.create(null);
  return {
    on: function on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },
    off: function off(type, handler) {
      if (all[type]) {
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },
    emit: function emit(type) {
      for (var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        evts[_key - 1] = arguments[_key];
      }

      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(function (handler) {
        handler.apply(void 0, evts);
      });
    }
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router-context.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router-context.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.RouterContext = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var RouterContext = /*#__PURE__*/_react["default"].createContext(null);

exports.RouterContext = RouterContext;

if (true) {
  RouterContext.displayName = 'RouterContext';
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _slicedToArray = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js");

var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");

var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");

exports.__esModule = true;
exports.hasBasePath = hasBasePath;
exports.addBasePath = addBasePath;
exports.delBasePath = delBasePath;
exports.isLocalURL = isLocalURL;
exports.resolveHref = resolveHref;
exports.markLoadingError = markLoadingError;
exports["default"] = void 0;

var _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ "./node_modules/next/dist/client/normalize-trailing-slash.js");

var _denormalizePagePath = __webpack_require__(/*! ../../server/denormalize-page-path */ "./node_modules/next/dist/next-server/server/denormalize-page-path.js");

var _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ "./node_modules/next/dist/next-server/lib/mitt.js"));

var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");

var _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");

var _querystring = __webpack_require__(/*! ./utils/querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");

var _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js"));

var _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");

var _routeRegex = __webpack_require__(/*! ./utils/route-regex */ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/* global __NEXT_DATA__ */
// tslint:disable:no-console


var basePath =  false || '';

function buildCancellationError() {
  return Object.assign(new Error('Route Cancelled'), {
    cancelled: true
  });
}

function hasBasePath(path) {
  return path === basePath || path.startsWith(basePath + '/');
}

function addBasePath(path) {
  // we only add the basepath on relative urls
  return basePath && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(basePath) : basePath + path : path;
}

function delBasePath(path) {
  return path.slice(basePath.length) || '/';
}
/**
* Detects whether a given url is routable by the Next.js router (browser only).
*/


function isLocalURL(url) {
  if (url.startsWith('/')) return true;

  try {
    // absolute urls can be local if they are on the same origin
    var locationOrigin = (0, _utils.getLocationOrigin)();
    var resolved = new URL(url, locationOrigin);
    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);
  } catch (_) {
    return false;
  }
}
/**
* Resolves a given hyperlink with a certain router state (basePath not included).
* Preserves absolute urls.
*/


function resolveHref(currentPath, href) {
  // we use a dummy base url for relative urls
  var base = new URL(currentPath, 'http://n');
  var urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href);

  try {
    var finalUrl = new URL(urlAsString, base);
    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname); // if the origin didn't change, it means we received a relative href

    return finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
  } catch (_) {
    return urlAsString;
  }
}

var PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR');

function markLoadingError(err) {
  return Object.defineProperty(err, PAGE_LOAD_ERROR, {});
}

function prepareUrlAs(router, url, as) {
  // If url and as provided as an object representation,
  // we'll format them into the string version here.
  return {
    url: addBasePath(resolveHref(router.pathname, url)),
    as: as ? addBasePath(resolveHref(router.pathname, as)) : as
  };
}

var manualScrollRestoration =  false && false;

function fetchRetry(url, attempts) {
  return fetch(url, {
    // Cookies are required to be present for Next.js' SSG "Preview Mode".
    // Cookies may also be required for `getServerSideProps`.
    //
    // > `fetch` won’t send cookies, unless you set the credentials init
    // > option.
    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    //
    // > For maximum browser compatibility when it comes to sending &
    // > receiving cookies, always supply the `credentials: 'same-origin'`
    // > option instead of relying on the default.
    // https://github.com/github/fetch#caveats
    credentials: 'same-origin'
  }).then(function (res) {
    if (!res.ok) {
      if (attempts > 1 && res.status >= 500) {
        return fetchRetry(url, attempts - 1);
      }

      throw new Error("Failed to load static props");
    }

    return res.json();
  });
}

function fetchNextData(dataHref, isServerRender) {
  return fetchRetry(dataHref, isServerRender ? 3 : 1)["catch"](function (err) {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      markLoadingError(err);
    }

    throw err;
  });
}

var Router = /*#__PURE__*/function () {
  /**
  * Map of all components loaded in `Router`
  */
  // Static Data Cache
  function Router(_pathname, _query, _as, _ref) {
    var _this = this;

    var initialProps = _ref.initialProps,
        pageLoader = _ref.pageLoader,
        App = _ref.App,
        wrapApp = _ref.wrapApp,
        Component = _ref.Component,
        initialStyleSheets = _ref.initialStyleSheets,
        err = _ref.err,
        subscription = _ref.subscription,
        isFallback = _ref.isFallback;

    _classCallCheck(this, Router);

    this.route = void 0;
    this.pathname = void 0;
    this.query = void 0;
    this.asPath = void 0;
    this.basePath = void 0;
    this.components = void 0;
    this.sdc = {};
    this.sub = void 0;
    this.clc = void 0;
    this.pageLoader = void 0;
    this._bps = void 0;
    this.events = void 0;
    this._wrapApp = void 0;
    this.isSsr = void 0;
    this.isFallback = void 0;
    this._inFlightRoute = void 0;
    this._shallow = void 0;

    this.onPopState = function (e) {
      var state = e.state;

      if (!state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        var _pathname2 = _this.pathname,
            query = _this.query;

        _this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(_pathname2),
          query: query
        }), (0, _utils.getURL)());

        return;
      }

      if (!state.__N) {
        return;
      }

      var url = state.url,
          as = state.as,
          options = state.options;

      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(url),
          pathname = _ref2.pathname; // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site


      if (_this.isSsr && as === _this.asPath && pathname === _this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (_this._bps && !_this._bps(state)) {
        return;
      }

      _this.change('replaceState', url, as, Object.assign({}, options, {
        shallow: options.shallow && _this._shallow
      }));
    }; // represents the current component key


    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (_pathname !== '/_error') {
      this.components[this.route] = {
        Component: Component,
        styleSheets: initialStyleSheets,
        props: initialProps,
        err: err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }

    this.components['/_app'] = {
      Component: App,
      styleSheets: [
        /* /_app does not need its stylesheets managed */
      ]
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented

    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = _pathname;
    this.query = _query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch

    this.asPath = // @ts-ignore this is temporarily global (attached to window)
    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site

    this.isSsr = true;
    this.isFallback = isFallback;

    if (true) {
      // make sure "as" doesn't start with double slashes or else it can
      // throw an error as it's considered invalid
      if (_as.substr(0, 2) !== '//') {
        // in order for `e.state` to work on the `onpopstate` event
        // we have to register the initial route upon initialization
        this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(_pathname),
          query: _query
        }), (0, _utils.getURL)());
      }

      window.addEventListener('popstate', this.onPopState); // enable custom scroll restoration handling when available
      // otherwise fallback to browser's default handling

      if (false) { var debouncedScrollSave, scrollDebounceTimeout; }
    }
  }

  _createClass(Router, [{
    key: "reload",
    value: function reload() {
      window.location.reload();
    }
    /**
    * Go back in history
    */

  }, {
    key: "back",
    value: function back() {
      window.history.back();
    }
    /**
    * Performs a `pushState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */

  }, {
    key: "push",
    value: function push(url) {
      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      ;

      var _prepareUrlAs = prepareUrlAs(this, url, as);

      url = _prepareUrlAs.url;
      as = _prepareUrlAs.as;
      return this.change('pushState', url, as, options);
    }
    /**
    * Performs a `replaceState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */

  }, {
    key: "replace",
    value: function replace(url) {
      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      ;

      var _prepareUrlAs2 = prepareUrlAs(this, url, as);

      url = _prepareUrlAs2.url;
      as = _prepareUrlAs2.as;
      return this.change('replaceState', url, as, options);
    }
  }, {
    key: "change",
    value: function () {
      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, as, options) {
        var _this2 = this;

        var cleanedAs, pages, _yield$this$pageLoade, rewrites, parsed, _parsed, pathname, searchParams, query, route, _options$shallow, shallow, resolvedAs, _ref3, asPathname, routeRegex, routeMatch, missingParams, routeInfo, error, appComp;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (isLocalURL(url)) {
                  _context.next = 3;
                  break;
                }

                window.location.href = url;
                return _context.abrupt("return", false);

              case 3:
                if (!options._h) {
                  this.isSsr = false;
                } // marking route changes as a navigation start entry


                if (_utils.ST) {
                  performance.mark('routeChange');
                }

                if (this._inFlightRoute) {
                  this.abortComponentLoad(this._inFlightRoute);
                }

                cleanedAs = hasBasePath(as) ? delBasePath(as) : as;
                this._inFlightRoute = as; // If the url change is only related to a hash change
                // We should not proceed. We should only change the state.
                // WARNING: `_h` is an internal option for handing Next.js client-side
                // hydration. Your app should _never_ use this property. It may change at
                // any time without notice.

                if (!(!options._h && this.onlyAHashChange(cleanedAs))) {
                  _context.next = 16;
                  break;
                }

                this.asPath = cleanedAs;
                Router.events.emit('hashChangeStart', as); // TODO: do we need the resolved href when only a hash change?

                this.changeState(method, url, as, options);
                this.scrollToHash(cleanedAs);
                this.notify(this.components[this.route]);
                Router.events.emit('hashChangeComplete', as);
                return _context.abrupt("return", true);

              case 16:
                _context.next = 18;
                return this.pageLoader.getPageList();

              case 18:
                pages = _context.sent;
                _context.next = 21;
                return this.pageLoader.promisedBuildManifest;

              case 21:
                _yield$this$pageLoade = _context.sent;
                rewrites = _yield$this$pageLoade.__rewrites;
                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
                _parsed = parsed, pathname = _parsed.pathname, searchParams = _parsed.searchParams;
                parsed = this._resolveHref(parsed, pages);

                if (parsed.pathname !== pathname) {
                  pathname = parsed.pathname;
                  url = (0, _utils.formatWithValidation)(parsed);
                }

                query = (0, _querystring.searchParamsToUrlQuery)(searchParams); // url and as should always be prefixed with basePath by this
                // point by either next/link or router.push/replace so strip the
                // basePath from the pathname to match the pages dir 1-to-1

                pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page
                // (not location.reload() but reload getInitialProps and other Next.js stuffs)
                // We also need to set the method = replaceState always
                // as this should not go into the history (That's how browsers work)
                // We should compare the new asPath to the current asPath, not the url

                if (!this.urlIsNew(cleanedAs)) {
                  method = 'replaceState';
                }

                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow; // we need to resolve the as value using rewrites for dynamic SSG
                // pages to allow building the data URL correctly

                resolvedAs = as;

                if (true) {
                  resolvedAs = (0, _resolveRewrites["default"])(as, pages, basePath, rewrites, query, function (p) {
                    return _this2._resolveHref({
                      pathname: p
                    }, pages).pathname;
                  });
                }

                resolvedAs = delBasePath(resolvedAs);

                if (!(0, _isDynamic.isDynamicRoute)(route)) {
                  _context.next = 47;
                  break;
                }

                _ref3 = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs), asPathname = _ref3.pathname;
                routeRegex = (0, _routeRegex.getRouteRegex)(route);
                routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);

                if (routeMatch) {
                  _context.next = 46;
                  break;
                }

                missingParams = Object.keys(routeRegex.groups).filter(function (param) {
                  return !query[param];
                });

                if (!(missingParams.length > 0)) {
                  _context.next = 44;
                  break;
                }

                if (true) {
                  console.warn("Mismatching `as` and `href` failed to manually provide " + "the params: ".concat(missingParams.join(', '), " in the `href`'s `query`"));
                }

                throw new Error("The provided `as` value (".concat(asPathname, ") is incompatible with the `href` value (").concat(route, "). ") + "Read more: https://err.sh/vercel/next.js/incompatible-href-as");

              case 44:
                _context.next = 47;
                break;

              case 46:
                // Merge params into `query`, overwriting any specified in search
                Object.assign(query, routeMatch);

              case 47:
                Router.events.emit('routeChangeStart', as);
                _context.prev = 48;
                _context.next = 51;
                return this.getRouteInfo(route, pathname, query, as, shallow);

              case 51:
                routeInfo = _context.sent;
                error = routeInfo.error;
                Router.events.emit('beforeHistoryChange', as);
                this.changeState(method, url, as, options);

                if (true) {
                  appComp = this.components['/_app'].Component;
                  window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
                }

                _context.next = 58;
                return this.set(route, pathname, query, cleanedAs, routeInfo)["catch"](function (e) {
                  if (e.cancelled) error = error || e;else throw e;
                });

              case 58:
                if (!error) {
                  _context.next = 61;
                  break;
                }

                Router.events.emit('routeChangeError', error, cleanedAs);
                throw error;

              case 61:
                if (false) {}

                Router.events.emit('routeChangeComplete', as);
                return _context.abrupt("return", true);

              case 66:
                _context.prev = 66;
                _context.t0 = _context["catch"](48);

                if (!_context.t0.cancelled) {
                  _context.next = 70;
                  break;
                }

                return _context.abrupt("return", false);

              case 70:
                throw _context.t0;

              case 71:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[48, 66]]);
      }));

      function change(_x, _x2, _x3, _x4) {
        return _change.apply(this, arguments);
      }

      return change;
    }()
  }, {
    key: "changeState",
    value: function changeState(method, url, as) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      if (true) {
        if (typeof window.history === 'undefined') {
          console.error("Warning: window.history is not available.");
          return;
        }

        if (typeof window.history[method] === 'undefined') {
          console.error("Warning: window.history.".concat(method, " is not available"));
          return;
        }
      }

      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
        this._shallow = options.shallow;
        window.history[method]({
          url: url,
          as: as,
          options: options,
          __N: true
        }, // Most browsers currently ignores this parameter, although they may use it in the future.
        // Passing the empty string here should be safe against future changes to the method.
        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
        '', as);
      }
    }
  }, {
    key: "handleRouteInfoError",
    value: function () {
      var _handleRouteInfoError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err, pathname, query, as, loadErrorFail) {
        var _yield$this$fetchComp, Component, styleSheets, routeInfo;

        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!err.cancelled) {
                  _context2.next = 2;
                  break;
                }

                throw err;

              case 2:
                if (!(PAGE_LOAD_ERROR in err || loadErrorFail)) {
                  _context2.next = 6;
                  break;
                }

                Router.events.emit('routeChangeError', err, as); // If we can't load the page it could be one of following reasons
                //  1. Page doesn't exists
                //  2. Page does exist in a different zone
                //  3. Internal error while loading the page
                // So, doing a hard reload is the proper way to deal with this.

                window.location.href = as; // Changing the URL doesn't block executing the current code path.
                // So let's throw a cancellation error stop the routing logic.

                throw buildCancellationError();

              case 6:
                _context2.prev = 6;
                _context2.next = 9;
                return this.fetchComponent('/_error');

              case 9:
                _yield$this$fetchComp = _context2.sent;
                Component = _yield$this$fetchComp.page;
                styleSheets = _yield$this$fetchComp.styleSheets;
                routeInfo = {
                  Component: Component,
                  styleSheets: styleSheets,
                  err: err,
                  error: err
                };
                _context2.prev = 13;
                _context2.next = 16;
                return this.getInitialProps(Component, {
                  err: err,
                  pathname: pathname,
                  query: query
                });

              case 16:
                routeInfo.props = _context2.sent;
                _context2.next = 23;
                break;

              case 19:
                _context2.prev = 19;
                _context2.t0 = _context2["catch"](13);
                console.error('Error in error page `getInitialProps`: ', _context2.t0);
                routeInfo.props = {};

              case 23:
                return _context2.abrupt("return", routeInfo);

              case 26:
                _context2.prev = 26;
                _context2.t1 = _context2["catch"](6);
                return _context2.abrupt("return", this.handleRouteInfoError(_context2.t1, pathname, query, as, true));

              case 29:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[6, 26], [13, 19]]);
      }));

      function handleRouteInfoError(_x5, _x6, _x7, _x8, _x9) {
        return _handleRouteInfoError.apply(this, arguments);
      }

      return handleRouteInfoError;
    }()
  }, {
    key: "getRouteInfo",
    value: function () {
      var _getRouteInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(route, pathname, query, as) {
        var _this3 = this;

        var shallow,
            cachedRouteInfo,
            routeInfo,
            Component,
            __N_SSG,
            __N_SSP,
            _require,
            isValidElementType,
            dataHref,
            props,
            _args3 = arguments;

        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                shallow = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : false;
                _context3.prev = 1;
                cachedRouteInfo = this.components[route];

                if (!(shallow && cachedRouteInfo && this.route === route)) {
                  _context3.next = 5;
                  break;
                }

                return _context3.abrupt("return", cachedRouteInfo);

              case 5:
                if (!cachedRouteInfo) {
                  _context3.next = 9;
                  break;
                }

                _context3.t0 = cachedRouteInfo;
                _context3.next = 12;
                break;

              case 9:
                _context3.next = 11;
                return this.fetchComponent(route).then(function (res) {
                  return {
                    Component: res.page,
                    styleSheets: res.styleSheets,
                    __N_SSG: res.mod.__N_SSG,
                    __N_SSP: res.mod.__N_SSP
                  };
                });

              case 11:
                _context3.t0 = _context3.sent;

              case 12:
                routeInfo = _context3.t0;
                Component = routeInfo.Component, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP;

                if (false) {}

                _require = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js"), isValidElementType = _require.isValidElementType;

                if (isValidElementType(Component)) {
                  _context3.next = 18;
                  break;
                }

                throw new Error("The default export is not a React Component in page: \"".concat(pathname, "\""));

              case 18:
                if (__N_SSG || __N_SSP) {
                  dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({
                    pathname: pathname,
                    query: query
                  }), delBasePath(as), __N_SSG);
                }

                _context3.next = 21;
                return this._getData(function () {
                  return __N_SSG ? _this3._getStaticData(dataHref) : __N_SSP ? _this3._getServerData(dataHref) : _this3.getInitialProps(Component, // we provide AppTree later so this needs to be `any`
                  {
                    pathname: pathname,
                    query: query,
                    asPath: as
                  });
                });

              case 21:
                props = _context3.sent;
                routeInfo.props = props;
                this.components[route] = routeInfo;
                return _context3.abrupt("return", routeInfo);

              case 27:
                _context3.prev = 27;
                _context3.t1 = _context3["catch"](1);
                return _context3.abrupt("return", this.handleRouteInfoError(_context3.t1, pathname, query, as));

              case 30:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 27]]);
      }));

      function getRouteInfo(_x10, _x11, _x12, _x13) {
        return _getRouteInfo.apply(this, arguments);
      }

      return getRouteInfo;
    }()
  }, {
    key: "set",
    value: function set(route, pathname, query, as, data) {
      this.isFallback = false;
      this.route = route;
      this.pathname = pathname;
      this.query = query;
      this.asPath = as;
      return this.notify(data);
    }
    /**
    * Callback to execute before replacing router state
    * @param cb callback to be executed
    */

  }, {
    key: "beforePopState",
    value: function beforePopState(cb) {
      this._bps = cb;
    }
  }, {
    key: "onlyAHashChange",
    value: function onlyAHashChange(as) {
      if (!this.asPath) return false;

      var _this$asPath$split = this.asPath.split('#'),
          _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),
          oldUrlNoHash = _this$asPath$split2[0],
          oldHash = _this$asPath$split2[1];

      var _as$split = as.split('#'),
          _as$split2 = _slicedToArray(_as$split, 2),
          newUrlNoHash = _as$split2[0],
          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same


      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
        return true;
      } // If the urls are change, there's more than a hash change


      if (oldUrlNoHash !== newUrlNoHash) {
        return false;
      } // If the hash has changed, then it's a hash only change.
      // This check is necessary to handle both the enter and
      // leave hash === '' cases. The identity case falls through
      // and is treated as a next reload.


      return oldHash !== newHash;
    }
  }, {
    key: "scrollToHash",
    value: function scrollToHash(as) {
      var _as$split3 = as.split('#'),
          _as$split4 = _slicedToArray(_as$split3, 2),
          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value


      if (hash === '') {
        window.scrollTo(0, 0);
        return;
      } // First we check if the element by id is found


      var idEl = document.getElementById(hash);

      if (idEl) {
        idEl.scrollIntoView();
        return;
      } // If there's no element with the id, we check the `name` property
      // To mirror browsers


      var nameEl = document.getElementsByName(hash)[0];

      if (nameEl) {
        nameEl.scrollIntoView();
      }
    }
  }, {
    key: "urlIsNew",
    value: function urlIsNew(asPath) {
      return this.asPath !== asPath;
    }
  }, {
    key: "_resolveHref",
    value: function _resolveHref(parsedHref, pages) {
      var pathname = parsedHref.pathname;
      var cleanPathname = (0, _denormalizePagePath.denormalizePagePath)(delBasePath(pathname));

      if (cleanPathname === '/404' || cleanPathname === '/_error') {
        return parsedHref;
      } // handle resolving href for dynamic routes


      if (!pages.includes(cleanPathname)) {
        // eslint-disable-next-line array-callback-return
        pages.some(function (page) {
          if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {
            parsedHref.pathname = addBasePath(page);
            return true;
          }
        });
      }

      return parsedHref;
    }
    /**
    * Prefetch page code, you may wait for the data during page rendering.
    * This feature only works in production!
    * @param url the href of prefetched page
    * @param asPath the as path of the prefetched page
    */

  }, {
    key: "prefetch",
    value: function () {
      var _prefetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url) {
        var asPath,
            options,
            parsed,
            _parsed2,
            pathname,
            pages,
            route,
            _args4 = arguments;

        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                asPath = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : url;
                options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};
                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
                _parsed2 = parsed, pathname = _parsed2.pathname;
                _context4.next = 6;
                return this.pageLoader.getPageList();

              case 6:
                pages = _context4.sent;
                parsed = this._resolveHref(parsed, pages);

                if (parsed.pathname !== pathname) {
                  pathname = parsed.pathname;
                  url = (0, _utils.formatWithValidation)(parsed);
                } // Prefetch is not supported in development mode because it would trigger on-demand-entries


                if (false) {}

                return _context4.abrupt("return");

              case 11:
                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
                _context4.next = 14;
                return Promise.all([this.pageLoader.prefetchData(url, asPath), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);

              case 14:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function prefetch(_x14) {
        return _prefetch.apply(this, arguments);
      }

      return prefetch;
    }()
  }, {
    key: "fetchComponent",
    value: function () {
      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(route) {
        var cancelled, cancel, componentResult, error;
        return _regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                cancelled = false;

                cancel = this.clc = function () {
                  cancelled = true;
                };

                _context5.next = 4;
                return this.pageLoader.loadPage(route);

              case 4:
                componentResult = _context5.sent;

                if (!cancelled) {
                  _context5.next = 9;
                  break;
                }

                error = new Error("Abort fetching component for route: \"".concat(route, "\""));
                error.cancelled = true;
                throw error;

              case 9:
                if (cancel === this.clc) {
                  this.clc = null;
                }

                return _context5.abrupt("return", componentResult);

              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function fetchComponent(_x15) {
        return _fetchComponent.apply(this, arguments);
      }

      return fetchComponent;
    }()
  }, {
    key: "_getData",
    value: function _getData(fn) {
      var _this4 = this;

      var cancelled = false;

      var cancel = function cancel() {
        cancelled = true;
      };

      this.clc = cancel;
      return fn().then(function (data) {
        if (cancel === _this4.clc) {
          _this4.clc = null;
        }

        if (cancelled) {
          var err = new Error('Loading initial props cancelled');
          err.cancelled = true;
          throw err;
        }

        return data;
      });
    }
  }, {
    key: "_getStaticData",
    value: function _getStaticData(dataHref) {
      var _this5 = this;

      var _URL = new URL(dataHref, window.location.href),
          cacheKey = _URL.href;

      if (false) {}

      return fetchNextData(dataHref, this.isSsr).then(function (data) {
        _this5.sdc[cacheKey] = data;
        return data;
      });
    }
  }, {
    key: "_getServerData",
    value: function _getServerData(dataHref) {
      return fetchNextData(dataHref, this.isSsr);
    }
  }, {
    key: "getInitialProps",
    value: function getInitialProps(Component, ctx) {
      var App = this.components['/_app'].Component;

      var AppTree = this._wrapApp(App);

      ctx.AppTree = AppTree;
      return (0, _utils.loadGetInitialProps)(App, {
        AppTree: AppTree,
        Component: Component,
        router: this,
        ctx: ctx
      });
    }
  }, {
    key: "abortComponentLoad",
    value: function abortComponentLoad(as) {
      if (this.clc) {
        Router.events.emit('routeChangeError', buildCancellationError(), as);
        this.clc();
        this.clc = null;
      }
    }
  }, {
    key: "notify",
    value: function notify(data) {
      return this.sub(data, this.components['/_app'].Component);
    }
  }]);

  return Router;
}();

exports["default"] = Router;
Router.events = (0, _mitt["default"])();

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/format-url.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.formatUrl = formatUrl;

var querystring = _interopRequireWildcard(__webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
} // Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var slashedProtocols = /https?|ftp|gopher|file/;

function formatUrl(urlObj) {
  var auth = urlObj.auth,
      hostname = urlObj.hostname;
  var protocol = urlObj.protocol || '';
  var pathname = urlObj.pathname || '';
  var hash = urlObj.hash || '';
  var query = urlObj.query || '';
  var host = false;
  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';

  if (urlObj.host) {
    host = auth + urlObj.host;
  } else if (hostname) {
    host = auth + (~hostname.indexOf(':') ? "[".concat(hostname, "]") : hostname);

    if (urlObj.port) {
      host += ':' + urlObj.port;
    }
  }

  if (query && typeof query === 'object') {
    query = String(querystring.urlQueryToSearchParams(query));
  }

  var search = urlObj.search || query && "?".concat(query) || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash[0] !== '#') hash = '#' + hash;
  if (search && search[0] !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, encodeURIComponent);
  search = search.replace('#', '%23');
  return "".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string

var TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.parseRelativeUrl = parseRelativeUrl;

var _utils = __webpack_require__(/*! ../../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var DUMMY_BASE = new URL(false ? undefined : (0, _utils.getLocationOrigin)());
/**
* Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative
* (e.g. `./hello`) then at least base must be.
* Absolute urls are rejected with one exception, in the browser, absolute urls that are on
* the current origin will be parsed as relative
*/

function parseRelativeUrl(url, base) {
  var resolvedBase = base ? new URL(base, DUMMY_BASE) : DUMMY_BASE;

  var _URL = new URL(url, resolvedBase),
      pathname = _URL.pathname,
      searchParams = _URL.searchParams,
      search = _URL.search,
      hash = _URL.hash,
      href = _URL.href,
      origin = _URL.origin,
      protocol = _URL.protocol;

  if (origin !== DUMMY_BASE.origin || protocol !== 'http:' && protocol !== 'https:') {
    throw new Error('invariant: invalid relative URL');
  }

  return {
    pathname: pathname,
    searchParams: searchParams,
    search: search,
    hash: hash,
    href: href.slice(DUMMY_BASE.origin.length)
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/path-match.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/path-match.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _defineProperty = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

exports.__esModule = true;
exports.pathToRegexp = exports["default"] = exports.customRouteMatcherOptions = exports.matcherOptions = void 0;

var pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ "./node_modules/next/dist/compiled/path-to-regexp/index.js"));

exports.pathToRegexp = pathToRegexp;

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var matcherOptions = {
  sensitive: false,
  delimiter: '/',
  decode: decodeParam
};
exports.matcherOptions = matcherOptions;

var customRouteMatcherOptions = _objectSpread(_objectSpread({}, matcherOptions), {}, {
  strict: true
});

exports.customRouteMatcherOptions = customRouteMatcherOptions;

var _default = function _default() {
  var customRoute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return function (path) {
    var keys = [];
    var matcherRegex = pathToRegexp.pathToRegexp(path, keys, customRoute ? customRouteMatcherOptions : matcherOptions);
    var matcher = pathToRegexp.regexpToFunction(matcherRegex, keys, matcherOptions);
    return function (pathname, params) {
      var res = pathname == null ? false : matcher(pathname);

      if (!res) {
        return false;
      }

      if (customRoute) {
        var _iterator = _createForOfIteratorHelper(keys),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var key = _step.value;

            // unnamed params should be removed as they
            // are not allowed to be used in the destination
            if (typeof key.name === 'number') {
              delete res.params[key.name];
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }

      return _objectSpread(_objectSpread({}, params), res.params);
    };
  };
};

exports["default"] = _default;

function decodeParam(param) {
  try {
    return decodeURIComponent(param);
  } catch (_) {
    var _err = new Error('failed to decode param');

    _err.code = 'DECODE_FAILED';
    throw _err;
  }
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _defineProperty = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");

var _slicedToArray = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

exports.__esModule = true;
exports["default"] = prepareDestination;

var _querystring = __webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");

var _parseRelativeUrl = __webpack_require__(/*! ./parse-relative-url */ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");

var pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ "./node_modules/next/dist/compiled/path-to-regexp/index.js"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function prepareDestination(destination, params, query, appendParamsToQuery, basePath) {
  var parsedDestination = {};

  if (destination.startsWith('/')) {
    parsedDestination = (0, _parseRelativeUrl.parseRelativeUrl)(destination);
  } else {
    var _URL = new URL(destination),
        pathname = _URL.pathname,
        searchParams = _URL.searchParams,
        hash = _URL.hash,
        hostname = _URL.hostname,
        port = _URL.port,
        protocol = _URL.protocol,
        search = _URL.search,
        href = _URL.href;

    parsedDestination = {
      pathname: pathname,
      searchParams: searchParams,
      hash: hash,
      protocol: protocol,
      hostname: hostname,
      port: port,
      search: search,
      href: href
    };
  }

  parsedDestination.query = (0, _querystring.searchParamsToUrlQuery)(parsedDestination.searchParams);
  var destQuery = parsedDestination.query;
  var destPath = "".concat(parsedDestination.pathname).concat(parsedDestination.hash || '');
  var destPathParamKeys = [];
  pathToRegexp.pathToRegexp(destPath, destPathParamKeys);
  var destPathParams = destPathParamKeys.map(function (key) {
    return key.name;
  });
  var destinationCompiler = pathToRegexp.compile(destPath, // we don't validate while compiling the destination since we should
  // have already validated before we got to this point and validating
  // breaks compiling destinations with named pattern params from the source
  // e.g. /something:hello(.*) -> /another/:hello is broken with validation
  // since compile validation is meant for reversing and not for inserting
  // params from a separate path-regex into another
  {
    validate: false
  });
  var newUrl; // update any params in query values

  for (var _i = 0, _Object$entries = Object.entries(destQuery); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
        key = _Object$entries$_i[0],
        strOrArray = _Object$entries$_i[1];

    var value = Array.isArray(strOrArray) ? strOrArray[0] : strOrArray;

    if (value) {
      // the value needs to start with a forward-slash to be compiled
      // correctly
      value = "/".concat(value);
      var queryCompiler = pathToRegexp.compile(value, {
        validate: false
      });
      value = queryCompiler(params).substr(1);
    }

    destQuery[key] = value;
  } // add path params to query if it's not a redirect and not
  // already defined in destination query or path


  var paramKeys = Object.keys(params);

  if (appendParamsToQuery && !paramKeys.some(function (key) {
    return destPathParams.includes(key);
  })) {
    var _iterator = _createForOfIteratorHelper(paramKeys),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _key = _step.value;

        if (!(_key in destQuery)) {
          destQuery[_key] = params[_key];
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  var shouldAddBasePath = destination.startsWith('/') && basePath;

  try {
    newUrl = "".concat(shouldAddBasePath ? basePath : '').concat(encodeURI(destinationCompiler(params)));

    var _newUrl$split = newUrl.split('#'),
        _newUrl$split2 = _slicedToArray(_newUrl$split, 2),
        _pathname = _newUrl$split2[0],
        _hash = _newUrl$split2[1];

    parsedDestination.pathname = _pathname;
    parsedDestination.hash = "".concat(_hash ? '#' : '').concat(_hash || '');
    delete parsedDestination.search;
    delete parsedDestination.searchParams;
  } catch (err) {
    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {
      throw new Error("To use a multi-match in the destination you must add `*` at the end of the param name to signify it should repeat. https://err.sh/vercel/next.js/invalid-multi-match");
    }

    throw err;
  } // Query merge order lowest priority to highest
  // 1. initial URL query values
  // 2. path segment values
  // 3. destination specified query values


  parsedDestination.query = _objectSpread(_objectSpread({}, query), parsedDestination.query);
  return {
    newUrl: newUrl,
    parsedDestination: parsedDestination
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/querystring.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _slicedToArray = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

exports.__esModule = true;
exports.searchParamsToUrlQuery = searchParamsToUrlQuery;
exports.urlQueryToSearchParams = urlQueryToSearchParams;
exports.assign = assign;

function searchParamsToUrlQuery(searchParams) {
  var query = {};
  searchParams.forEach(function (value, key) {
    if (typeof query[key] === 'undefined') {
      query[key] = value;
    } else if (Array.isArray(query[key])) {
      ;
      query[key].push(value);
    } else {
      query[key] = [query[key], value];
    }
  });
  return query;
}

function urlQueryToSearchParams(urlQuery) {
  var result = new URLSearchParams();
  Object.entries(urlQuery).forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    if (Array.isArray(value)) {
      value.forEach(function (item) {
        return result.append(key, item);
      });
    } else {
      result.set(key, value);
    }
  });
  return result;
}

function assign(target) {
  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    searchParamsList[_key - 1] = arguments[_key];
  }

  searchParamsList.forEach(function (searchParams) {
    Array.from(searchParams.keys()).forEach(function (key) {
      return target["delete"](key);
    });
    searchParams.forEach(function (value, key) {
      return target.append(key, value);
    });
  });
  return target;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

exports.__esModule = true;
exports["default"] = resolveRewrites;

var _pathMatch = _interopRequireDefault(__webpack_require__(/*! ./path-match */ "./node_modules/next/dist/next-server/lib/router/utils/path-match.js"));

var _prepareDestination = _interopRequireDefault(__webpack_require__(/*! ./prepare-destination */ "./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var customRouteMatcher = (0, _pathMatch["default"])(true);

function resolveRewrites(asPath, pages, basePath, rewrites, query, resolveHref) {
  if (!pages.includes(asPath)) {
    var _iterator = _createForOfIteratorHelper(rewrites),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var rewrite = _step.value;
        var matcher = customRouteMatcher(rewrite.source);
        var params = matcher(asPath);

        if (params) {
          if (!rewrite.destination) {
            // this is a proxied rewrite which isn't handled on the client
            break;
          }

          var destRes = (0, _prepareDestination["default"])(rewrite.destination, params, query, true, rewrite.basePath === false ? '' : basePath);
          asPath = destRes.parsedDestination.pathname;
          Object.assign(query, destRes.parsedDestination.query);

          if (pages.includes(asPath)) {
            // check if we now match a page as this means we are done
            // resolving the rewrites
            break;
          } // check if we match a dynamic-route, if so we break the rewrites chain


          var resolvedHref = resolveHref(asPath);

          if (resolvedHref !== asPath && pages.includes(resolvedHref)) {
            break;
          }
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  return asPath;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.getRouteMatcher = getRouteMatcher;

function getRouteMatcher(routeRegex) {
  var re = routeRegex.re,
      groups = routeRegex.groups;
  return function (pathname) {
    var routeMatch = re.exec(pathname);

    if (!routeMatch) {
      return false;
    }

    var decode = function decode(param) {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        var err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };

    var params = {};
    Object.keys(groups).forEach(function (slugName) {
      var g = groups[slugName];
      var m = routeMatch[g.pos];

      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(function (entry) {
          return decode(entry);
        }) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
// to reduce bytes

function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}

function parseParameter(param) {
  var optional = param.startsWith('[') && param.endsWith(']');

  if (optional) {
    param = param.slice(1, -1);
  }

  var repeat = param.startsWith('...');

  if (repeat) {
    param = param.slice(3);
  }

  return {
    key: param,
    repeat: repeat,
    optional: optional
  };
}

function getRouteRegex(normalizedRoute) {
  var segments = (normalizedRoute.replace(/\/$/, '') || '/').slice(1).split('/');
  var groups = {};
  var groupIndex = 1;
  var parameterizedRoute = segments.map(function (segment) {
    if (segment.startsWith('[') && segment.endsWith(']')) {
      var _parseParameter = parseParameter(segment.slice(1, -1)),
          key = _parseParameter.key,
          optional = _parseParameter.optional,
          repeat = _parseParameter.repeat;

      groups[key] = {
        pos: groupIndex++,
        repeat: repeat,
        optional: optional
      };
      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
    } else {
      return "/".concat(escapeRegex(segment));
    }
  }).join(''); // dead code eliminate for browser since it's only needed
  // while generating routes-manifest

  if (false) { var namedParameterizedRoute, routeKeys, getSafeRouteKey, routeKeyCharLength, routeKeyCharCode; }

  return {
    re: new RegExp("^".concat(parameterizedRoute, "(?:/)?$")),
    groups: groups
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js");

exports.__esModule = true;
exports.execOnce = execOnce;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.formatWithValidation = formatWithValidation;
exports.ST = exports.SP = exports.urlObjectKeys = void 0;

var _formatUrl = __webpack_require__(/*! ./router/utils/format-url */ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js");
/**
* Utils
*/


function execOnce(fn) {
  var used = false;
  var result;
  return function () {
    if (!used) {
      used = true;
      result = fn.apply(void 0, arguments);
    }

    return result;
  };
}

function getLocationOrigin() {
  var _window$location = window.location,
      protocol = _window$location.protocol,
      hostname = _window$location.hostname,
      port = _window$location.port;
  return "".concat(protocol, "//").concat(hostname).concat(port ? ':' + port : '');
}

function getURL() {
  var href = window.location.href;
  var origin = getLocationOrigin();
  return href.substring(origin.length);
}

function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}

function isResSent(res) {
  return res.finished || res.headersSent;
}

function loadGetInitialProps(_x, _x2) {
  return _loadGetInitialProps.apply(this, arguments);
}

function _loadGetInitialProps() {
  _loadGetInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(App, ctx) {
    var _App$prototype, message, res, props, _message;

    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (false) {}

            if (!((_App$prototype = App.prototype) === null || _App$prototype === void 0 ? void 0 : _App$prototype.getInitialProps)) {
              _context.next = 4;
              break;
            }

            message = "\"".concat(getDisplayName(App), ".getInitialProps()\" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.");
            throw new Error(message);

          case 4:
            // when called from _app `ctx` is nested in `ctx`
            res = ctx.res || ctx.ctx && ctx.ctx.res;

            if (App.getInitialProps) {
              _context.next = 12;
              break;
            }

            if (!(ctx.ctx && ctx.Component)) {
              _context.next = 11;
              break;
            }

            _context.next = 9;
            return loadGetInitialProps(ctx.Component, ctx.ctx);

          case 9:
            _context.t0 = _context.sent;
            return _context.abrupt("return", {
              pageProps: _context.t0
            });

          case 11:
            return _context.abrupt("return", {});

          case 12:
            _context.next = 14;
            return App.getInitialProps(ctx);

          case 14:
            props = _context.sent;

            if (!(res && isResSent(res))) {
              _context.next = 17;
              break;
            }

            return _context.abrupt("return", props);

          case 17:
            if (props) {
              _context.next = 20;
              break;
            }

            _message = "\"".concat(getDisplayName(App), ".getInitialProps()\" should resolve to an object. But found \"").concat(props, "\" instead.");
            throw new Error(_message);

          case 20:
            if (true) {
              if (Object.keys(props).length === 0 && !ctx.ctx) {
                console.warn("".concat(getDisplayName(App), " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps"));
              }
            }

            return _context.abrupt("return", props);

          case 22:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _loadGetInitialProps.apply(this, arguments);
}

var urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];
exports.urlObjectKeys = urlObjectKeys;

function formatWithValidation(url) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(function (key) {
        if (urlObjectKeys.indexOf(key) === -1) {
          console.warn("Unknown key passed via urlObject into url.format: ".concat(key));
        }
      });
    }
  }

  return (0, _formatUrl.formatUrl)(url);
}

var SP = typeof performance !== 'undefined';
exports.SP = SP;
var ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';
exports.ST = ST;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/server/denormalize-page-path.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/server/denormalize-page-path.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.__esModule=true;exports.normalizePathSep=normalizePathSep;exports.denormalizePagePath=denormalizePagePath;function normalizePathSep(path){return path.replace(/\\/g,'/');}function denormalizePagePath(page){page=normalizePathSep(page);if(page.startsWith('/index/')){page=page.slice(6);}else if(page==='/index'){page='/';}return page;}
//# sourceMappingURL=denormalize-page-path.js.map

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

var _assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");
var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var ReactVersion = '16.13.1';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  suspense: null
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
function describeComponentFrame (name, source, ownerName) {
  var sourceInfo = '';

  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');

    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);

        if (match) {
          var pathBeforeSlash = match[1];

          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }

    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }

  return '\n    in ' + (name || 'Unknown') + sourceInfo;
}

var Resolved = 1;
function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return "Profiler";

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';

      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type.render);

      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);

          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }

          break;
        }
    }
  }

  return null;
}

var ReactDebugCurrentFrame = {};
var currentlyValidatingElement = null;
function setCurrentlyValidatingElement(element) {
  {
    currentlyValidatingElement = element;
  }
}

{
  // Stack implementation injected by the current renderer.
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentlyValidatingElement) {
      var name = getComponentName(currentlyValidatingElement.type);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

/**
 * Used by act() to track whether you're inside an act() scope.
 */
var IsSomeRendererActing = {
  current: false
};

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: _assign
};

{
  _assign(ReactSharedInternals, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    printWarning('warn', format, args);
  }
}
function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === 'string' && args[args.length - 1].indexOf('\n    in') === 0;

    if (!hasExistingStack) {
      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      var stack = ReactDebugCurrentFrame.getStackAddendum();

      if (stack !== '') {
        format += '%s';
        args = args.concat([stack]);
      }
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
    {
      throw Error( "setState(...): takes an object of state variables to update or a function which returns an object of state variables." );
    }
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

_assign(pureComponentPrototype, Component.prototype);

pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (!!(element === null || element === undefined)) {
    {
      throw Error( "React.cloneElement(...): The argument must be a React element, but you passed " + element + "." );
    }
  }

  var propName; // Original props are copied

  var props = _assign({}, element.props); // Reserved names are extracted


  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];

function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;

  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}
/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */


function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {

      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is deprecated and will be removed in ' + 'a future major release. Consider converting children to ' + 'an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';

      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }

      var childrenString = '' + children;

      {
        {
          throw Error( "Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + ")." + addendum );
        }
      }
    }
  }

  return subtreeCount;
}
/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */


function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}
/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;
  func.call(context, child, bookKeeping.count++);
}
/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */


function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;
  var mappedChild = func.call(context, child, bookKeeping.count++);

  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
      return c;
    });
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }

    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';

  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }

  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}
/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */


function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  return traverseAllChildren(children, function () {
    return null;
  }, null);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
    return child;
  });
  return result;
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    {
      throw Error( "React.Children.only expected to receive a single React element child." );
    }
  }

  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {
        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);
      }
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function lazy(ctor) {
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _ctor: ctor,
    // React uses these fields to store the result.
    _status: -1,
    _result: null
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes;
    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  return {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  if (!(dispatcher !== null)) {
    {
      throw Error( "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem." );
    }
  }

  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();

  {
    if (unstable_observedBits !== undefined) {
      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');
    } // TODO: add a more generic warning for invalid values.


    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context, unstable_observedBits);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
  }

  setCurrentlyValidatingElement(element);

  {
    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
  }

  setCurrentlyValidatingElement(null);
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var name = getComponentName(type);
    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      setCurrentlyValidatingElement(element);
      checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
      setCurrentlyValidatingElement(null);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true;

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    setCurrentlyValidatingElement(fragment);
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        break;
      }
    }

    if (fragment.ref !== null) {
      error('Invalid attribute `ref` supplied to `React.Fragment`.');
    }

    setCurrentlyValidatingElement(null);
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

{

  try {
    var frozenObject = Object.freeze({});
    var testMap = new Map([[frozenObject, null]]);
    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.

    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.Fragment = REACT_FRAGMENT_TYPE;
exports.Profiler = REACT_PROFILER_TYPE;
exports.PureComponent = PureComponent;
exports.StrictMode = REACT_STRICT_MODE_TYPE;
exports.Suspense = REACT_SUSPENSE_TYPE;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useEffect = useEffect;
exports.useImperativeHandle = useImperativeHandle;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.version = ReactVersion;
  })();
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AdanuApp; });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_reset_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/reset.css */ "./styles/reset.css");
/* harmony import */ var _styles_reset_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_reset_css__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _styles_style_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/style.css */ "./styles/style.css");
/* harmony import */ var _styles_style_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_style_css__WEBPACK_IMPORTED_MODULE_3__);

var _jsxFileName = "C:\\Users\\SameeraSubair\\Source\\Repos\\Adanu\\pages\\_app.js";

var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;


function AdanuApp(_ref) {
  var Component = _ref.Component,
      pageProps = _ref.pageProps;
  return __jsx(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, pageProps, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 5,
      columnNumber: 12
    }
  }));
}
_c = AdanuApp;

var _c;

$RefreshReg$(_c, "AdanuApp");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ }),

/***/ "./styles/reset.css":
/*!**************************!*\
  !*** ./styles/reset.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./reset.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/reset.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b) {
  if (!a && b || a && !b) {
    return false;
  }

  var p;

  for (p in a) {
    if (a[p] !== b[p]) {
      return false;
    }
  }

  for (p in b) {
    if (!a[p]) {
      return false;
    }
  }

  return true;
};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./reset.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/reset.css",
      function () {
        content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./reset.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/reset.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./styles/style.css":
/*!**************************!*\
  !*** ./styles/style.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./style.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/style.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b) {
  if (!a && b || a && !b) {
    return false;
  }

  var p;

  for (p in a) {
    if (a[p] !== b[p]) {
      return false;
    }
  }

  for (p in b) {
    if (!a[p]) {
      return false;
    }
  }

  return true;
};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./style.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/style.css",
      function () {
        content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./style.css */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/style.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ 0:
/*!*******************************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ./node_modules/next/dist/client/router.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./");
module.exports = __webpack_require__(/*! C:\Users\SameeraSubair\Source\Repos\Adanu\node_modules\next\dist\client\router.js */"./node_modules/next/dist/client/router.js");


/***/ })

},[[0,"webpack"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,